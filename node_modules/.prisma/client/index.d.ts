
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model Role
 * 
 */
export type Role = $Result.DefaultSelection<Prisma.$RolePayload>
/**
 * Model Profile
 * 
 */
export type Profile = $Result.DefaultSelection<Prisma.$ProfilePayload>
/**
 * Model StudyProgram
 * 
 */
export type StudyProgram = $Result.DefaultSelection<Prisma.$StudyProgramPayload>
/**
 * Model SensitiveStudentData
 * 
 */
export type SensitiveStudentData = $Result.DefaultSelection<Prisma.$SensitiveStudentDataPayload>
/**
 * Model News
 * 
 */
export type News = $Result.DefaultSelection<Prisma.$NewsPayload>
/**
 * Model Event
 * 
 */
export type Event = $Result.DefaultSelection<Prisma.$EventPayload>
/**
 * Model AlumniProgram
 * 
 */
export type AlumniProgram = $Result.DefaultSelection<Prisma.$AlumniProgramPayload>
/**
 * Model TracerStudy
 * 
 */
export type TracerStudy = $Result.DefaultSelection<Prisma.$TracerStudyPayload>
/**
 * Model Category
 * 
 */
export type Category = $Result.DefaultSelection<Prisma.$CategoryPayload>
/**
 * Model Product
 * 
 */
export type Product = $Result.DefaultSelection<Prisma.$ProductPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const NewsStatus: {
  Menunggu_Persetujuan: 'Menunggu_Persetujuan',
  Diverifikasi_Oleh_Universitas: 'Diverifikasi_Oleh_Universitas',
  Ditolak: 'Ditolak'
};

export type NewsStatus = (typeof NewsStatus)[keyof typeof NewsStatus]


export const EventStatus: {
  Menunggu_Persetujuan: 'Menunggu_Persetujuan',
  Diverifikasi_Oleh_Universitas: 'Diverifikasi_Oleh_Universitas',
  Ditolak: 'Ditolak'
};

export type EventStatus = (typeof EventStatus)[keyof typeof EventStatus]


export const ProgramType: {
  Lowongan_Kerja: 'Lowongan_Kerja',
  Reuni: 'Reuni',
  Penggalangan_Dana: 'Penggalangan_Dana',
  Sesi_Berbagi_Pengalaman: 'Sesi_Berbagi_Pengalaman'
};

export type ProgramType = (typeof ProgramType)[keyof typeof ProgramType]


export const AlumniProgramStatus: {
  Menunggu_Persetujuan: 'Menunggu_Persetujuan',
  Diverifikasi_Oleh_Prodi: 'Diverifikasi_Oleh_Prodi',
  Diverifikasi_Oleh_Universitas: 'Diverifikasi_Oleh_Universitas',
  Ditolak: 'Ditolak'
};

export type AlumniProgramStatus = (typeof AlumniProgramStatus)[keyof typeof AlumniProgramStatus]

}

export type NewsStatus = $Enums.NewsStatus

export const NewsStatus: typeof $Enums.NewsStatus

export type EventStatus = $Enums.EventStatus

export const EventStatus: typeof $Enums.EventStatus

export type ProgramType = $Enums.ProgramType

export const ProgramType: typeof $Enums.ProgramType

export type AlumniProgramStatus = $Enums.AlumniProgramStatus

export const AlumniProgramStatus: typeof $Enums.AlumniProgramStatus

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs>;

  /**
   * `prisma.role`: Exposes CRUD operations for the **Role** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Roles
    * const roles = await prisma.role.findMany()
    * ```
    */
  get role(): Prisma.RoleDelegate<ExtArgs>;

  /**
   * `prisma.profile`: Exposes CRUD operations for the **Profile** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Profiles
    * const profiles = await prisma.profile.findMany()
    * ```
    */
  get profile(): Prisma.ProfileDelegate<ExtArgs>;

  /**
   * `prisma.studyProgram`: Exposes CRUD operations for the **StudyProgram** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more StudyPrograms
    * const studyPrograms = await prisma.studyProgram.findMany()
    * ```
    */
  get studyProgram(): Prisma.StudyProgramDelegate<ExtArgs>;

  /**
   * `prisma.sensitiveStudentData`: Exposes CRUD operations for the **SensitiveStudentData** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SensitiveStudentData
    * const sensitiveStudentData = await prisma.sensitiveStudentData.findMany()
    * ```
    */
  get sensitiveStudentData(): Prisma.SensitiveStudentDataDelegate<ExtArgs>;

  /**
   * `prisma.news`: Exposes CRUD operations for the **News** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more News
    * const news = await prisma.news.findMany()
    * ```
    */
  get news(): Prisma.NewsDelegate<ExtArgs>;

  /**
   * `prisma.event`: Exposes CRUD operations for the **Event** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Events
    * const events = await prisma.event.findMany()
    * ```
    */
  get event(): Prisma.EventDelegate<ExtArgs>;

  /**
   * `prisma.alumniProgram`: Exposes CRUD operations for the **AlumniProgram** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AlumniPrograms
    * const alumniPrograms = await prisma.alumniProgram.findMany()
    * ```
    */
  get alumniProgram(): Prisma.AlumniProgramDelegate<ExtArgs>;

  /**
   * `prisma.tracerStudy`: Exposes CRUD operations for the **TracerStudy** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TracerStudies
    * const tracerStudies = await prisma.tracerStudy.findMany()
    * ```
    */
  get tracerStudy(): Prisma.TracerStudyDelegate<ExtArgs>;

  /**
   * `prisma.category`: Exposes CRUD operations for the **Category** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Categories
    * const categories = await prisma.category.findMany()
    * ```
    */
  get category(): Prisma.CategoryDelegate<ExtArgs>;

  /**
   * `prisma.product`: Exposes CRUD operations for the **Product** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Products
    * const products = await prisma.product.findMany()
    * ```
    */
  get product(): Prisma.ProductDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.21.1
   * Query Engine version: bf0e5e8a04cada8225617067eaa03d041e2bba36
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    User: 'User',
    Role: 'Role',
    Profile: 'Profile',
    StudyProgram: 'StudyProgram',
    SensitiveStudentData: 'SensitiveStudentData',
    News: 'News',
    Event: 'Event',
    AlumniProgram: 'AlumniProgram',
    TracerStudy: 'TracerStudy',
    Category: 'Category',
    Product: 'Product'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "user" | "role" | "profile" | "studyProgram" | "sensitiveStudentData" | "news" | "event" | "alumniProgram" | "tracerStudy" | "category" | "product"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      Role: {
        payload: Prisma.$RolePayload<ExtArgs>
        fields: Prisma.RoleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RoleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RoleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          findFirst: {
            args: Prisma.RoleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RoleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          findMany: {
            args: Prisma.RoleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>[]
          }
          create: {
            args: Prisma.RoleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          createMany: {
            args: Prisma.RoleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.RoleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          update: {
            args: Prisma.RoleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          deleteMany: {
            args: Prisma.RoleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RoleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.RoleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          aggregate: {
            args: Prisma.RoleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRole>
          }
          groupBy: {
            args: Prisma.RoleGroupByArgs<ExtArgs>
            result: $Utils.Optional<RoleGroupByOutputType>[]
          }
          count: {
            args: Prisma.RoleCountArgs<ExtArgs>
            result: $Utils.Optional<RoleCountAggregateOutputType> | number
          }
        }
      }
      Profile: {
        payload: Prisma.$ProfilePayload<ExtArgs>
        fields: Prisma.ProfileFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProfileFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProfileFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>
          }
          findFirst: {
            args: Prisma.ProfileFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProfileFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>
          }
          findMany: {
            args: Prisma.ProfileFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>[]
          }
          create: {
            args: Prisma.ProfileCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>
          }
          createMany: {
            args: Prisma.ProfileCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ProfileDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>
          }
          update: {
            args: Prisma.ProfileUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>
          }
          deleteMany: {
            args: Prisma.ProfileDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProfileUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProfileUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>
          }
          aggregate: {
            args: Prisma.ProfileAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProfile>
          }
          groupBy: {
            args: Prisma.ProfileGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProfileGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProfileCountArgs<ExtArgs>
            result: $Utils.Optional<ProfileCountAggregateOutputType> | number
          }
        }
      }
      StudyProgram: {
        payload: Prisma.$StudyProgramPayload<ExtArgs>
        fields: Prisma.StudyProgramFieldRefs
        operations: {
          findUnique: {
            args: Prisma.StudyProgramFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StudyProgramPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.StudyProgramFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StudyProgramPayload>
          }
          findFirst: {
            args: Prisma.StudyProgramFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StudyProgramPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.StudyProgramFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StudyProgramPayload>
          }
          findMany: {
            args: Prisma.StudyProgramFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StudyProgramPayload>[]
          }
          create: {
            args: Prisma.StudyProgramCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StudyProgramPayload>
          }
          createMany: {
            args: Prisma.StudyProgramCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.StudyProgramDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StudyProgramPayload>
          }
          update: {
            args: Prisma.StudyProgramUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StudyProgramPayload>
          }
          deleteMany: {
            args: Prisma.StudyProgramDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.StudyProgramUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.StudyProgramUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StudyProgramPayload>
          }
          aggregate: {
            args: Prisma.StudyProgramAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStudyProgram>
          }
          groupBy: {
            args: Prisma.StudyProgramGroupByArgs<ExtArgs>
            result: $Utils.Optional<StudyProgramGroupByOutputType>[]
          }
          count: {
            args: Prisma.StudyProgramCountArgs<ExtArgs>
            result: $Utils.Optional<StudyProgramCountAggregateOutputType> | number
          }
        }
      }
      SensitiveStudentData: {
        payload: Prisma.$SensitiveStudentDataPayload<ExtArgs>
        fields: Prisma.SensitiveStudentDataFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SensitiveStudentDataFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SensitiveStudentDataPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SensitiveStudentDataFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SensitiveStudentDataPayload>
          }
          findFirst: {
            args: Prisma.SensitiveStudentDataFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SensitiveStudentDataPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SensitiveStudentDataFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SensitiveStudentDataPayload>
          }
          findMany: {
            args: Prisma.SensitiveStudentDataFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SensitiveStudentDataPayload>[]
          }
          create: {
            args: Prisma.SensitiveStudentDataCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SensitiveStudentDataPayload>
          }
          createMany: {
            args: Prisma.SensitiveStudentDataCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.SensitiveStudentDataDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SensitiveStudentDataPayload>
          }
          update: {
            args: Prisma.SensitiveStudentDataUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SensitiveStudentDataPayload>
          }
          deleteMany: {
            args: Prisma.SensitiveStudentDataDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SensitiveStudentDataUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SensitiveStudentDataUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SensitiveStudentDataPayload>
          }
          aggregate: {
            args: Prisma.SensitiveStudentDataAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSensitiveStudentData>
          }
          groupBy: {
            args: Prisma.SensitiveStudentDataGroupByArgs<ExtArgs>
            result: $Utils.Optional<SensitiveStudentDataGroupByOutputType>[]
          }
          count: {
            args: Prisma.SensitiveStudentDataCountArgs<ExtArgs>
            result: $Utils.Optional<SensitiveStudentDataCountAggregateOutputType> | number
          }
        }
      }
      News: {
        payload: Prisma.$NewsPayload<ExtArgs>
        fields: Prisma.NewsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.NewsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.NewsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsPayload>
          }
          findFirst: {
            args: Prisma.NewsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.NewsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsPayload>
          }
          findMany: {
            args: Prisma.NewsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsPayload>[]
          }
          create: {
            args: Prisma.NewsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsPayload>
          }
          createMany: {
            args: Prisma.NewsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.NewsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsPayload>
          }
          update: {
            args: Prisma.NewsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsPayload>
          }
          deleteMany: {
            args: Prisma.NewsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.NewsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.NewsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsPayload>
          }
          aggregate: {
            args: Prisma.NewsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNews>
          }
          groupBy: {
            args: Prisma.NewsGroupByArgs<ExtArgs>
            result: $Utils.Optional<NewsGroupByOutputType>[]
          }
          count: {
            args: Prisma.NewsCountArgs<ExtArgs>
            result: $Utils.Optional<NewsCountAggregateOutputType> | number
          }
        }
      }
      Event: {
        payload: Prisma.$EventPayload<ExtArgs>
        fields: Prisma.EventFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EventFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EventFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventPayload>
          }
          findFirst: {
            args: Prisma.EventFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EventFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventPayload>
          }
          findMany: {
            args: Prisma.EventFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventPayload>[]
          }
          create: {
            args: Prisma.EventCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventPayload>
          }
          createMany: {
            args: Prisma.EventCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.EventDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventPayload>
          }
          update: {
            args: Prisma.EventUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventPayload>
          }
          deleteMany: {
            args: Prisma.EventDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EventUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.EventUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventPayload>
          }
          aggregate: {
            args: Prisma.EventAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEvent>
          }
          groupBy: {
            args: Prisma.EventGroupByArgs<ExtArgs>
            result: $Utils.Optional<EventGroupByOutputType>[]
          }
          count: {
            args: Prisma.EventCountArgs<ExtArgs>
            result: $Utils.Optional<EventCountAggregateOutputType> | number
          }
        }
      }
      AlumniProgram: {
        payload: Prisma.$AlumniProgramPayload<ExtArgs>
        fields: Prisma.AlumniProgramFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AlumniProgramFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlumniProgramPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AlumniProgramFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlumniProgramPayload>
          }
          findFirst: {
            args: Prisma.AlumniProgramFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlumniProgramPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AlumniProgramFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlumniProgramPayload>
          }
          findMany: {
            args: Prisma.AlumniProgramFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlumniProgramPayload>[]
          }
          create: {
            args: Prisma.AlumniProgramCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlumniProgramPayload>
          }
          createMany: {
            args: Prisma.AlumniProgramCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.AlumniProgramDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlumniProgramPayload>
          }
          update: {
            args: Prisma.AlumniProgramUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlumniProgramPayload>
          }
          deleteMany: {
            args: Prisma.AlumniProgramDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AlumniProgramUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AlumniProgramUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlumniProgramPayload>
          }
          aggregate: {
            args: Prisma.AlumniProgramAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAlumniProgram>
          }
          groupBy: {
            args: Prisma.AlumniProgramGroupByArgs<ExtArgs>
            result: $Utils.Optional<AlumniProgramGroupByOutputType>[]
          }
          count: {
            args: Prisma.AlumniProgramCountArgs<ExtArgs>
            result: $Utils.Optional<AlumniProgramCountAggregateOutputType> | number
          }
        }
      }
      TracerStudy: {
        payload: Prisma.$TracerStudyPayload<ExtArgs>
        fields: Prisma.TracerStudyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TracerStudyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TracerStudyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TracerStudyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TracerStudyPayload>
          }
          findFirst: {
            args: Prisma.TracerStudyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TracerStudyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TracerStudyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TracerStudyPayload>
          }
          findMany: {
            args: Prisma.TracerStudyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TracerStudyPayload>[]
          }
          create: {
            args: Prisma.TracerStudyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TracerStudyPayload>
          }
          createMany: {
            args: Prisma.TracerStudyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.TracerStudyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TracerStudyPayload>
          }
          update: {
            args: Prisma.TracerStudyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TracerStudyPayload>
          }
          deleteMany: {
            args: Prisma.TracerStudyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TracerStudyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TracerStudyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TracerStudyPayload>
          }
          aggregate: {
            args: Prisma.TracerStudyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTracerStudy>
          }
          groupBy: {
            args: Prisma.TracerStudyGroupByArgs<ExtArgs>
            result: $Utils.Optional<TracerStudyGroupByOutputType>[]
          }
          count: {
            args: Prisma.TracerStudyCountArgs<ExtArgs>
            result: $Utils.Optional<TracerStudyCountAggregateOutputType> | number
          }
        }
      }
      Category: {
        payload: Prisma.$CategoryPayload<ExtArgs>
        fields: Prisma.CategoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CategoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CategoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          findFirst: {
            args: Prisma.CategoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CategoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          findMany: {
            args: Prisma.CategoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>[]
          }
          create: {
            args: Prisma.CategoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          createMany: {
            args: Prisma.CategoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CategoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          update: {
            args: Prisma.CategoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          deleteMany: {
            args: Prisma.CategoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CategoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CategoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          aggregate: {
            args: Prisma.CategoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCategory>
          }
          groupBy: {
            args: Prisma.CategoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<CategoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.CategoryCountArgs<ExtArgs>
            result: $Utils.Optional<CategoryCountAggregateOutputType> | number
          }
        }
      }
      Product: {
        payload: Prisma.$ProductPayload<ExtArgs>
        fields: Prisma.ProductFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          findFirst: {
            args: Prisma.ProductFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          findMany: {
            args: Prisma.ProductFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>[]
          }
          create: {
            args: Prisma.ProductCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          createMany: {
            args: Prisma.ProductCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ProductDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          update: {
            args: Prisma.ProductUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          deleteMany: {
            args: Prisma.ProductDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProductUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          aggregate: {
            args: Prisma.ProductAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProduct>
          }
          groupBy: {
            args: Prisma.ProductGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductCountArgs<ExtArgs>
            result: $Utils.Optional<ProductCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    eventsAsUniversitas: number
    newsAsUniversitas: number
    authoredEvents: number
    authoredNews: number
    AlumniPrograms: number
    prodiVerifications: number
    universityVerifications: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    eventsAsUniversitas?: boolean | UserCountOutputTypeCountEventsAsUniversitasArgs
    newsAsUniversitas?: boolean | UserCountOutputTypeCountNewsAsUniversitasArgs
    authoredEvents?: boolean | UserCountOutputTypeCountAuthoredEventsArgs
    authoredNews?: boolean | UserCountOutputTypeCountAuthoredNewsArgs
    AlumniPrograms?: boolean | UserCountOutputTypeCountAlumniProgramsArgs
    prodiVerifications?: boolean | UserCountOutputTypeCountProdiVerificationsArgs
    universityVerifications?: boolean | UserCountOutputTypeCountUniversityVerificationsArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountEventsAsUniversitasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EventWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountNewsAsUniversitasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NewsWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAuthoredEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EventWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAuthoredNewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NewsWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAlumniProgramsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AlumniProgramWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountProdiVerificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AlumniProgramWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUniversityVerificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AlumniProgramWhereInput
  }


  /**
   * Count Type RoleCountOutputType
   */

  export type RoleCountOutputType = {
    users: number
  }

  export type RoleCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | RoleCountOutputTypeCountUsersArgs
  }

  // Custom InputTypes
  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleCountOutputType
     */
    select?: RoleCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }


  /**
   * Count Type StudyProgramCountOutputType
   */

  export type StudyProgramCountOutputType = {
    profiles: number
  }

  export type StudyProgramCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    profiles?: boolean | StudyProgramCountOutputTypeCountProfilesArgs
  }

  // Custom InputTypes
  /**
   * StudyProgramCountOutputType without action
   */
  export type StudyProgramCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StudyProgramCountOutputType
     */
    select?: StudyProgramCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * StudyProgramCountOutputType without action
   */
  export type StudyProgramCountOutputTypeCountProfilesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProfileWhereInput
  }


  /**
   * Count Type CategoryCountOutputType
   */

  export type CategoryCountOutputType = {
    Product: number
  }

  export type CategoryCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Product?: boolean | CategoryCountOutputTypeCountProductArgs
  }

  // Custom InputTypes
  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryCountOutputType
     */
    select?: CategoryCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeCountProductArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }


  /**
   * Models
   */

  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    username: string | null
    password: string | null
    roleId: string | null
    profileId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    username: string | null
    password: string | null
    roleId: string | null
    profileId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    username: number
    password: number
    roleId: number
    profileId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserMinAggregateInputType = {
    id?: true
    username?: true
    password?: true
    roleId?: true
    profileId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    username?: true
    password?: true
    roleId?: true
    profileId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    username?: true
    password?: true
    roleId?: true
    profileId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    username: string
    password: string
    roleId: string
    profileId: string | null
    createdAt: Date
    updatedAt: Date
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    password?: boolean
    roleId?: boolean
    profileId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    role?: boolean | RoleDefaultArgs<ExtArgs>
    eventsAsUniversitas?: boolean | User$eventsAsUniversitasArgs<ExtArgs>
    newsAsUniversitas?: boolean | User$newsAsUniversitasArgs<ExtArgs>
    authoredEvents?: boolean | User$authoredEventsArgs<ExtArgs>
    authoredNews?: boolean | User$authoredNewsArgs<ExtArgs>
    AlumniPrograms?: boolean | User$AlumniProgramsArgs<ExtArgs>
    prodiVerifications?: boolean | User$prodiVerificationsArgs<ExtArgs>
    universityVerifications?: boolean | User$universityVerificationsArgs<ExtArgs>
    Profile?: boolean | User$ProfileArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>


  export type UserSelectScalar = {
    id?: boolean
    username?: boolean
    password?: boolean
    roleId?: boolean
    profileId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    role?: boolean | RoleDefaultArgs<ExtArgs>
    eventsAsUniversitas?: boolean | User$eventsAsUniversitasArgs<ExtArgs>
    newsAsUniversitas?: boolean | User$newsAsUniversitasArgs<ExtArgs>
    authoredEvents?: boolean | User$authoredEventsArgs<ExtArgs>
    authoredNews?: boolean | User$authoredNewsArgs<ExtArgs>
    AlumniPrograms?: boolean | User$AlumniProgramsArgs<ExtArgs>
    prodiVerifications?: boolean | User$prodiVerificationsArgs<ExtArgs>
    universityVerifications?: boolean | User$universityVerificationsArgs<ExtArgs>
    Profile?: boolean | User$ProfileArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      role: Prisma.$RolePayload<ExtArgs>
      eventsAsUniversitas: Prisma.$EventPayload<ExtArgs>[]
      newsAsUniversitas: Prisma.$NewsPayload<ExtArgs>[]
      authoredEvents: Prisma.$EventPayload<ExtArgs>[]
      authoredNews: Prisma.$NewsPayload<ExtArgs>[]
      AlumniPrograms: Prisma.$AlumniProgramPayload<ExtArgs>[]
      prodiVerifications: Prisma.$AlumniProgramPayload<ExtArgs>[]
      universityVerifications: Prisma.$AlumniProgramPayload<ExtArgs>[]
      Profile: Prisma.$ProfilePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      username: string
      password: string
      roleId: string
      profileId: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    role<T extends RoleDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RoleDefaultArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    eventsAsUniversitas<T extends User$eventsAsUniversitasArgs<ExtArgs> = {}>(args?: Subset<T, User$eventsAsUniversitasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "findMany"> | Null>
    newsAsUniversitas<T extends User$newsAsUniversitasArgs<ExtArgs> = {}>(args?: Subset<T, User$newsAsUniversitasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NewsPayload<ExtArgs>, T, "findMany"> | Null>
    authoredEvents<T extends User$authoredEventsArgs<ExtArgs> = {}>(args?: Subset<T, User$authoredEventsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "findMany"> | Null>
    authoredNews<T extends User$authoredNewsArgs<ExtArgs> = {}>(args?: Subset<T, User$authoredNewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NewsPayload<ExtArgs>, T, "findMany"> | Null>
    AlumniPrograms<T extends User$AlumniProgramsArgs<ExtArgs> = {}>(args?: Subset<T, User$AlumniProgramsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlumniProgramPayload<ExtArgs>, T, "findMany"> | Null>
    prodiVerifications<T extends User$prodiVerificationsArgs<ExtArgs> = {}>(args?: Subset<T, User$prodiVerificationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlumniProgramPayload<ExtArgs>, T, "findMany"> | Null>
    universityVerifications<T extends User$universityVerificationsArgs<ExtArgs> = {}>(args?: Subset<T, User$universityVerificationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlumniProgramPayload<ExtArgs>, T, "findMany"> | Null>
    Profile<T extends User$ProfileArgs<ExtArgs> = {}>(args?: Subset<T, User$ProfileArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */ 
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly username: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly roleId: FieldRef<"User", 'String'>
    readonly profileId: FieldRef<"User", 'String'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
  }

  /**
   * User.eventsAsUniversitas
   */
  export type User$eventsAsUniversitasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    where?: EventWhereInput
    orderBy?: EventOrderByWithRelationInput | EventOrderByWithRelationInput[]
    cursor?: EventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EventScalarFieldEnum | EventScalarFieldEnum[]
  }

  /**
   * User.newsAsUniversitas
   */
  export type User$newsAsUniversitasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the News
     */
    select?: NewsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsInclude<ExtArgs> | null
    where?: NewsWhereInput
    orderBy?: NewsOrderByWithRelationInput | NewsOrderByWithRelationInput[]
    cursor?: NewsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NewsScalarFieldEnum | NewsScalarFieldEnum[]
  }

  /**
   * User.authoredEvents
   */
  export type User$authoredEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    where?: EventWhereInput
    orderBy?: EventOrderByWithRelationInput | EventOrderByWithRelationInput[]
    cursor?: EventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EventScalarFieldEnum | EventScalarFieldEnum[]
  }

  /**
   * User.authoredNews
   */
  export type User$authoredNewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the News
     */
    select?: NewsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsInclude<ExtArgs> | null
    where?: NewsWhereInput
    orderBy?: NewsOrderByWithRelationInput | NewsOrderByWithRelationInput[]
    cursor?: NewsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NewsScalarFieldEnum | NewsScalarFieldEnum[]
  }

  /**
   * User.AlumniPrograms
   */
  export type User$AlumniProgramsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlumniProgram
     */
    select?: AlumniProgramSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlumniProgramInclude<ExtArgs> | null
    where?: AlumniProgramWhereInput
    orderBy?: AlumniProgramOrderByWithRelationInput | AlumniProgramOrderByWithRelationInput[]
    cursor?: AlumniProgramWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AlumniProgramScalarFieldEnum | AlumniProgramScalarFieldEnum[]
  }

  /**
   * User.prodiVerifications
   */
  export type User$prodiVerificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlumniProgram
     */
    select?: AlumniProgramSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlumniProgramInclude<ExtArgs> | null
    where?: AlumniProgramWhereInput
    orderBy?: AlumniProgramOrderByWithRelationInput | AlumniProgramOrderByWithRelationInput[]
    cursor?: AlumniProgramWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AlumniProgramScalarFieldEnum | AlumniProgramScalarFieldEnum[]
  }

  /**
   * User.universityVerifications
   */
  export type User$universityVerificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlumniProgram
     */
    select?: AlumniProgramSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlumniProgramInclude<ExtArgs> | null
    where?: AlumniProgramWhereInput
    orderBy?: AlumniProgramOrderByWithRelationInput | AlumniProgramOrderByWithRelationInput[]
    cursor?: AlumniProgramWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AlumniProgramScalarFieldEnum | AlumniProgramScalarFieldEnum[]
  }

  /**
   * User.Profile
   */
  export type User$ProfileArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    where?: ProfileWhereInput
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model Role
   */

  export type AggregateRole = {
    _count: RoleCountAggregateOutputType | null
    _min: RoleMinAggregateOutputType | null
    _max: RoleMaxAggregateOutputType | null
  }

  export type RoleMinAggregateOutputType = {
    id: string | null
    name: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RoleMaxAggregateOutputType = {
    id: string | null
    name: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RoleCountAggregateOutputType = {
    id: number
    name: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type RoleMinAggregateInputType = {
    id?: true
    name?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RoleMaxAggregateInputType = {
    id?: true
    name?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RoleCountAggregateInputType = {
    id?: true
    name?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type RoleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Role to aggregate.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Roles
    **/
    _count?: true | RoleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RoleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RoleMaxAggregateInputType
  }

  export type GetRoleAggregateType<T extends RoleAggregateArgs> = {
        [P in keyof T & keyof AggregateRole]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRole[P]>
      : GetScalarType<T[P], AggregateRole[P]>
  }




  export type RoleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoleWhereInput
    orderBy?: RoleOrderByWithAggregationInput | RoleOrderByWithAggregationInput[]
    by: RoleScalarFieldEnum[] | RoleScalarFieldEnum
    having?: RoleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RoleCountAggregateInputType | true
    _min?: RoleMinAggregateInputType
    _max?: RoleMaxAggregateInputType
  }

  export type RoleGroupByOutputType = {
    id: string
    name: string
    createdAt: Date
    updatedAt: Date
    _count: RoleCountAggregateOutputType | null
    _min: RoleMinAggregateOutputType | null
    _max: RoleMaxAggregateOutputType | null
  }

  type GetRoleGroupByPayload<T extends RoleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RoleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RoleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RoleGroupByOutputType[P]>
            : GetScalarType<T[P], RoleGroupByOutputType[P]>
        }
      >
    >


  export type RoleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    users?: boolean | Role$usersArgs<ExtArgs>
    _count?: boolean | RoleCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["role"]>


  export type RoleSelectScalar = {
    id?: boolean
    name?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type RoleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | Role$usersArgs<ExtArgs>
    _count?: boolean | RoleCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $RolePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Role"
    objects: {
      users: Prisma.$UserPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["role"]>
    composites: {}
  }

  type RoleGetPayload<S extends boolean | null | undefined | RoleDefaultArgs> = $Result.GetResult<Prisma.$RolePayload, S>

  type RoleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<RoleFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: RoleCountAggregateInputType | true
    }

  export interface RoleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Role'], meta: { name: 'Role' } }
    /**
     * Find zero or one Role that matches the filter.
     * @param {RoleFindUniqueArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RoleFindUniqueArgs>(args: SelectSubset<T, RoleFindUniqueArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Role that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {RoleFindUniqueOrThrowArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RoleFindUniqueOrThrowArgs>(args: SelectSubset<T, RoleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Role that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindFirstArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RoleFindFirstArgs>(args?: SelectSubset<T, RoleFindFirstArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Role that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindFirstOrThrowArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RoleFindFirstOrThrowArgs>(args?: SelectSubset<T, RoleFindFirstOrThrowArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Roles
     * const roles = await prisma.role.findMany()
     * 
     * // Get first 10 Roles
     * const roles = await prisma.role.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const roleWithIdOnly = await prisma.role.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RoleFindManyArgs>(args?: SelectSubset<T, RoleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Role.
     * @param {RoleCreateArgs} args - Arguments to create a Role.
     * @example
     * // Create one Role
     * const Role = await prisma.role.create({
     *   data: {
     *     // ... data to create a Role
     *   }
     * })
     * 
     */
    create<T extends RoleCreateArgs>(args: SelectSubset<T, RoleCreateArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Roles.
     * @param {RoleCreateManyArgs} args - Arguments to create many Roles.
     * @example
     * // Create many Roles
     * const role = await prisma.role.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RoleCreateManyArgs>(args?: SelectSubset<T, RoleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Role.
     * @param {RoleDeleteArgs} args - Arguments to delete one Role.
     * @example
     * // Delete one Role
     * const Role = await prisma.role.delete({
     *   where: {
     *     // ... filter to delete one Role
     *   }
     * })
     * 
     */
    delete<T extends RoleDeleteArgs>(args: SelectSubset<T, RoleDeleteArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Role.
     * @param {RoleUpdateArgs} args - Arguments to update one Role.
     * @example
     * // Update one Role
     * const role = await prisma.role.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RoleUpdateArgs>(args: SelectSubset<T, RoleUpdateArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Roles.
     * @param {RoleDeleteManyArgs} args - Arguments to filter Roles to delete.
     * @example
     * // Delete a few Roles
     * const { count } = await prisma.role.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RoleDeleteManyArgs>(args?: SelectSubset<T, RoleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Roles
     * const role = await prisma.role.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RoleUpdateManyArgs>(args: SelectSubset<T, RoleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Role.
     * @param {RoleUpsertArgs} args - Arguments to update or create a Role.
     * @example
     * // Update or create a Role
     * const role = await prisma.role.upsert({
     *   create: {
     *     // ... data to create a Role
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Role we want to update
     *   }
     * })
     */
    upsert<T extends RoleUpsertArgs>(args: SelectSubset<T, RoleUpsertArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleCountArgs} args - Arguments to filter Roles to count.
     * @example
     * // Count the number of Roles
     * const count = await prisma.role.count({
     *   where: {
     *     // ... the filter for the Roles we want to count
     *   }
     * })
    **/
    count<T extends RoleCountArgs>(
      args?: Subset<T, RoleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RoleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RoleAggregateArgs>(args: Subset<T, RoleAggregateArgs>): Prisma.PrismaPromise<GetRoleAggregateType<T>>

    /**
     * Group by Role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RoleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RoleGroupByArgs['orderBy'] }
        : { orderBy?: RoleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RoleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRoleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Role model
   */
  readonly fields: RoleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Role.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RoleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends Role$usersArgs<ExtArgs> = {}>(args?: Subset<T, Role$usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Role model
   */ 
  interface RoleFieldRefs {
    readonly id: FieldRef<"Role", 'String'>
    readonly name: FieldRef<"Role", 'String'>
    readonly createdAt: FieldRef<"Role", 'DateTime'>
    readonly updatedAt: FieldRef<"Role", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Role findUnique
   */
  export type RoleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role findUniqueOrThrow
   */
  export type RoleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role findFirst
   */
  export type RoleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Roles.
     */
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role findFirstOrThrow
   */
  export type RoleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Roles.
     */
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role findMany
   */
  export type RoleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Roles to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role create
   */
  export type RoleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The data needed to create a Role.
     */
    data: XOR<RoleCreateInput, RoleUncheckedCreateInput>
  }

  /**
   * Role createMany
   */
  export type RoleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Roles.
     */
    data: RoleCreateManyInput | RoleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Role update
   */
  export type RoleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The data needed to update a Role.
     */
    data: XOR<RoleUpdateInput, RoleUncheckedUpdateInput>
    /**
     * Choose, which Role to update.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role updateMany
   */
  export type RoleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Roles.
     */
    data: XOR<RoleUpdateManyMutationInput, RoleUncheckedUpdateManyInput>
    /**
     * Filter which Roles to update
     */
    where?: RoleWhereInput
  }

  /**
   * Role upsert
   */
  export type RoleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The filter to search for the Role to update in case it exists.
     */
    where: RoleWhereUniqueInput
    /**
     * In case the Role found by the `where` argument doesn't exist, create a new Role with this data.
     */
    create: XOR<RoleCreateInput, RoleUncheckedCreateInput>
    /**
     * In case the Role was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RoleUpdateInput, RoleUncheckedUpdateInput>
  }

  /**
   * Role delete
   */
  export type RoleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter which Role to delete.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role deleteMany
   */
  export type RoleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Roles to delete
     */
    where?: RoleWhereInput
  }

  /**
   * Role.users
   */
  export type Role$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Role without action
   */
  export type RoleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
  }


  /**
   * Model Profile
   */

  export type AggregateProfile = {
    _count: ProfileCountAggregateOutputType | null
    _min: ProfileMinAggregateOutputType | null
    _max: ProfileMaxAggregateOutputType | null
  }

  export type ProfileMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    image: string | null
    full_name: string | null
    student_identification_number: string | null
    study_program_id: string | null
    year_graduated: Date | null
    work: string | null
    skills: string | null
    entrepreneur: string | null
    competencies: string | null
    career: string | null
    company: string | null
    linkedin: string | null
    is_alumni_leader: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProfileMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    image: string | null
    full_name: string | null
    student_identification_number: string | null
    study_program_id: string | null
    year_graduated: Date | null
    work: string | null
    skills: string | null
    entrepreneur: string | null
    competencies: string | null
    career: string | null
    company: string | null
    linkedin: string | null
    is_alumni_leader: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProfileCountAggregateOutputType = {
    id: number
    user_id: number
    image: number
    full_name: number
    student_identification_number: number
    study_program_id: number
    year_graduated: number
    work: number
    skills: number
    entrepreneur: number
    competencies: number
    career: number
    company: number
    linkedin: number
    is_alumni_leader: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ProfileMinAggregateInputType = {
    id?: true
    user_id?: true
    image?: true
    full_name?: true
    student_identification_number?: true
    study_program_id?: true
    year_graduated?: true
    work?: true
    skills?: true
    entrepreneur?: true
    competencies?: true
    career?: true
    company?: true
    linkedin?: true
    is_alumni_leader?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProfileMaxAggregateInputType = {
    id?: true
    user_id?: true
    image?: true
    full_name?: true
    student_identification_number?: true
    study_program_id?: true
    year_graduated?: true
    work?: true
    skills?: true
    entrepreneur?: true
    competencies?: true
    career?: true
    company?: true
    linkedin?: true
    is_alumni_leader?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProfileCountAggregateInputType = {
    id?: true
    user_id?: true
    image?: true
    full_name?: true
    student_identification_number?: true
    study_program_id?: true
    year_graduated?: true
    work?: true
    skills?: true
    entrepreneur?: true
    competencies?: true
    career?: true
    company?: true
    linkedin?: true
    is_alumni_leader?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ProfileAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Profile to aggregate.
     */
    where?: ProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Profiles to fetch.
     */
    orderBy?: ProfileOrderByWithRelationInput | ProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Profiles
    **/
    _count?: true | ProfileCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProfileMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProfileMaxAggregateInputType
  }

  export type GetProfileAggregateType<T extends ProfileAggregateArgs> = {
        [P in keyof T & keyof AggregateProfile]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProfile[P]>
      : GetScalarType<T[P], AggregateProfile[P]>
  }




  export type ProfileGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProfileWhereInput
    orderBy?: ProfileOrderByWithAggregationInput | ProfileOrderByWithAggregationInput[]
    by: ProfileScalarFieldEnum[] | ProfileScalarFieldEnum
    having?: ProfileScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProfileCountAggregateInputType | true
    _min?: ProfileMinAggregateInputType
    _max?: ProfileMaxAggregateInputType
  }

  export type ProfileGroupByOutputType = {
    id: string
    user_id: string
    image: string
    full_name: string
    student_identification_number: string
    study_program_id: string
    year_graduated: Date | null
    work: string | null
    skills: string | null
    entrepreneur: string | null
    competencies: string | null
    career: string | null
    company: string | null
    linkedin: string | null
    is_alumni_leader: boolean
    createdAt: Date
    updatedAt: Date
    _count: ProfileCountAggregateOutputType | null
    _min: ProfileMinAggregateOutputType | null
    _max: ProfileMaxAggregateOutputType | null
  }

  type GetProfileGroupByPayload<T extends ProfileGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProfileGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProfileGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProfileGroupByOutputType[P]>
            : GetScalarType<T[P], ProfileGroupByOutputType[P]>
        }
      >
    >


  export type ProfileSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    image?: boolean
    full_name?: boolean
    student_identification_number?: boolean
    study_program_id?: boolean
    year_graduated?: boolean
    work?: boolean
    skills?: boolean
    entrepreneur?: boolean
    competencies?: boolean
    career?: boolean
    company?: boolean
    linkedin?: boolean
    is_alumni_leader?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    studyProgram?: boolean | StudyProgramDefaultArgs<ExtArgs>
    sensitive_student_data?: boolean | Profile$sensitive_student_dataArgs<ExtArgs>
    tracer_study?: boolean | Profile$tracer_studyArgs<ExtArgs>
  }, ExtArgs["result"]["profile"]>


  export type ProfileSelectScalar = {
    id?: boolean
    user_id?: boolean
    image?: boolean
    full_name?: boolean
    student_identification_number?: boolean
    study_program_id?: boolean
    year_graduated?: boolean
    work?: boolean
    skills?: boolean
    entrepreneur?: boolean
    competencies?: boolean
    career?: boolean
    company?: boolean
    linkedin?: boolean
    is_alumni_leader?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ProfileInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    studyProgram?: boolean | StudyProgramDefaultArgs<ExtArgs>
    sensitive_student_data?: boolean | Profile$sensitive_student_dataArgs<ExtArgs>
    tracer_study?: boolean | Profile$tracer_studyArgs<ExtArgs>
  }

  export type $ProfilePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Profile"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      studyProgram: Prisma.$StudyProgramPayload<ExtArgs>
      sensitive_student_data: Prisma.$SensitiveStudentDataPayload<ExtArgs> | null
      tracer_study: Prisma.$TracerStudyPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string
      image: string
      full_name: string
      student_identification_number: string
      study_program_id: string
      year_graduated: Date | null
      work: string | null
      skills: string | null
      entrepreneur: string | null
      competencies: string | null
      career: string | null
      company: string | null
      linkedin: string | null
      is_alumni_leader: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["profile"]>
    composites: {}
  }

  type ProfileGetPayload<S extends boolean | null | undefined | ProfileDefaultArgs> = $Result.GetResult<Prisma.$ProfilePayload, S>

  type ProfileCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ProfileFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ProfileCountAggregateInputType | true
    }

  export interface ProfileDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Profile'], meta: { name: 'Profile' } }
    /**
     * Find zero or one Profile that matches the filter.
     * @param {ProfileFindUniqueArgs} args - Arguments to find a Profile
     * @example
     * // Get one Profile
     * const profile = await prisma.profile.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProfileFindUniqueArgs>(args: SelectSubset<T, ProfileFindUniqueArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Profile that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ProfileFindUniqueOrThrowArgs} args - Arguments to find a Profile
     * @example
     * // Get one Profile
     * const profile = await prisma.profile.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProfileFindUniqueOrThrowArgs>(args: SelectSubset<T, ProfileFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Profile that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileFindFirstArgs} args - Arguments to find a Profile
     * @example
     * // Get one Profile
     * const profile = await prisma.profile.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProfileFindFirstArgs>(args?: SelectSubset<T, ProfileFindFirstArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Profile that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileFindFirstOrThrowArgs} args - Arguments to find a Profile
     * @example
     * // Get one Profile
     * const profile = await prisma.profile.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProfileFindFirstOrThrowArgs>(args?: SelectSubset<T, ProfileFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Profiles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Profiles
     * const profiles = await prisma.profile.findMany()
     * 
     * // Get first 10 Profiles
     * const profiles = await prisma.profile.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const profileWithIdOnly = await prisma.profile.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProfileFindManyArgs>(args?: SelectSubset<T, ProfileFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Profile.
     * @param {ProfileCreateArgs} args - Arguments to create a Profile.
     * @example
     * // Create one Profile
     * const Profile = await prisma.profile.create({
     *   data: {
     *     // ... data to create a Profile
     *   }
     * })
     * 
     */
    create<T extends ProfileCreateArgs>(args: SelectSubset<T, ProfileCreateArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Profiles.
     * @param {ProfileCreateManyArgs} args - Arguments to create many Profiles.
     * @example
     * // Create many Profiles
     * const profile = await prisma.profile.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProfileCreateManyArgs>(args?: SelectSubset<T, ProfileCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Profile.
     * @param {ProfileDeleteArgs} args - Arguments to delete one Profile.
     * @example
     * // Delete one Profile
     * const Profile = await prisma.profile.delete({
     *   where: {
     *     // ... filter to delete one Profile
     *   }
     * })
     * 
     */
    delete<T extends ProfileDeleteArgs>(args: SelectSubset<T, ProfileDeleteArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Profile.
     * @param {ProfileUpdateArgs} args - Arguments to update one Profile.
     * @example
     * // Update one Profile
     * const profile = await prisma.profile.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProfileUpdateArgs>(args: SelectSubset<T, ProfileUpdateArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Profiles.
     * @param {ProfileDeleteManyArgs} args - Arguments to filter Profiles to delete.
     * @example
     * // Delete a few Profiles
     * const { count } = await prisma.profile.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProfileDeleteManyArgs>(args?: SelectSubset<T, ProfileDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Profiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Profiles
     * const profile = await prisma.profile.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProfileUpdateManyArgs>(args: SelectSubset<T, ProfileUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Profile.
     * @param {ProfileUpsertArgs} args - Arguments to update or create a Profile.
     * @example
     * // Update or create a Profile
     * const profile = await prisma.profile.upsert({
     *   create: {
     *     // ... data to create a Profile
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Profile we want to update
     *   }
     * })
     */
    upsert<T extends ProfileUpsertArgs>(args: SelectSubset<T, ProfileUpsertArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Profiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileCountArgs} args - Arguments to filter Profiles to count.
     * @example
     * // Count the number of Profiles
     * const count = await prisma.profile.count({
     *   where: {
     *     // ... the filter for the Profiles we want to count
     *   }
     * })
    **/
    count<T extends ProfileCountArgs>(
      args?: Subset<T, ProfileCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProfileCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Profile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProfileAggregateArgs>(args: Subset<T, ProfileAggregateArgs>): Prisma.PrismaPromise<GetProfileAggregateType<T>>

    /**
     * Group by Profile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProfileGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProfileGroupByArgs['orderBy'] }
        : { orderBy?: ProfileGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProfileGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProfileGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Profile model
   */
  readonly fields: ProfileFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Profile.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProfileClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    studyProgram<T extends StudyProgramDefaultArgs<ExtArgs> = {}>(args?: Subset<T, StudyProgramDefaultArgs<ExtArgs>>): Prisma__StudyProgramClient<$Result.GetResult<Prisma.$StudyProgramPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    sensitive_student_data<T extends Profile$sensitive_student_dataArgs<ExtArgs> = {}>(args?: Subset<T, Profile$sensitive_student_dataArgs<ExtArgs>>): Prisma__SensitiveStudentDataClient<$Result.GetResult<Prisma.$SensitiveStudentDataPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    tracer_study<T extends Profile$tracer_studyArgs<ExtArgs> = {}>(args?: Subset<T, Profile$tracer_studyArgs<ExtArgs>>): Prisma__TracerStudyClient<$Result.GetResult<Prisma.$TracerStudyPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Profile model
   */ 
  interface ProfileFieldRefs {
    readonly id: FieldRef<"Profile", 'String'>
    readonly user_id: FieldRef<"Profile", 'String'>
    readonly image: FieldRef<"Profile", 'String'>
    readonly full_name: FieldRef<"Profile", 'String'>
    readonly student_identification_number: FieldRef<"Profile", 'String'>
    readonly study_program_id: FieldRef<"Profile", 'String'>
    readonly year_graduated: FieldRef<"Profile", 'DateTime'>
    readonly work: FieldRef<"Profile", 'String'>
    readonly skills: FieldRef<"Profile", 'String'>
    readonly entrepreneur: FieldRef<"Profile", 'String'>
    readonly competencies: FieldRef<"Profile", 'String'>
    readonly career: FieldRef<"Profile", 'String'>
    readonly company: FieldRef<"Profile", 'String'>
    readonly linkedin: FieldRef<"Profile", 'String'>
    readonly is_alumni_leader: FieldRef<"Profile", 'Boolean'>
    readonly createdAt: FieldRef<"Profile", 'DateTime'>
    readonly updatedAt: FieldRef<"Profile", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Profile findUnique
   */
  export type ProfileFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * Filter, which Profile to fetch.
     */
    where: ProfileWhereUniqueInput
  }

  /**
   * Profile findUniqueOrThrow
   */
  export type ProfileFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * Filter, which Profile to fetch.
     */
    where: ProfileWhereUniqueInput
  }

  /**
   * Profile findFirst
   */
  export type ProfileFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * Filter, which Profile to fetch.
     */
    where?: ProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Profiles to fetch.
     */
    orderBy?: ProfileOrderByWithRelationInput | ProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Profiles.
     */
    cursor?: ProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Profiles.
     */
    distinct?: ProfileScalarFieldEnum | ProfileScalarFieldEnum[]
  }

  /**
   * Profile findFirstOrThrow
   */
  export type ProfileFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * Filter, which Profile to fetch.
     */
    where?: ProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Profiles to fetch.
     */
    orderBy?: ProfileOrderByWithRelationInput | ProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Profiles.
     */
    cursor?: ProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Profiles.
     */
    distinct?: ProfileScalarFieldEnum | ProfileScalarFieldEnum[]
  }

  /**
   * Profile findMany
   */
  export type ProfileFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * Filter, which Profiles to fetch.
     */
    where?: ProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Profiles to fetch.
     */
    orderBy?: ProfileOrderByWithRelationInput | ProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Profiles.
     */
    cursor?: ProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Profiles.
     */
    skip?: number
    distinct?: ProfileScalarFieldEnum | ProfileScalarFieldEnum[]
  }

  /**
   * Profile create
   */
  export type ProfileCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * The data needed to create a Profile.
     */
    data: XOR<ProfileCreateInput, ProfileUncheckedCreateInput>
  }

  /**
   * Profile createMany
   */
  export type ProfileCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Profiles.
     */
    data: ProfileCreateManyInput | ProfileCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Profile update
   */
  export type ProfileUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * The data needed to update a Profile.
     */
    data: XOR<ProfileUpdateInput, ProfileUncheckedUpdateInput>
    /**
     * Choose, which Profile to update.
     */
    where: ProfileWhereUniqueInput
  }

  /**
   * Profile updateMany
   */
  export type ProfileUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Profiles.
     */
    data: XOR<ProfileUpdateManyMutationInput, ProfileUncheckedUpdateManyInput>
    /**
     * Filter which Profiles to update
     */
    where?: ProfileWhereInput
  }

  /**
   * Profile upsert
   */
  export type ProfileUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * The filter to search for the Profile to update in case it exists.
     */
    where: ProfileWhereUniqueInput
    /**
     * In case the Profile found by the `where` argument doesn't exist, create a new Profile with this data.
     */
    create: XOR<ProfileCreateInput, ProfileUncheckedCreateInput>
    /**
     * In case the Profile was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProfileUpdateInput, ProfileUncheckedUpdateInput>
  }

  /**
   * Profile delete
   */
  export type ProfileDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * Filter which Profile to delete.
     */
    where: ProfileWhereUniqueInput
  }

  /**
   * Profile deleteMany
   */
  export type ProfileDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Profiles to delete
     */
    where?: ProfileWhereInput
  }

  /**
   * Profile.sensitive_student_data
   */
  export type Profile$sensitive_student_dataArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SensitiveStudentData
     */
    select?: SensitiveStudentDataSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SensitiveStudentDataInclude<ExtArgs> | null
    where?: SensitiveStudentDataWhereInput
  }

  /**
   * Profile.tracer_study
   */
  export type Profile$tracer_studyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TracerStudy
     */
    select?: TracerStudySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TracerStudyInclude<ExtArgs> | null
    where?: TracerStudyWhereInput
  }

  /**
   * Profile without action
   */
  export type ProfileDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
  }


  /**
   * Model StudyProgram
   */

  export type AggregateStudyProgram = {
    _count: StudyProgramCountAggregateOutputType | null
    _min: StudyProgramMinAggregateOutputType | null
    _max: StudyProgramMaxAggregateOutputType | null
  }

  export type StudyProgramMinAggregateOutputType = {
    id: string | null
    name: string | null
    code: string | null
    level: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type StudyProgramMaxAggregateOutputType = {
    id: string | null
    name: string | null
    code: string | null
    level: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type StudyProgramCountAggregateOutputType = {
    id: number
    name: number
    code: number
    level: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type StudyProgramMinAggregateInputType = {
    id?: true
    name?: true
    code?: true
    level?: true
    createdAt?: true
    updatedAt?: true
  }

  export type StudyProgramMaxAggregateInputType = {
    id?: true
    name?: true
    code?: true
    level?: true
    createdAt?: true
    updatedAt?: true
  }

  export type StudyProgramCountAggregateInputType = {
    id?: true
    name?: true
    code?: true
    level?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type StudyProgramAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StudyProgram to aggregate.
     */
    where?: StudyProgramWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StudyPrograms to fetch.
     */
    orderBy?: StudyProgramOrderByWithRelationInput | StudyProgramOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: StudyProgramWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StudyPrograms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StudyPrograms.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned StudyPrograms
    **/
    _count?: true | StudyProgramCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StudyProgramMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StudyProgramMaxAggregateInputType
  }

  export type GetStudyProgramAggregateType<T extends StudyProgramAggregateArgs> = {
        [P in keyof T & keyof AggregateStudyProgram]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStudyProgram[P]>
      : GetScalarType<T[P], AggregateStudyProgram[P]>
  }




  export type StudyProgramGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StudyProgramWhereInput
    orderBy?: StudyProgramOrderByWithAggregationInput | StudyProgramOrderByWithAggregationInput[]
    by: StudyProgramScalarFieldEnum[] | StudyProgramScalarFieldEnum
    having?: StudyProgramScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StudyProgramCountAggregateInputType | true
    _min?: StudyProgramMinAggregateInputType
    _max?: StudyProgramMaxAggregateInputType
  }

  export type StudyProgramGroupByOutputType = {
    id: string
    name: string
    code: string
    level: string
    createdAt: Date
    updatedAt: Date
    _count: StudyProgramCountAggregateOutputType | null
    _min: StudyProgramMinAggregateOutputType | null
    _max: StudyProgramMaxAggregateOutputType | null
  }

  type GetStudyProgramGroupByPayload<T extends StudyProgramGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<StudyProgramGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StudyProgramGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StudyProgramGroupByOutputType[P]>
            : GetScalarType<T[P], StudyProgramGroupByOutputType[P]>
        }
      >
    >


  export type StudyProgramSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    code?: boolean
    level?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    profiles?: boolean | StudyProgram$profilesArgs<ExtArgs>
    _count?: boolean | StudyProgramCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["studyProgram"]>


  export type StudyProgramSelectScalar = {
    id?: boolean
    name?: boolean
    code?: boolean
    level?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type StudyProgramInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    profiles?: boolean | StudyProgram$profilesArgs<ExtArgs>
    _count?: boolean | StudyProgramCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $StudyProgramPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "StudyProgram"
    objects: {
      profiles: Prisma.$ProfilePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      code: string
      level: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["studyProgram"]>
    composites: {}
  }

  type StudyProgramGetPayload<S extends boolean | null | undefined | StudyProgramDefaultArgs> = $Result.GetResult<Prisma.$StudyProgramPayload, S>

  type StudyProgramCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<StudyProgramFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: StudyProgramCountAggregateInputType | true
    }

  export interface StudyProgramDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['StudyProgram'], meta: { name: 'StudyProgram' } }
    /**
     * Find zero or one StudyProgram that matches the filter.
     * @param {StudyProgramFindUniqueArgs} args - Arguments to find a StudyProgram
     * @example
     * // Get one StudyProgram
     * const studyProgram = await prisma.studyProgram.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends StudyProgramFindUniqueArgs>(args: SelectSubset<T, StudyProgramFindUniqueArgs<ExtArgs>>): Prisma__StudyProgramClient<$Result.GetResult<Prisma.$StudyProgramPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one StudyProgram that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {StudyProgramFindUniqueOrThrowArgs} args - Arguments to find a StudyProgram
     * @example
     * // Get one StudyProgram
     * const studyProgram = await prisma.studyProgram.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends StudyProgramFindUniqueOrThrowArgs>(args: SelectSubset<T, StudyProgramFindUniqueOrThrowArgs<ExtArgs>>): Prisma__StudyProgramClient<$Result.GetResult<Prisma.$StudyProgramPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first StudyProgram that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StudyProgramFindFirstArgs} args - Arguments to find a StudyProgram
     * @example
     * // Get one StudyProgram
     * const studyProgram = await prisma.studyProgram.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends StudyProgramFindFirstArgs>(args?: SelectSubset<T, StudyProgramFindFirstArgs<ExtArgs>>): Prisma__StudyProgramClient<$Result.GetResult<Prisma.$StudyProgramPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first StudyProgram that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StudyProgramFindFirstOrThrowArgs} args - Arguments to find a StudyProgram
     * @example
     * // Get one StudyProgram
     * const studyProgram = await prisma.studyProgram.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends StudyProgramFindFirstOrThrowArgs>(args?: SelectSubset<T, StudyProgramFindFirstOrThrowArgs<ExtArgs>>): Prisma__StudyProgramClient<$Result.GetResult<Prisma.$StudyProgramPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more StudyPrograms that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StudyProgramFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all StudyPrograms
     * const studyPrograms = await prisma.studyProgram.findMany()
     * 
     * // Get first 10 StudyPrograms
     * const studyPrograms = await prisma.studyProgram.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const studyProgramWithIdOnly = await prisma.studyProgram.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends StudyProgramFindManyArgs>(args?: SelectSubset<T, StudyProgramFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StudyProgramPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a StudyProgram.
     * @param {StudyProgramCreateArgs} args - Arguments to create a StudyProgram.
     * @example
     * // Create one StudyProgram
     * const StudyProgram = await prisma.studyProgram.create({
     *   data: {
     *     // ... data to create a StudyProgram
     *   }
     * })
     * 
     */
    create<T extends StudyProgramCreateArgs>(args: SelectSubset<T, StudyProgramCreateArgs<ExtArgs>>): Prisma__StudyProgramClient<$Result.GetResult<Prisma.$StudyProgramPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many StudyPrograms.
     * @param {StudyProgramCreateManyArgs} args - Arguments to create many StudyPrograms.
     * @example
     * // Create many StudyPrograms
     * const studyProgram = await prisma.studyProgram.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends StudyProgramCreateManyArgs>(args?: SelectSubset<T, StudyProgramCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a StudyProgram.
     * @param {StudyProgramDeleteArgs} args - Arguments to delete one StudyProgram.
     * @example
     * // Delete one StudyProgram
     * const StudyProgram = await prisma.studyProgram.delete({
     *   where: {
     *     // ... filter to delete one StudyProgram
     *   }
     * })
     * 
     */
    delete<T extends StudyProgramDeleteArgs>(args: SelectSubset<T, StudyProgramDeleteArgs<ExtArgs>>): Prisma__StudyProgramClient<$Result.GetResult<Prisma.$StudyProgramPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one StudyProgram.
     * @param {StudyProgramUpdateArgs} args - Arguments to update one StudyProgram.
     * @example
     * // Update one StudyProgram
     * const studyProgram = await prisma.studyProgram.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends StudyProgramUpdateArgs>(args: SelectSubset<T, StudyProgramUpdateArgs<ExtArgs>>): Prisma__StudyProgramClient<$Result.GetResult<Prisma.$StudyProgramPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more StudyPrograms.
     * @param {StudyProgramDeleteManyArgs} args - Arguments to filter StudyPrograms to delete.
     * @example
     * // Delete a few StudyPrograms
     * const { count } = await prisma.studyProgram.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends StudyProgramDeleteManyArgs>(args?: SelectSubset<T, StudyProgramDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StudyPrograms.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StudyProgramUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many StudyPrograms
     * const studyProgram = await prisma.studyProgram.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends StudyProgramUpdateManyArgs>(args: SelectSubset<T, StudyProgramUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one StudyProgram.
     * @param {StudyProgramUpsertArgs} args - Arguments to update or create a StudyProgram.
     * @example
     * // Update or create a StudyProgram
     * const studyProgram = await prisma.studyProgram.upsert({
     *   create: {
     *     // ... data to create a StudyProgram
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the StudyProgram we want to update
     *   }
     * })
     */
    upsert<T extends StudyProgramUpsertArgs>(args: SelectSubset<T, StudyProgramUpsertArgs<ExtArgs>>): Prisma__StudyProgramClient<$Result.GetResult<Prisma.$StudyProgramPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of StudyPrograms.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StudyProgramCountArgs} args - Arguments to filter StudyPrograms to count.
     * @example
     * // Count the number of StudyPrograms
     * const count = await prisma.studyProgram.count({
     *   where: {
     *     // ... the filter for the StudyPrograms we want to count
     *   }
     * })
    **/
    count<T extends StudyProgramCountArgs>(
      args?: Subset<T, StudyProgramCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StudyProgramCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a StudyProgram.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StudyProgramAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StudyProgramAggregateArgs>(args: Subset<T, StudyProgramAggregateArgs>): Prisma.PrismaPromise<GetStudyProgramAggregateType<T>>

    /**
     * Group by StudyProgram.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StudyProgramGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends StudyProgramGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: StudyProgramGroupByArgs['orderBy'] }
        : { orderBy?: StudyProgramGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, StudyProgramGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStudyProgramGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the StudyProgram model
   */
  readonly fields: StudyProgramFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for StudyProgram.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__StudyProgramClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    profiles<T extends StudyProgram$profilesArgs<ExtArgs> = {}>(args?: Subset<T, StudyProgram$profilesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the StudyProgram model
   */ 
  interface StudyProgramFieldRefs {
    readonly id: FieldRef<"StudyProgram", 'String'>
    readonly name: FieldRef<"StudyProgram", 'String'>
    readonly code: FieldRef<"StudyProgram", 'String'>
    readonly level: FieldRef<"StudyProgram", 'String'>
    readonly createdAt: FieldRef<"StudyProgram", 'DateTime'>
    readonly updatedAt: FieldRef<"StudyProgram", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * StudyProgram findUnique
   */
  export type StudyProgramFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StudyProgram
     */
    select?: StudyProgramSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StudyProgramInclude<ExtArgs> | null
    /**
     * Filter, which StudyProgram to fetch.
     */
    where: StudyProgramWhereUniqueInput
  }

  /**
   * StudyProgram findUniqueOrThrow
   */
  export type StudyProgramFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StudyProgram
     */
    select?: StudyProgramSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StudyProgramInclude<ExtArgs> | null
    /**
     * Filter, which StudyProgram to fetch.
     */
    where: StudyProgramWhereUniqueInput
  }

  /**
   * StudyProgram findFirst
   */
  export type StudyProgramFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StudyProgram
     */
    select?: StudyProgramSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StudyProgramInclude<ExtArgs> | null
    /**
     * Filter, which StudyProgram to fetch.
     */
    where?: StudyProgramWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StudyPrograms to fetch.
     */
    orderBy?: StudyProgramOrderByWithRelationInput | StudyProgramOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StudyPrograms.
     */
    cursor?: StudyProgramWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StudyPrograms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StudyPrograms.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StudyPrograms.
     */
    distinct?: StudyProgramScalarFieldEnum | StudyProgramScalarFieldEnum[]
  }

  /**
   * StudyProgram findFirstOrThrow
   */
  export type StudyProgramFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StudyProgram
     */
    select?: StudyProgramSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StudyProgramInclude<ExtArgs> | null
    /**
     * Filter, which StudyProgram to fetch.
     */
    where?: StudyProgramWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StudyPrograms to fetch.
     */
    orderBy?: StudyProgramOrderByWithRelationInput | StudyProgramOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StudyPrograms.
     */
    cursor?: StudyProgramWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StudyPrograms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StudyPrograms.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StudyPrograms.
     */
    distinct?: StudyProgramScalarFieldEnum | StudyProgramScalarFieldEnum[]
  }

  /**
   * StudyProgram findMany
   */
  export type StudyProgramFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StudyProgram
     */
    select?: StudyProgramSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StudyProgramInclude<ExtArgs> | null
    /**
     * Filter, which StudyPrograms to fetch.
     */
    where?: StudyProgramWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StudyPrograms to fetch.
     */
    orderBy?: StudyProgramOrderByWithRelationInput | StudyProgramOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing StudyPrograms.
     */
    cursor?: StudyProgramWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StudyPrograms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StudyPrograms.
     */
    skip?: number
    distinct?: StudyProgramScalarFieldEnum | StudyProgramScalarFieldEnum[]
  }

  /**
   * StudyProgram create
   */
  export type StudyProgramCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StudyProgram
     */
    select?: StudyProgramSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StudyProgramInclude<ExtArgs> | null
    /**
     * The data needed to create a StudyProgram.
     */
    data: XOR<StudyProgramCreateInput, StudyProgramUncheckedCreateInput>
  }

  /**
   * StudyProgram createMany
   */
  export type StudyProgramCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many StudyPrograms.
     */
    data: StudyProgramCreateManyInput | StudyProgramCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * StudyProgram update
   */
  export type StudyProgramUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StudyProgram
     */
    select?: StudyProgramSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StudyProgramInclude<ExtArgs> | null
    /**
     * The data needed to update a StudyProgram.
     */
    data: XOR<StudyProgramUpdateInput, StudyProgramUncheckedUpdateInput>
    /**
     * Choose, which StudyProgram to update.
     */
    where: StudyProgramWhereUniqueInput
  }

  /**
   * StudyProgram updateMany
   */
  export type StudyProgramUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update StudyPrograms.
     */
    data: XOR<StudyProgramUpdateManyMutationInput, StudyProgramUncheckedUpdateManyInput>
    /**
     * Filter which StudyPrograms to update
     */
    where?: StudyProgramWhereInput
  }

  /**
   * StudyProgram upsert
   */
  export type StudyProgramUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StudyProgram
     */
    select?: StudyProgramSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StudyProgramInclude<ExtArgs> | null
    /**
     * The filter to search for the StudyProgram to update in case it exists.
     */
    where: StudyProgramWhereUniqueInput
    /**
     * In case the StudyProgram found by the `where` argument doesn't exist, create a new StudyProgram with this data.
     */
    create: XOR<StudyProgramCreateInput, StudyProgramUncheckedCreateInput>
    /**
     * In case the StudyProgram was found with the provided `where` argument, update it with this data.
     */
    update: XOR<StudyProgramUpdateInput, StudyProgramUncheckedUpdateInput>
  }

  /**
   * StudyProgram delete
   */
  export type StudyProgramDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StudyProgram
     */
    select?: StudyProgramSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StudyProgramInclude<ExtArgs> | null
    /**
     * Filter which StudyProgram to delete.
     */
    where: StudyProgramWhereUniqueInput
  }

  /**
   * StudyProgram deleteMany
   */
  export type StudyProgramDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StudyPrograms to delete
     */
    where?: StudyProgramWhereInput
  }

  /**
   * StudyProgram.profiles
   */
  export type StudyProgram$profilesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    where?: ProfileWhereInput
    orderBy?: ProfileOrderByWithRelationInput | ProfileOrderByWithRelationInput[]
    cursor?: ProfileWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProfileScalarFieldEnum | ProfileScalarFieldEnum[]
  }

  /**
   * StudyProgram without action
   */
  export type StudyProgramDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StudyProgram
     */
    select?: StudyProgramSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StudyProgramInclude<ExtArgs> | null
  }


  /**
   * Model SensitiveStudentData
   */

  export type AggregateSensitiveStudentData = {
    _count: SensitiveStudentDataCountAggregateOutputType | null
    _avg: SensitiveStudentDataAvgAggregateOutputType | null
    _sum: SensitiveStudentDataSumAggregateOutputType | null
    _min: SensitiveStudentDataMinAggregateOutputType | null
    _max: SensitiveStudentDataMaxAggregateOutputType | null
  }

  export type SensitiveStudentDataAvgAggregateOutputType = {
    total_credits: number | null
    gpa: number | null
  }

  export type SensitiveStudentDataSumAggregateOutputType = {
    total_credits: number | null
    gpa: number | null
  }

  export type SensitiveStudentDataMinAggregateOutputType = {
    id: string | null
    profile_id: string | null
    pt_code: string | null
    place_of_birth: string | null
    date_of_birth: Date | null
    national_identity_number: string | null
    full_address: string | null
    email: string | null
    phone_number: string | null
    mobile_number: string | null
    total_credits: number | null
    graduation_date: Date | null
    yudisium_date: Date | null
    gpa: number | null
    gender: string | null
  }

  export type SensitiveStudentDataMaxAggregateOutputType = {
    id: string | null
    profile_id: string | null
    pt_code: string | null
    place_of_birth: string | null
    date_of_birth: Date | null
    national_identity_number: string | null
    full_address: string | null
    email: string | null
    phone_number: string | null
    mobile_number: string | null
    total_credits: number | null
    graduation_date: Date | null
    yudisium_date: Date | null
    gpa: number | null
    gender: string | null
  }

  export type SensitiveStudentDataCountAggregateOutputType = {
    id: number
    profile_id: number
    pt_code: number
    place_of_birth: number
    date_of_birth: number
    national_identity_number: number
    full_address: number
    email: number
    phone_number: number
    mobile_number: number
    total_credits: number
    graduation_date: number
    yudisium_date: number
    gpa: number
    gender: number
    _all: number
  }


  export type SensitiveStudentDataAvgAggregateInputType = {
    total_credits?: true
    gpa?: true
  }

  export type SensitiveStudentDataSumAggregateInputType = {
    total_credits?: true
    gpa?: true
  }

  export type SensitiveStudentDataMinAggregateInputType = {
    id?: true
    profile_id?: true
    pt_code?: true
    place_of_birth?: true
    date_of_birth?: true
    national_identity_number?: true
    full_address?: true
    email?: true
    phone_number?: true
    mobile_number?: true
    total_credits?: true
    graduation_date?: true
    yudisium_date?: true
    gpa?: true
    gender?: true
  }

  export type SensitiveStudentDataMaxAggregateInputType = {
    id?: true
    profile_id?: true
    pt_code?: true
    place_of_birth?: true
    date_of_birth?: true
    national_identity_number?: true
    full_address?: true
    email?: true
    phone_number?: true
    mobile_number?: true
    total_credits?: true
    graduation_date?: true
    yudisium_date?: true
    gpa?: true
    gender?: true
  }

  export type SensitiveStudentDataCountAggregateInputType = {
    id?: true
    profile_id?: true
    pt_code?: true
    place_of_birth?: true
    date_of_birth?: true
    national_identity_number?: true
    full_address?: true
    email?: true
    phone_number?: true
    mobile_number?: true
    total_credits?: true
    graduation_date?: true
    yudisium_date?: true
    gpa?: true
    gender?: true
    _all?: true
  }

  export type SensitiveStudentDataAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SensitiveStudentData to aggregate.
     */
    where?: SensitiveStudentDataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SensitiveStudentData to fetch.
     */
    orderBy?: SensitiveStudentDataOrderByWithRelationInput | SensitiveStudentDataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SensitiveStudentDataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SensitiveStudentData from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SensitiveStudentData.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SensitiveStudentData
    **/
    _count?: true | SensitiveStudentDataCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SensitiveStudentDataAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SensitiveStudentDataSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SensitiveStudentDataMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SensitiveStudentDataMaxAggregateInputType
  }

  export type GetSensitiveStudentDataAggregateType<T extends SensitiveStudentDataAggregateArgs> = {
        [P in keyof T & keyof AggregateSensitiveStudentData]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSensitiveStudentData[P]>
      : GetScalarType<T[P], AggregateSensitiveStudentData[P]>
  }




  export type SensitiveStudentDataGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SensitiveStudentDataWhereInput
    orderBy?: SensitiveStudentDataOrderByWithAggregationInput | SensitiveStudentDataOrderByWithAggregationInput[]
    by: SensitiveStudentDataScalarFieldEnum[] | SensitiveStudentDataScalarFieldEnum
    having?: SensitiveStudentDataScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SensitiveStudentDataCountAggregateInputType | true
    _avg?: SensitiveStudentDataAvgAggregateInputType
    _sum?: SensitiveStudentDataSumAggregateInputType
    _min?: SensitiveStudentDataMinAggregateInputType
    _max?: SensitiveStudentDataMaxAggregateInputType
  }

  export type SensitiveStudentDataGroupByOutputType = {
    id: string
    profile_id: string
    pt_code: string
    place_of_birth: string
    date_of_birth: Date
    national_identity_number: string
    full_address: string
    email: string
    phone_number: string
    mobile_number: string
    total_credits: number
    graduation_date: Date
    yudisium_date: Date
    gpa: number
    gender: string
    _count: SensitiveStudentDataCountAggregateOutputType | null
    _avg: SensitiveStudentDataAvgAggregateOutputType | null
    _sum: SensitiveStudentDataSumAggregateOutputType | null
    _min: SensitiveStudentDataMinAggregateOutputType | null
    _max: SensitiveStudentDataMaxAggregateOutputType | null
  }

  type GetSensitiveStudentDataGroupByPayload<T extends SensitiveStudentDataGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SensitiveStudentDataGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SensitiveStudentDataGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SensitiveStudentDataGroupByOutputType[P]>
            : GetScalarType<T[P], SensitiveStudentDataGroupByOutputType[P]>
        }
      >
    >


  export type SensitiveStudentDataSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    profile_id?: boolean
    pt_code?: boolean
    place_of_birth?: boolean
    date_of_birth?: boolean
    national_identity_number?: boolean
    full_address?: boolean
    email?: boolean
    phone_number?: boolean
    mobile_number?: boolean
    total_credits?: boolean
    graduation_date?: boolean
    yudisium_date?: boolean
    gpa?: boolean
    gender?: boolean
    profile?: boolean | ProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sensitiveStudentData"]>


  export type SensitiveStudentDataSelectScalar = {
    id?: boolean
    profile_id?: boolean
    pt_code?: boolean
    place_of_birth?: boolean
    date_of_birth?: boolean
    national_identity_number?: boolean
    full_address?: boolean
    email?: boolean
    phone_number?: boolean
    mobile_number?: boolean
    total_credits?: boolean
    graduation_date?: boolean
    yudisium_date?: boolean
    gpa?: boolean
    gender?: boolean
  }

  export type SensitiveStudentDataInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    profile?: boolean | ProfileDefaultArgs<ExtArgs>
  }

  export type $SensitiveStudentDataPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SensitiveStudentData"
    objects: {
      profile: Prisma.$ProfilePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      profile_id: string
      pt_code: string
      place_of_birth: string
      date_of_birth: Date
      national_identity_number: string
      full_address: string
      email: string
      phone_number: string
      mobile_number: string
      total_credits: number
      graduation_date: Date
      yudisium_date: Date
      gpa: number
      gender: string
    }, ExtArgs["result"]["sensitiveStudentData"]>
    composites: {}
  }

  type SensitiveStudentDataGetPayload<S extends boolean | null | undefined | SensitiveStudentDataDefaultArgs> = $Result.GetResult<Prisma.$SensitiveStudentDataPayload, S>

  type SensitiveStudentDataCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SensitiveStudentDataFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SensitiveStudentDataCountAggregateInputType | true
    }

  export interface SensitiveStudentDataDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SensitiveStudentData'], meta: { name: 'SensitiveStudentData' } }
    /**
     * Find zero or one SensitiveStudentData that matches the filter.
     * @param {SensitiveStudentDataFindUniqueArgs} args - Arguments to find a SensitiveStudentData
     * @example
     * // Get one SensitiveStudentData
     * const sensitiveStudentData = await prisma.sensitiveStudentData.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SensitiveStudentDataFindUniqueArgs>(args: SelectSubset<T, SensitiveStudentDataFindUniqueArgs<ExtArgs>>): Prisma__SensitiveStudentDataClient<$Result.GetResult<Prisma.$SensitiveStudentDataPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one SensitiveStudentData that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {SensitiveStudentDataFindUniqueOrThrowArgs} args - Arguments to find a SensitiveStudentData
     * @example
     * // Get one SensitiveStudentData
     * const sensitiveStudentData = await prisma.sensitiveStudentData.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SensitiveStudentDataFindUniqueOrThrowArgs>(args: SelectSubset<T, SensitiveStudentDataFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SensitiveStudentDataClient<$Result.GetResult<Prisma.$SensitiveStudentDataPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first SensitiveStudentData that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SensitiveStudentDataFindFirstArgs} args - Arguments to find a SensitiveStudentData
     * @example
     * // Get one SensitiveStudentData
     * const sensitiveStudentData = await prisma.sensitiveStudentData.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SensitiveStudentDataFindFirstArgs>(args?: SelectSubset<T, SensitiveStudentDataFindFirstArgs<ExtArgs>>): Prisma__SensitiveStudentDataClient<$Result.GetResult<Prisma.$SensitiveStudentDataPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first SensitiveStudentData that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SensitiveStudentDataFindFirstOrThrowArgs} args - Arguments to find a SensitiveStudentData
     * @example
     * // Get one SensitiveStudentData
     * const sensitiveStudentData = await prisma.sensitiveStudentData.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SensitiveStudentDataFindFirstOrThrowArgs>(args?: SelectSubset<T, SensitiveStudentDataFindFirstOrThrowArgs<ExtArgs>>): Prisma__SensitiveStudentDataClient<$Result.GetResult<Prisma.$SensitiveStudentDataPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more SensitiveStudentData that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SensitiveStudentDataFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SensitiveStudentData
     * const sensitiveStudentData = await prisma.sensitiveStudentData.findMany()
     * 
     * // Get first 10 SensitiveStudentData
     * const sensitiveStudentData = await prisma.sensitiveStudentData.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sensitiveStudentDataWithIdOnly = await prisma.sensitiveStudentData.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SensitiveStudentDataFindManyArgs>(args?: SelectSubset<T, SensitiveStudentDataFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SensitiveStudentDataPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a SensitiveStudentData.
     * @param {SensitiveStudentDataCreateArgs} args - Arguments to create a SensitiveStudentData.
     * @example
     * // Create one SensitiveStudentData
     * const SensitiveStudentData = await prisma.sensitiveStudentData.create({
     *   data: {
     *     // ... data to create a SensitiveStudentData
     *   }
     * })
     * 
     */
    create<T extends SensitiveStudentDataCreateArgs>(args: SelectSubset<T, SensitiveStudentDataCreateArgs<ExtArgs>>): Prisma__SensitiveStudentDataClient<$Result.GetResult<Prisma.$SensitiveStudentDataPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many SensitiveStudentData.
     * @param {SensitiveStudentDataCreateManyArgs} args - Arguments to create many SensitiveStudentData.
     * @example
     * // Create many SensitiveStudentData
     * const sensitiveStudentData = await prisma.sensitiveStudentData.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SensitiveStudentDataCreateManyArgs>(args?: SelectSubset<T, SensitiveStudentDataCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a SensitiveStudentData.
     * @param {SensitiveStudentDataDeleteArgs} args - Arguments to delete one SensitiveStudentData.
     * @example
     * // Delete one SensitiveStudentData
     * const SensitiveStudentData = await prisma.sensitiveStudentData.delete({
     *   where: {
     *     // ... filter to delete one SensitiveStudentData
     *   }
     * })
     * 
     */
    delete<T extends SensitiveStudentDataDeleteArgs>(args: SelectSubset<T, SensitiveStudentDataDeleteArgs<ExtArgs>>): Prisma__SensitiveStudentDataClient<$Result.GetResult<Prisma.$SensitiveStudentDataPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one SensitiveStudentData.
     * @param {SensitiveStudentDataUpdateArgs} args - Arguments to update one SensitiveStudentData.
     * @example
     * // Update one SensitiveStudentData
     * const sensitiveStudentData = await prisma.sensitiveStudentData.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SensitiveStudentDataUpdateArgs>(args: SelectSubset<T, SensitiveStudentDataUpdateArgs<ExtArgs>>): Prisma__SensitiveStudentDataClient<$Result.GetResult<Prisma.$SensitiveStudentDataPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more SensitiveStudentData.
     * @param {SensitiveStudentDataDeleteManyArgs} args - Arguments to filter SensitiveStudentData to delete.
     * @example
     * // Delete a few SensitiveStudentData
     * const { count } = await prisma.sensitiveStudentData.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SensitiveStudentDataDeleteManyArgs>(args?: SelectSubset<T, SensitiveStudentDataDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SensitiveStudentData.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SensitiveStudentDataUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SensitiveStudentData
     * const sensitiveStudentData = await prisma.sensitiveStudentData.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SensitiveStudentDataUpdateManyArgs>(args: SelectSubset<T, SensitiveStudentDataUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SensitiveStudentData.
     * @param {SensitiveStudentDataUpsertArgs} args - Arguments to update or create a SensitiveStudentData.
     * @example
     * // Update or create a SensitiveStudentData
     * const sensitiveStudentData = await prisma.sensitiveStudentData.upsert({
     *   create: {
     *     // ... data to create a SensitiveStudentData
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SensitiveStudentData we want to update
     *   }
     * })
     */
    upsert<T extends SensitiveStudentDataUpsertArgs>(args: SelectSubset<T, SensitiveStudentDataUpsertArgs<ExtArgs>>): Prisma__SensitiveStudentDataClient<$Result.GetResult<Prisma.$SensitiveStudentDataPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of SensitiveStudentData.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SensitiveStudentDataCountArgs} args - Arguments to filter SensitiveStudentData to count.
     * @example
     * // Count the number of SensitiveStudentData
     * const count = await prisma.sensitiveStudentData.count({
     *   where: {
     *     // ... the filter for the SensitiveStudentData we want to count
     *   }
     * })
    **/
    count<T extends SensitiveStudentDataCountArgs>(
      args?: Subset<T, SensitiveStudentDataCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SensitiveStudentDataCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SensitiveStudentData.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SensitiveStudentDataAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SensitiveStudentDataAggregateArgs>(args: Subset<T, SensitiveStudentDataAggregateArgs>): Prisma.PrismaPromise<GetSensitiveStudentDataAggregateType<T>>

    /**
     * Group by SensitiveStudentData.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SensitiveStudentDataGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SensitiveStudentDataGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SensitiveStudentDataGroupByArgs['orderBy'] }
        : { orderBy?: SensitiveStudentDataGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SensitiveStudentDataGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSensitiveStudentDataGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SensitiveStudentData model
   */
  readonly fields: SensitiveStudentDataFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SensitiveStudentData.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SensitiveStudentDataClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    profile<T extends ProfileDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProfileDefaultArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SensitiveStudentData model
   */ 
  interface SensitiveStudentDataFieldRefs {
    readonly id: FieldRef<"SensitiveStudentData", 'String'>
    readonly profile_id: FieldRef<"SensitiveStudentData", 'String'>
    readonly pt_code: FieldRef<"SensitiveStudentData", 'String'>
    readonly place_of_birth: FieldRef<"SensitiveStudentData", 'String'>
    readonly date_of_birth: FieldRef<"SensitiveStudentData", 'DateTime'>
    readonly national_identity_number: FieldRef<"SensitiveStudentData", 'String'>
    readonly full_address: FieldRef<"SensitiveStudentData", 'String'>
    readonly email: FieldRef<"SensitiveStudentData", 'String'>
    readonly phone_number: FieldRef<"SensitiveStudentData", 'String'>
    readonly mobile_number: FieldRef<"SensitiveStudentData", 'String'>
    readonly total_credits: FieldRef<"SensitiveStudentData", 'Int'>
    readonly graduation_date: FieldRef<"SensitiveStudentData", 'DateTime'>
    readonly yudisium_date: FieldRef<"SensitiveStudentData", 'DateTime'>
    readonly gpa: FieldRef<"SensitiveStudentData", 'Float'>
    readonly gender: FieldRef<"SensitiveStudentData", 'String'>
  }
    

  // Custom InputTypes
  /**
   * SensitiveStudentData findUnique
   */
  export type SensitiveStudentDataFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SensitiveStudentData
     */
    select?: SensitiveStudentDataSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SensitiveStudentDataInclude<ExtArgs> | null
    /**
     * Filter, which SensitiveStudentData to fetch.
     */
    where: SensitiveStudentDataWhereUniqueInput
  }

  /**
   * SensitiveStudentData findUniqueOrThrow
   */
  export type SensitiveStudentDataFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SensitiveStudentData
     */
    select?: SensitiveStudentDataSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SensitiveStudentDataInclude<ExtArgs> | null
    /**
     * Filter, which SensitiveStudentData to fetch.
     */
    where: SensitiveStudentDataWhereUniqueInput
  }

  /**
   * SensitiveStudentData findFirst
   */
  export type SensitiveStudentDataFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SensitiveStudentData
     */
    select?: SensitiveStudentDataSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SensitiveStudentDataInclude<ExtArgs> | null
    /**
     * Filter, which SensitiveStudentData to fetch.
     */
    where?: SensitiveStudentDataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SensitiveStudentData to fetch.
     */
    orderBy?: SensitiveStudentDataOrderByWithRelationInput | SensitiveStudentDataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SensitiveStudentData.
     */
    cursor?: SensitiveStudentDataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SensitiveStudentData from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SensitiveStudentData.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SensitiveStudentData.
     */
    distinct?: SensitiveStudentDataScalarFieldEnum | SensitiveStudentDataScalarFieldEnum[]
  }

  /**
   * SensitiveStudentData findFirstOrThrow
   */
  export type SensitiveStudentDataFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SensitiveStudentData
     */
    select?: SensitiveStudentDataSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SensitiveStudentDataInclude<ExtArgs> | null
    /**
     * Filter, which SensitiveStudentData to fetch.
     */
    where?: SensitiveStudentDataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SensitiveStudentData to fetch.
     */
    orderBy?: SensitiveStudentDataOrderByWithRelationInput | SensitiveStudentDataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SensitiveStudentData.
     */
    cursor?: SensitiveStudentDataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SensitiveStudentData from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SensitiveStudentData.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SensitiveStudentData.
     */
    distinct?: SensitiveStudentDataScalarFieldEnum | SensitiveStudentDataScalarFieldEnum[]
  }

  /**
   * SensitiveStudentData findMany
   */
  export type SensitiveStudentDataFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SensitiveStudentData
     */
    select?: SensitiveStudentDataSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SensitiveStudentDataInclude<ExtArgs> | null
    /**
     * Filter, which SensitiveStudentData to fetch.
     */
    where?: SensitiveStudentDataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SensitiveStudentData to fetch.
     */
    orderBy?: SensitiveStudentDataOrderByWithRelationInput | SensitiveStudentDataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SensitiveStudentData.
     */
    cursor?: SensitiveStudentDataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SensitiveStudentData from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SensitiveStudentData.
     */
    skip?: number
    distinct?: SensitiveStudentDataScalarFieldEnum | SensitiveStudentDataScalarFieldEnum[]
  }

  /**
   * SensitiveStudentData create
   */
  export type SensitiveStudentDataCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SensitiveStudentData
     */
    select?: SensitiveStudentDataSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SensitiveStudentDataInclude<ExtArgs> | null
    /**
     * The data needed to create a SensitiveStudentData.
     */
    data: XOR<SensitiveStudentDataCreateInput, SensitiveStudentDataUncheckedCreateInput>
  }

  /**
   * SensitiveStudentData createMany
   */
  export type SensitiveStudentDataCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SensitiveStudentData.
     */
    data: SensitiveStudentDataCreateManyInput | SensitiveStudentDataCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SensitiveStudentData update
   */
  export type SensitiveStudentDataUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SensitiveStudentData
     */
    select?: SensitiveStudentDataSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SensitiveStudentDataInclude<ExtArgs> | null
    /**
     * The data needed to update a SensitiveStudentData.
     */
    data: XOR<SensitiveStudentDataUpdateInput, SensitiveStudentDataUncheckedUpdateInput>
    /**
     * Choose, which SensitiveStudentData to update.
     */
    where: SensitiveStudentDataWhereUniqueInput
  }

  /**
   * SensitiveStudentData updateMany
   */
  export type SensitiveStudentDataUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SensitiveStudentData.
     */
    data: XOR<SensitiveStudentDataUpdateManyMutationInput, SensitiveStudentDataUncheckedUpdateManyInput>
    /**
     * Filter which SensitiveStudentData to update
     */
    where?: SensitiveStudentDataWhereInput
  }

  /**
   * SensitiveStudentData upsert
   */
  export type SensitiveStudentDataUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SensitiveStudentData
     */
    select?: SensitiveStudentDataSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SensitiveStudentDataInclude<ExtArgs> | null
    /**
     * The filter to search for the SensitiveStudentData to update in case it exists.
     */
    where: SensitiveStudentDataWhereUniqueInput
    /**
     * In case the SensitiveStudentData found by the `where` argument doesn't exist, create a new SensitiveStudentData with this data.
     */
    create: XOR<SensitiveStudentDataCreateInput, SensitiveStudentDataUncheckedCreateInput>
    /**
     * In case the SensitiveStudentData was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SensitiveStudentDataUpdateInput, SensitiveStudentDataUncheckedUpdateInput>
  }

  /**
   * SensitiveStudentData delete
   */
  export type SensitiveStudentDataDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SensitiveStudentData
     */
    select?: SensitiveStudentDataSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SensitiveStudentDataInclude<ExtArgs> | null
    /**
     * Filter which SensitiveStudentData to delete.
     */
    where: SensitiveStudentDataWhereUniqueInput
  }

  /**
   * SensitiveStudentData deleteMany
   */
  export type SensitiveStudentDataDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SensitiveStudentData to delete
     */
    where?: SensitiveStudentDataWhereInput
  }

  /**
   * SensitiveStudentData without action
   */
  export type SensitiveStudentDataDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SensitiveStudentData
     */
    select?: SensitiveStudentDataSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SensitiveStudentDataInclude<ExtArgs> | null
  }


  /**
   * Model News
   */

  export type AggregateNews = {
    _count: NewsCountAggregateOutputType | null
    _min: NewsMinAggregateOutputType | null
    _max: NewsMaxAggregateOutputType | null
  }

  export type NewsMinAggregateOutputType = {
    id: string | null
    title: string | null
    content: string | null
    image: string | null
    createdAt: Date | null
    updatedAt: Date | null
    NewsStatus: $Enums.NewsStatus | null
    rejectionReason: string | null
    authorId: string | null
    adminUniversitasId: string | null
    isActive: boolean | null
  }

  export type NewsMaxAggregateOutputType = {
    id: string | null
    title: string | null
    content: string | null
    image: string | null
    createdAt: Date | null
    updatedAt: Date | null
    NewsStatus: $Enums.NewsStatus | null
    rejectionReason: string | null
    authorId: string | null
    adminUniversitasId: string | null
    isActive: boolean | null
  }

  export type NewsCountAggregateOutputType = {
    id: number
    title: number
    content: number
    image: number
    createdAt: number
    updatedAt: number
    NewsStatus: number
    rejectionReason: number
    authorId: number
    adminUniversitasId: number
    isActive: number
    _all: number
  }


  export type NewsMinAggregateInputType = {
    id?: true
    title?: true
    content?: true
    image?: true
    createdAt?: true
    updatedAt?: true
    NewsStatus?: true
    rejectionReason?: true
    authorId?: true
    adminUniversitasId?: true
    isActive?: true
  }

  export type NewsMaxAggregateInputType = {
    id?: true
    title?: true
    content?: true
    image?: true
    createdAt?: true
    updatedAt?: true
    NewsStatus?: true
    rejectionReason?: true
    authorId?: true
    adminUniversitasId?: true
    isActive?: true
  }

  export type NewsCountAggregateInputType = {
    id?: true
    title?: true
    content?: true
    image?: true
    createdAt?: true
    updatedAt?: true
    NewsStatus?: true
    rejectionReason?: true
    authorId?: true
    adminUniversitasId?: true
    isActive?: true
    _all?: true
  }

  export type NewsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which News to aggregate.
     */
    where?: NewsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of News to fetch.
     */
    orderBy?: NewsOrderByWithRelationInput | NewsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: NewsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` News from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` News.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned News
    **/
    _count?: true | NewsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NewsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NewsMaxAggregateInputType
  }

  export type GetNewsAggregateType<T extends NewsAggregateArgs> = {
        [P in keyof T & keyof AggregateNews]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNews[P]>
      : GetScalarType<T[P], AggregateNews[P]>
  }




  export type NewsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NewsWhereInput
    orderBy?: NewsOrderByWithAggregationInput | NewsOrderByWithAggregationInput[]
    by: NewsScalarFieldEnum[] | NewsScalarFieldEnum
    having?: NewsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NewsCountAggregateInputType | true
    _min?: NewsMinAggregateInputType
    _max?: NewsMaxAggregateInputType
  }

  export type NewsGroupByOutputType = {
    id: string
    title: string
    content: string
    image: string
    createdAt: Date
    updatedAt: Date
    NewsStatus: $Enums.NewsStatus
    rejectionReason: string | null
    authorId: string
    adminUniversitasId: string | null
    isActive: boolean
    _count: NewsCountAggregateOutputType | null
    _min: NewsMinAggregateOutputType | null
    _max: NewsMaxAggregateOutputType | null
  }

  type GetNewsGroupByPayload<T extends NewsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NewsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NewsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NewsGroupByOutputType[P]>
            : GetScalarType<T[P], NewsGroupByOutputType[P]>
        }
      >
    >


  export type NewsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    content?: boolean
    image?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    NewsStatus?: boolean
    rejectionReason?: boolean
    authorId?: boolean
    adminUniversitasId?: boolean
    isActive?: boolean
    author?: boolean | UserDefaultArgs<ExtArgs>
    adminUniversitas?: boolean | News$adminUniversitasArgs<ExtArgs>
  }, ExtArgs["result"]["news"]>


  export type NewsSelectScalar = {
    id?: boolean
    title?: boolean
    content?: boolean
    image?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    NewsStatus?: boolean
    rejectionReason?: boolean
    authorId?: boolean
    adminUniversitasId?: boolean
    isActive?: boolean
  }

  export type NewsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    author?: boolean | UserDefaultArgs<ExtArgs>
    adminUniversitas?: boolean | News$adminUniversitasArgs<ExtArgs>
  }

  export type $NewsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "News"
    objects: {
      author: Prisma.$UserPayload<ExtArgs>
      adminUniversitas: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string
      content: string
      image: string
      createdAt: Date
      updatedAt: Date
      NewsStatus: $Enums.NewsStatus
      rejectionReason: string | null
      authorId: string
      adminUniversitasId: string | null
      isActive: boolean
    }, ExtArgs["result"]["news"]>
    composites: {}
  }

  type NewsGetPayload<S extends boolean | null | undefined | NewsDefaultArgs> = $Result.GetResult<Prisma.$NewsPayload, S>

  type NewsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<NewsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: NewsCountAggregateInputType | true
    }

  export interface NewsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['News'], meta: { name: 'News' } }
    /**
     * Find zero or one News that matches the filter.
     * @param {NewsFindUniqueArgs} args - Arguments to find a News
     * @example
     * // Get one News
     * const news = await prisma.news.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends NewsFindUniqueArgs>(args: SelectSubset<T, NewsFindUniqueArgs<ExtArgs>>): Prisma__NewsClient<$Result.GetResult<Prisma.$NewsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one News that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {NewsFindUniqueOrThrowArgs} args - Arguments to find a News
     * @example
     * // Get one News
     * const news = await prisma.news.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends NewsFindUniqueOrThrowArgs>(args: SelectSubset<T, NewsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__NewsClient<$Result.GetResult<Prisma.$NewsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first News that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsFindFirstArgs} args - Arguments to find a News
     * @example
     * // Get one News
     * const news = await prisma.news.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends NewsFindFirstArgs>(args?: SelectSubset<T, NewsFindFirstArgs<ExtArgs>>): Prisma__NewsClient<$Result.GetResult<Prisma.$NewsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first News that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsFindFirstOrThrowArgs} args - Arguments to find a News
     * @example
     * // Get one News
     * const news = await prisma.news.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends NewsFindFirstOrThrowArgs>(args?: SelectSubset<T, NewsFindFirstOrThrowArgs<ExtArgs>>): Prisma__NewsClient<$Result.GetResult<Prisma.$NewsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more News that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all News
     * const news = await prisma.news.findMany()
     * 
     * // Get first 10 News
     * const news = await prisma.news.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const newsWithIdOnly = await prisma.news.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends NewsFindManyArgs>(args?: SelectSubset<T, NewsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NewsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a News.
     * @param {NewsCreateArgs} args - Arguments to create a News.
     * @example
     * // Create one News
     * const News = await prisma.news.create({
     *   data: {
     *     // ... data to create a News
     *   }
     * })
     * 
     */
    create<T extends NewsCreateArgs>(args: SelectSubset<T, NewsCreateArgs<ExtArgs>>): Prisma__NewsClient<$Result.GetResult<Prisma.$NewsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many News.
     * @param {NewsCreateManyArgs} args - Arguments to create many News.
     * @example
     * // Create many News
     * const news = await prisma.news.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends NewsCreateManyArgs>(args?: SelectSubset<T, NewsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a News.
     * @param {NewsDeleteArgs} args - Arguments to delete one News.
     * @example
     * // Delete one News
     * const News = await prisma.news.delete({
     *   where: {
     *     // ... filter to delete one News
     *   }
     * })
     * 
     */
    delete<T extends NewsDeleteArgs>(args: SelectSubset<T, NewsDeleteArgs<ExtArgs>>): Prisma__NewsClient<$Result.GetResult<Prisma.$NewsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one News.
     * @param {NewsUpdateArgs} args - Arguments to update one News.
     * @example
     * // Update one News
     * const news = await prisma.news.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends NewsUpdateArgs>(args: SelectSubset<T, NewsUpdateArgs<ExtArgs>>): Prisma__NewsClient<$Result.GetResult<Prisma.$NewsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more News.
     * @param {NewsDeleteManyArgs} args - Arguments to filter News to delete.
     * @example
     * // Delete a few News
     * const { count } = await prisma.news.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends NewsDeleteManyArgs>(args?: SelectSubset<T, NewsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more News.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many News
     * const news = await prisma.news.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends NewsUpdateManyArgs>(args: SelectSubset<T, NewsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one News.
     * @param {NewsUpsertArgs} args - Arguments to update or create a News.
     * @example
     * // Update or create a News
     * const news = await prisma.news.upsert({
     *   create: {
     *     // ... data to create a News
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the News we want to update
     *   }
     * })
     */
    upsert<T extends NewsUpsertArgs>(args: SelectSubset<T, NewsUpsertArgs<ExtArgs>>): Prisma__NewsClient<$Result.GetResult<Prisma.$NewsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of News.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsCountArgs} args - Arguments to filter News to count.
     * @example
     * // Count the number of News
     * const count = await prisma.news.count({
     *   where: {
     *     // ... the filter for the News we want to count
     *   }
     * })
    **/
    count<T extends NewsCountArgs>(
      args?: Subset<T, NewsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NewsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a News.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NewsAggregateArgs>(args: Subset<T, NewsAggregateArgs>): Prisma.PrismaPromise<GetNewsAggregateType<T>>

    /**
     * Group by News.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends NewsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: NewsGroupByArgs['orderBy'] }
        : { orderBy?: NewsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, NewsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNewsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the News model
   */
  readonly fields: NewsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for News.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__NewsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    author<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    adminUniversitas<T extends News$adminUniversitasArgs<ExtArgs> = {}>(args?: Subset<T, News$adminUniversitasArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the News model
   */ 
  interface NewsFieldRefs {
    readonly id: FieldRef<"News", 'String'>
    readonly title: FieldRef<"News", 'String'>
    readonly content: FieldRef<"News", 'String'>
    readonly image: FieldRef<"News", 'String'>
    readonly createdAt: FieldRef<"News", 'DateTime'>
    readonly updatedAt: FieldRef<"News", 'DateTime'>
    readonly NewsStatus: FieldRef<"News", 'NewsStatus'>
    readonly rejectionReason: FieldRef<"News", 'String'>
    readonly authorId: FieldRef<"News", 'String'>
    readonly adminUniversitasId: FieldRef<"News", 'String'>
    readonly isActive: FieldRef<"News", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * News findUnique
   */
  export type NewsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the News
     */
    select?: NewsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsInclude<ExtArgs> | null
    /**
     * Filter, which News to fetch.
     */
    where: NewsWhereUniqueInput
  }

  /**
   * News findUniqueOrThrow
   */
  export type NewsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the News
     */
    select?: NewsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsInclude<ExtArgs> | null
    /**
     * Filter, which News to fetch.
     */
    where: NewsWhereUniqueInput
  }

  /**
   * News findFirst
   */
  export type NewsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the News
     */
    select?: NewsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsInclude<ExtArgs> | null
    /**
     * Filter, which News to fetch.
     */
    where?: NewsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of News to fetch.
     */
    orderBy?: NewsOrderByWithRelationInput | NewsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for News.
     */
    cursor?: NewsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` News from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` News.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of News.
     */
    distinct?: NewsScalarFieldEnum | NewsScalarFieldEnum[]
  }

  /**
   * News findFirstOrThrow
   */
  export type NewsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the News
     */
    select?: NewsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsInclude<ExtArgs> | null
    /**
     * Filter, which News to fetch.
     */
    where?: NewsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of News to fetch.
     */
    orderBy?: NewsOrderByWithRelationInput | NewsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for News.
     */
    cursor?: NewsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` News from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` News.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of News.
     */
    distinct?: NewsScalarFieldEnum | NewsScalarFieldEnum[]
  }

  /**
   * News findMany
   */
  export type NewsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the News
     */
    select?: NewsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsInclude<ExtArgs> | null
    /**
     * Filter, which News to fetch.
     */
    where?: NewsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of News to fetch.
     */
    orderBy?: NewsOrderByWithRelationInput | NewsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing News.
     */
    cursor?: NewsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` News from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` News.
     */
    skip?: number
    distinct?: NewsScalarFieldEnum | NewsScalarFieldEnum[]
  }

  /**
   * News create
   */
  export type NewsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the News
     */
    select?: NewsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsInclude<ExtArgs> | null
    /**
     * The data needed to create a News.
     */
    data: XOR<NewsCreateInput, NewsUncheckedCreateInput>
  }

  /**
   * News createMany
   */
  export type NewsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many News.
     */
    data: NewsCreateManyInput | NewsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * News update
   */
  export type NewsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the News
     */
    select?: NewsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsInclude<ExtArgs> | null
    /**
     * The data needed to update a News.
     */
    data: XOR<NewsUpdateInput, NewsUncheckedUpdateInput>
    /**
     * Choose, which News to update.
     */
    where: NewsWhereUniqueInput
  }

  /**
   * News updateMany
   */
  export type NewsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update News.
     */
    data: XOR<NewsUpdateManyMutationInput, NewsUncheckedUpdateManyInput>
    /**
     * Filter which News to update
     */
    where?: NewsWhereInput
  }

  /**
   * News upsert
   */
  export type NewsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the News
     */
    select?: NewsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsInclude<ExtArgs> | null
    /**
     * The filter to search for the News to update in case it exists.
     */
    where: NewsWhereUniqueInput
    /**
     * In case the News found by the `where` argument doesn't exist, create a new News with this data.
     */
    create: XOR<NewsCreateInput, NewsUncheckedCreateInput>
    /**
     * In case the News was found with the provided `where` argument, update it with this data.
     */
    update: XOR<NewsUpdateInput, NewsUncheckedUpdateInput>
  }

  /**
   * News delete
   */
  export type NewsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the News
     */
    select?: NewsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsInclude<ExtArgs> | null
    /**
     * Filter which News to delete.
     */
    where: NewsWhereUniqueInput
  }

  /**
   * News deleteMany
   */
  export type NewsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which News to delete
     */
    where?: NewsWhereInput
  }

  /**
   * News.adminUniversitas
   */
  export type News$adminUniversitasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * News without action
   */
  export type NewsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the News
     */
    select?: NewsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NewsInclude<ExtArgs> | null
  }


  /**
   * Model Event
   */

  export type AggregateEvent = {
    _count: EventCountAggregateOutputType | null
    _min: EventMinAggregateOutputType | null
    _max: EventMaxAggregateOutputType | null
  }

  export type EventMinAggregateOutputType = {
    id: string | null
    title: string | null
    date: Date | null
    description: string | null
    image: string | null
    createdAt: Date | null
    updatedAt: Date | null
    EventStatus: $Enums.EventStatus | null
    rejectionReason: string | null
    authorId: string | null
    adminUniversitasId: string | null
    isActive: boolean | null
  }

  export type EventMaxAggregateOutputType = {
    id: string | null
    title: string | null
    date: Date | null
    description: string | null
    image: string | null
    createdAt: Date | null
    updatedAt: Date | null
    EventStatus: $Enums.EventStatus | null
    rejectionReason: string | null
    authorId: string | null
    adminUniversitasId: string | null
    isActive: boolean | null
  }

  export type EventCountAggregateOutputType = {
    id: number
    title: number
    date: number
    description: number
    image: number
    createdAt: number
    updatedAt: number
    EventStatus: number
    rejectionReason: number
    authorId: number
    adminUniversitasId: number
    isActive: number
    _all: number
  }


  export type EventMinAggregateInputType = {
    id?: true
    title?: true
    date?: true
    description?: true
    image?: true
    createdAt?: true
    updatedAt?: true
    EventStatus?: true
    rejectionReason?: true
    authorId?: true
    adminUniversitasId?: true
    isActive?: true
  }

  export type EventMaxAggregateInputType = {
    id?: true
    title?: true
    date?: true
    description?: true
    image?: true
    createdAt?: true
    updatedAt?: true
    EventStatus?: true
    rejectionReason?: true
    authorId?: true
    adminUniversitasId?: true
    isActive?: true
  }

  export type EventCountAggregateInputType = {
    id?: true
    title?: true
    date?: true
    description?: true
    image?: true
    createdAt?: true
    updatedAt?: true
    EventStatus?: true
    rejectionReason?: true
    authorId?: true
    adminUniversitasId?: true
    isActive?: true
    _all?: true
  }

  export type EventAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Event to aggregate.
     */
    where?: EventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Events to fetch.
     */
    orderBy?: EventOrderByWithRelationInput | EventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Events
    **/
    _count?: true | EventCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EventMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EventMaxAggregateInputType
  }

  export type GetEventAggregateType<T extends EventAggregateArgs> = {
        [P in keyof T & keyof AggregateEvent]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEvent[P]>
      : GetScalarType<T[P], AggregateEvent[P]>
  }




  export type EventGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EventWhereInput
    orderBy?: EventOrderByWithAggregationInput | EventOrderByWithAggregationInput[]
    by: EventScalarFieldEnum[] | EventScalarFieldEnum
    having?: EventScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EventCountAggregateInputType | true
    _min?: EventMinAggregateInputType
    _max?: EventMaxAggregateInputType
  }

  export type EventGroupByOutputType = {
    id: string
    title: string
    date: Date
    description: string | null
    image: string
    createdAt: Date
    updatedAt: Date
    EventStatus: $Enums.EventStatus
    rejectionReason: string | null
    authorId: string
    adminUniversitasId: string | null
    isActive: boolean
    _count: EventCountAggregateOutputType | null
    _min: EventMinAggregateOutputType | null
    _max: EventMaxAggregateOutputType | null
  }

  type GetEventGroupByPayload<T extends EventGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EventGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EventGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EventGroupByOutputType[P]>
            : GetScalarType<T[P], EventGroupByOutputType[P]>
        }
      >
    >


  export type EventSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    date?: boolean
    description?: boolean
    image?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    EventStatus?: boolean
    rejectionReason?: boolean
    authorId?: boolean
    adminUniversitasId?: boolean
    isActive?: boolean
    author?: boolean | UserDefaultArgs<ExtArgs>
    adminUniversitas?: boolean | Event$adminUniversitasArgs<ExtArgs>
  }, ExtArgs["result"]["event"]>


  export type EventSelectScalar = {
    id?: boolean
    title?: boolean
    date?: boolean
    description?: boolean
    image?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    EventStatus?: boolean
    rejectionReason?: boolean
    authorId?: boolean
    adminUniversitasId?: boolean
    isActive?: boolean
  }

  export type EventInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    author?: boolean | UserDefaultArgs<ExtArgs>
    adminUniversitas?: boolean | Event$adminUniversitasArgs<ExtArgs>
  }

  export type $EventPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Event"
    objects: {
      author: Prisma.$UserPayload<ExtArgs>
      adminUniversitas: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string
      date: Date
      description: string | null
      image: string
      createdAt: Date
      updatedAt: Date
      EventStatus: $Enums.EventStatus
      rejectionReason: string | null
      authorId: string
      adminUniversitasId: string | null
      isActive: boolean
    }, ExtArgs["result"]["event"]>
    composites: {}
  }

  type EventGetPayload<S extends boolean | null | undefined | EventDefaultArgs> = $Result.GetResult<Prisma.$EventPayload, S>

  type EventCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<EventFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: EventCountAggregateInputType | true
    }

  export interface EventDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Event'], meta: { name: 'Event' } }
    /**
     * Find zero or one Event that matches the filter.
     * @param {EventFindUniqueArgs} args - Arguments to find a Event
     * @example
     * // Get one Event
     * const event = await prisma.event.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EventFindUniqueArgs>(args: SelectSubset<T, EventFindUniqueArgs<ExtArgs>>): Prisma__EventClient<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Event that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {EventFindUniqueOrThrowArgs} args - Arguments to find a Event
     * @example
     * // Get one Event
     * const event = await prisma.event.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EventFindUniqueOrThrowArgs>(args: SelectSubset<T, EventFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EventClient<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Event that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventFindFirstArgs} args - Arguments to find a Event
     * @example
     * // Get one Event
     * const event = await prisma.event.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EventFindFirstArgs>(args?: SelectSubset<T, EventFindFirstArgs<ExtArgs>>): Prisma__EventClient<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Event that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventFindFirstOrThrowArgs} args - Arguments to find a Event
     * @example
     * // Get one Event
     * const event = await prisma.event.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EventFindFirstOrThrowArgs>(args?: SelectSubset<T, EventFindFirstOrThrowArgs<ExtArgs>>): Prisma__EventClient<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Events that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Events
     * const events = await prisma.event.findMany()
     * 
     * // Get first 10 Events
     * const events = await prisma.event.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const eventWithIdOnly = await prisma.event.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EventFindManyArgs>(args?: SelectSubset<T, EventFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Event.
     * @param {EventCreateArgs} args - Arguments to create a Event.
     * @example
     * // Create one Event
     * const Event = await prisma.event.create({
     *   data: {
     *     // ... data to create a Event
     *   }
     * })
     * 
     */
    create<T extends EventCreateArgs>(args: SelectSubset<T, EventCreateArgs<ExtArgs>>): Prisma__EventClient<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Events.
     * @param {EventCreateManyArgs} args - Arguments to create many Events.
     * @example
     * // Create many Events
     * const event = await prisma.event.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EventCreateManyArgs>(args?: SelectSubset<T, EventCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Event.
     * @param {EventDeleteArgs} args - Arguments to delete one Event.
     * @example
     * // Delete one Event
     * const Event = await prisma.event.delete({
     *   where: {
     *     // ... filter to delete one Event
     *   }
     * })
     * 
     */
    delete<T extends EventDeleteArgs>(args: SelectSubset<T, EventDeleteArgs<ExtArgs>>): Prisma__EventClient<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Event.
     * @param {EventUpdateArgs} args - Arguments to update one Event.
     * @example
     * // Update one Event
     * const event = await prisma.event.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EventUpdateArgs>(args: SelectSubset<T, EventUpdateArgs<ExtArgs>>): Prisma__EventClient<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Events.
     * @param {EventDeleteManyArgs} args - Arguments to filter Events to delete.
     * @example
     * // Delete a few Events
     * const { count } = await prisma.event.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EventDeleteManyArgs>(args?: SelectSubset<T, EventDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Events
     * const event = await prisma.event.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EventUpdateManyArgs>(args: SelectSubset<T, EventUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Event.
     * @param {EventUpsertArgs} args - Arguments to update or create a Event.
     * @example
     * // Update or create a Event
     * const event = await prisma.event.upsert({
     *   create: {
     *     // ... data to create a Event
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Event we want to update
     *   }
     * })
     */
    upsert<T extends EventUpsertArgs>(args: SelectSubset<T, EventUpsertArgs<ExtArgs>>): Prisma__EventClient<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventCountArgs} args - Arguments to filter Events to count.
     * @example
     * // Count the number of Events
     * const count = await prisma.event.count({
     *   where: {
     *     // ... the filter for the Events we want to count
     *   }
     * })
    **/
    count<T extends EventCountArgs>(
      args?: Subset<T, EventCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EventCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Event.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EventAggregateArgs>(args: Subset<T, EventAggregateArgs>): Prisma.PrismaPromise<GetEventAggregateType<T>>

    /**
     * Group by Event.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EventGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EventGroupByArgs['orderBy'] }
        : { orderBy?: EventGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EventGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEventGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Event model
   */
  readonly fields: EventFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Event.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EventClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    author<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    adminUniversitas<T extends Event$adminUniversitasArgs<ExtArgs> = {}>(args?: Subset<T, Event$adminUniversitasArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Event model
   */ 
  interface EventFieldRefs {
    readonly id: FieldRef<"Event", 'String'>
    readonly title: FieldRef<"Event", 'String'>
    readonly date: FieldRef<"Event", 'DateTime'>
    readonly description: FieldRef<"Event", 'String'>
    readonly image: FieldRef<"Event", 'String'>
    readonly createdAt: FieldRef<"Event", 'DateTime'>
    readonly updatedAt: FieldRef<"Event", 'DateTime'>
    readonly EventStatus: FieldRef<"Event", 'EventStatus'>
    readonly rejectionReason: FieldRef<"Event", 'String'>
    readonly authorId: FieldRef<"Event", 'String'>
    readonly adminUniversitasId: FieldRef<"Event", 'String'>
    readonly isActive: FieldRef<"Event", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Event findUnique
   */
  export type EventFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    /**
     * Filter, which Event to fetch.
     */
    where: EventWhereUniqueInput
  }

  /**
   * Event findUniqueOrThrow
   */
  export type EventFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    /**
     * Filter, which Event to fetch.
     */
    where: EventWhereUniqueInput
  }

  /**
   * Event findFirst
   */
  export type EventFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    /**
     * Filter, which Event to fetch.
     */
    where?: EventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Events to fetch.
     */
    orderBy?: EventOrderByWithRelationInput | EventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Events.
     */
    cursor?: EventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Events.
     */
    distinct?: EventScalarFieldEnum | EventScalarFieldEnum[]
  }

  /**
   * Event findFirstOrThrow
   */
  export type EventFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    /**
     * Filter, which Event to fetch.
     */
    where?: EventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Events to fetch.
     */
    orderBy?: EventOrderByWithRelationInput | EventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Events.
     */
    cursor?: EventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Events.
     */
    distinct?: EventScalarFieldEnum | EventScalarFieldEnum[]
  }

  /**
   * Event findMany
   */
  export type EventFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    /**
     * Filter, which Events to fetch.
     */
    where?: EventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Events to fetch.
     */
    orderBy?: EventOrderByWithRelationInput | EventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Events.
     */
    cursor?: EventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Events.
     */
    skip?: number
    distinct?: EventScalarFieldEnum | EventScalarFieldEnum[]
  }

  /**
   * Event create
   */
  export type EventCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    /**
     * The data needed to create a Event.
     */
    data: XOR<EventCreateInput, EventUncheckedCreateInput>
  }

  /**
   * Event createMany
   */
  export type EventCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Events.
     */
    data: EventCreateManyInput | EventCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Event update
   */
  export type EventUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    /**
     * The data needed to update a Event.
     */
    data: XOR<EventUpdateInput, EventUncheckedUpdateInput>
    /**
     * Choose, which Event to update.
     */
    where: EventWhereUniqueInput
  }

  /**
   * Event updateMany
   */
  export type EventUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Events.
     */
    data: XOR<EventUpdateManyMutationInput, EventUncheckedUpdateManyInput>
    /**
     * Filter which Events to update
     */
    where?: EventWhereInput
  }

  /**
   * Event upsert
   */
  export type EventUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    /**
     * The filter to search for the Event to update in case it exists.
     */
    where: EventWhereUniqueInput
    /**
     * In case the Event found by the `where` argument doesn't exist, create a new Event with this data.
     */
    create: XOR<EventCreateInput, EventUncheckedCreateInput>
    /**
     * In case the Event was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EventUpdateInput, EventUncheckedUpdateInput>
  }

  /**
   * Event delete
   */
  export type EventDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    /**
     * Filter which Event to delete.
     */
    where: EventWhereUniqueInput
  }

  /**
   * Event deleteMany
   */
  export type EventDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Events to delete
     */
    where?: EventWhereInput
  }

  /**
   * Event.adminUniversitas
   */
  export type Event$adminUniversitasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Event without action
   */
  export type EventDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
  }


  /**
   * Model AlumniProgram
   */

  export type AggregateAlumniProgram = {
    _count: AlumniProgramCountAggregateOutputType | null
    _min: AlumniProgramMinAggregateOutputType | null
    _max: AlumniProgramMaxAggregateOutputType | null
  }

  export type AlumniProgramMinAggregateOutputType = {
    id: string | null
    title: string | null
    description: string | null
    image: string | null
    category: $Enums.ProgramType | null
    AlumniProgramStatus: $Enums.AlumniProgramStatus | null
    rejectionReason: string | null
    authorId: string | null
    adminProdiId: string | null
    adminUniversitasId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    isActive: boolean | null
  }

  export type AlumniProgramMaxAggregateOutputType = {
    id: string | null
    title: string | null
    description: string | null
    image: string | null
    category: $Enums.ProgramType | null
    AlumniProgramStatus: $Enums.AlumniProgramStatus | null
    rejectionReason: string | null
    authorId: string | null
    adminProdiId: string | null
    adminUniversitasId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    isActive: boolean | null
  }

  export type AlumniProgramCountAggregateOutputType = {
    id: number
    title: number
    description: number
    image: number
    category: number
    AlumniProgramStatus: number
    rejectionReason: number
    authorId: number
    adminProdiId: number
    adminUniversitasId: number
    createdAt: number
    updatedAt: number
    isActive: number
    _all: number
  }


  export type AlumniProgramMinAggregateInputType = {
    id?: true
    title?: true
    description?: true
    image?: true
    category?: true
    AlumniProgramStatus?: true
    rejectionReason?: true
    authorId?: true
    adminProdiId?: true
    adminUniversitasId?: true
    createdAt?: true
    updatedAt?: true
    isActive?: true
  }

  export type AlumniProgramMaxAggregateInputType = {
    id?: true
    title?: true
    description?: true
    image?: true
    category?: true
    AlumniProgramStatus?: true
    rejectionReason?: true
    authorId?: true
    adminProdiId?: true
    adminUniversitasId?: true
    createdAt?: true
    updatedAt?: true
    isActive?: true
  }

  export type AlumniProgramCountAggregateInputType = {
    id?: true
    title?: true
    description?: true
    image?: true
    category?: true
    AlumniProgramStatus?: true
    rejectionReason?: true
    authorId?: true
    adminProdiId?: true
    adminUniversitasId?: true
    createdAt?: true
    updatedAt?: true
    isActive?: true
    _all?: true
  }

  export type AlumniProgramAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AlumniProgram to aggregate.
     */
    where?: AlumniProgramWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AlumniPrograms to fetch.
     */
    orderBy?: AlumniProgramOrderByWithRelationInput | AlumniProgramOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AlumniProgramWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AlumniPrograms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AlumniPrograms.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AlumniPrograms
    **/
    _count?: true | AlumniProgramCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AlumniProgramMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AlumniProgramMaxAggregateInputType
  }

  export type GetAlumniProgramAggregateType<T extends AlumniProgramAggregateArgs> = {
        [P in keyof T & keyof AggregateAlumniProgram]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAlumniProgram[P]>
      : GetScalarType<T[P], AggregateAlumniProgram[P]>
  }




  export type AlumniProgramGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AlumniProgramWhereInput
    orderBy?: AlumniProgramOrderByWithAggregationInput | AlumniProgramOrderByWithAggregationInput[]
    by: AlumniProgramScalarFieldEnum[] | AlumniProgramScalarFieldEnum
    having?: AlumniProgramScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AlumniProgramCountAggregateInputType | true
    _min?: AlumniProgramMinAggregateInputType
    _max?: AlumniProgramMaxAggregateInputType
  }

  export type AlumniProgramGroupByOutputType = {
    id: string
    title: string
    description: string
    image: string | null
    category: $Enums.ProgramType
    AlumniProgramStatus: $Enums.AlumniProgramStatus
    rejectionReason: string | null
    authorId: string
    adminProdiId: string | null
    adminUniversitasId: string | null
    createdAt: Date
    updatedAt: Date
    isActive: boolean
    _count: AlumniProgramCountAggregateOutputType | null
    _min: AlumniProgramMinAggregateOutputType | null
    _max: AlumniProgramMaxAggregateOutputType | null
  }

  type GetAlumniProgramGroupByPayload<T extends AlumniProgramGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AlumniProgramGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AlumniProgramGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AlumniProgramGroupByOutputType[P]>
            : GetScalarType<T[P], AlumniProgramGroupByOutputType[P]>
        }
      >
    >


  export type AlumniProgramSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    description?: boolean
    image?: boolean
    category?: boolean
    AlumniProgramStatus?: boolean
    rejectionReason?: boolean
    authorId?: boolean
    adminProdiId?: boolean
    adminUniversitasId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isActive?: boolean
    author?: boolean | UserDefaultArgs<ExtArgs>
    adminProdi?: boolean | AlumniProgram$adminProdiArgs<ExtArgs>
    adminUniversitas?: boolean | AlumniProgram$adminUniversitasArgs<ExtArgs>
  }, ExtArgs["result"]["alumniProgram"]>


  export type AlumniProgramSelectScalar = {
    id?: boolean
    title?: boolean
    description?: boolean
    image?: boolean
    category?: boolean
    AlumniProgramStatus?: boolean
    rejectionReason?: boolean
    authorId?: boolean
    adminProdiId?: boolean
    adminUniversitasId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isActive?: boolean
  }

  export type AlumniProgramInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    author?: boolean | UserDefaultArgs<ExtArgs>
    adminProdi?: boolean | AlumniProgram$adminProdiArgs<ExtArgs>
    adminUniversitas?: boolean | AlumniProgram$adminUniversitasArgs<ExtArgs>
  }

  export type $AlumniProgramPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AlumniProgram"
    objects: {
      author: Prisma.$UserPayload<ExtArgs>
      adminProdi: Prisma.$UserPayload<ExtArgs> | null
      adminUniversitas: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string
      description: string
      image: string | null
      category: $Enums.ProgramType
      AlumniProgramStatus: $Enums.AlumniProgramStatus
      rejectionReason: string | null
      authorId: string
      adminProdiId: string | null
      adminUniversitasId: string | null
      createdAt: Date
      updatedAt: Date
      isActive: boolean
    }, ExtArgs["result"]["alumniProgram"]>
    composites: {}
  }

  type AlumniProgramGetPayload<S extends boolean | null | undefined | AlumniProgramDefaultArgs> = $Result.GetResult<Prisma.$AlumniProgramPayload, S>

  type AlumniProgramCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AlumniProgramFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AlumniProgramCountAggregateInputType | true
    }

  export interface AlumniProgramDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AlumniProgram'], meta: { name: 'AlumniProgram' } }
    /**
     * Find zero or one AlumniProgram that matches the filter.
     * @param {AlumniProgramFindUniqueArgs} args - Arguments to find a AlumniProgram
     * @example
     * // Get one AlumniProgram
     * const alumniProgram = await prisma.alumniProgram.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AlumniProgramFindUniqueArgs>(args: SelectSubset<T, AlumniProgramFindUniqueArgs<ExtArgs>>): Prisma__AlumniProgramClient<$Result.GetResult<Prisma.$AlumniProgramPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one AlumniProgram that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AlumniProgramFindUniqueOrThrowArgs} args - Arguments to find a AlumniProgram
     * @example
     * // Get one AlumniProgram
     * const alumniProgram = await prisma.alumniProgram.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AlumniProgramFindUniqueOrThrowArgs>(args: SelectSubset<T, AlumniProgramFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AlumniProgramClient<$Result.GetResult<Prisma.$AlumniProgramPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first AlumniProgram that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlumniProgramFindFirstArgs} args - Arguments to find a AlumniProgram
     * @example
     * // Get one AlumniProgram
     * const alumniProgram = await prisma.alumniProgram.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AlumniProgramFindFirstArgs>(args?: SelectSubset<T, AlumniProgramFindFirstArgs<ExtArgs>>): Prisma__AlumniProgramClient<$Result.GetResult<Prisma.$AlumniProgramPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first AlumniProgram that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlumniProgramFindFirstOrThrowArgs} args - Arguments to find a AlumniProgram
     * @example
     * // Get one AlumniProgram
     * const alumniProgram = await prisma.alumniProgram.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AlumniProgramFindFirstOrThrowArgs>(args?: SelectSubset<T, AlumniProgramFindFirstOrThrowArgs<ExtArgs>>): Prisma__AlumniProgramClient<$Result.GetResult<Prisma.$AlumniProgramPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more AlumniPrograms that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlumniProgramFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AlumniPrograms
     * const alumniPrograms = await prisma.alumniProgram.findMany()
     * 
     * // Get first 10 AlumniPrograms
     * const alumniPrograms = await prisma.alumniProgram.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const alumniProgramWithIdOnly = await prisma.alumniProgram.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AlumniProgramFindManyArgs>(args?: SelectSubset<T, AlumniProgramFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlumniProgramPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a AlumniProgram.
     * @param {AlumniProgramCreateArgs} args - Arguments to create a AlumniProgram.
     * @example
     * // Create one AlumniProgram
     * const AlumniProgram = await prisma.alumniProgram.create({
     *   data: {
     *     // ... data to create a AlumniProgram
     *   }
     * })
     * 
     */
    create<T extends AlumniProgramCreateArgs>(args: SelectSubset<T, AlumniProgramCreateArgs<ExtArgs>>): Prisma__AlumniProgramClient<$Result.GetResult<Prisma.$AlumniProgramPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many AlumniPrograms.
     * @param {AlumniProgramCreateManyArgs} args - Arguments to create many AlumniPrograms.
     * @example
     * // Create many AlumniPrograms
     * const alumniProgram = await prisma.alumniProgram.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AlumniProgramCreateManyArgs>(args?: SelectSubset<T, AlumniProgramCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a AlumniProgram.
     * @param {AlumniProgramDeleteArgs} args - Arguments to delete one AlumniProgram.
     * @example
     * // Delete one AlumniProgram
     * const AlumniProgram = await prisma.alumniProgram.delete({
     *   where: {
     *     // ... filter to delete one AlumniProgram
     *   }
     * })
     * 
     */
    delete<T extends AlumniProgramDeleteArgs>(args: SelectSubset<T, AlumniProgramDeleteArgs<ExtArgs>>): Prisma__AlumniProgramClient<$Result.GetResult<Prisma.$AlumniProgramPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one AlumniProgram.
     * @param {AlumniProgramUpdateArgs} args - Arguments to update one AlumniProgram.
     * @example
     * // Update one AlumniProgram
     * const alumniProgram = await prisma.alumniProgram.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AlumniProgramUpdateArgs>(args: SelectSubset<T, AlumniProgramUpdateArgs<ExtArgs>>): Prisma__AlumniProgramClient<$Result.GetResult<Prisma.$AlumniProgramPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more AlumniPrograms.
     * @param {AlumniProgramDeleteManyArgs} args - Arguments to filter AlumniPrograms to delete.
     * @example
     * // Delete a few AlumniPrograms
     * const { count } = await prisma.alumniProgram.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AlumniProgramDeleteManyArgs>(args?: SelectSubset<T, AlumniProgramDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AlumniPrograms.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlumniProgramUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AlumniPrograms
     * const alumniProgram = await prisma.alumniProgram.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AlumniProgramUpdateManyArgs>(args: SelectSubset<T, AlumniProgramUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AlumniProgram.
     * @param {AlumniProgramUpsertArgs} args - Arguments to update or create a AlumniProgram.
     * @example
     * // Update or create a AlumniProgram
     * const alumniProgram = await prisma.alumniProgram.upsert({
     *   create: {
     *     // ... data to create a AlumniProgram
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AlumniProgram we want to update
     *   }
     * })
     */
    upsert<T extends AlumniProgramUpsertArgs>(args: SelectSubset<T, AlumniProgramUpsertArgs<ExtArgs>>): Prisma__AlumniProgramClient<$Result.GetResult<Prisma.$AlumniProgramPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of AlumniPrograms.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlumniProgramCountArgs} args - Arguments to filter AlumniPrograms to count.
     * @example
     * // Count the number of AlumniPrograms
     * const count = await prisma.alumniProgram.count({
     *   where: {
     *     // ... the filter for the AlumniPrograms we want to count
     *   }
     * })
    **/
    count<T extends AlumniProgramCountArgs>(
      args?: Subset<T, AlumniProgramCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AlumniProgramCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AlumniProgram.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlumniProgramAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AlumniProgramAggregateArgs>(args: Subset<T, AlumniProgramAggregateArgs>): Prisma.PrismaPromise<GetAlumniProgramAggregateType<T>>

    /**
     * Group by AlumniProgram.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlumniProgramGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AlumniProgramGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AlumniProgramGroupByArgs['orderBy'] }
        : { orderBy?: AlumniProgramGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AlumniProgramGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAlumniProgramGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AlumniProgram model
   */
  readonly fields: AlumniProgramFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AlumniProgram.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AlumniProgramClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    author<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    adminProdi<T extends AlumniProgram$adminProdiArgs<ExtArgs> = {}>(args?: Subset<T, AlumniProgram$adminProdiArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    adminUniversitas<T extends AlumniProgram$adminUniversitasArgs<ExtArgs> = {}>(args?: Subset<T, AlumniProgram$adminUniversitasArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AlumniProgram model
   */ 
  interface AlumniProgramFieldRefs {
    readonly id: FieldRef<"AlumniProgram", 'String'>
    readonly title: FieldRef<"AlumniProgram", 'String'>
    readonly description: FieldRef<"AlumniProgram", 'String'>
    readonly image: FieldRef<"AlumniProgram", 'String'>
    readonly category: FieldRef<"AlumniProgram", 'ProgramType'>
    readonly AlumniProgramStatus: FieldRef<"AlumniProgram", 'AlumniProgramStatus'>
    readonly rejectionReason: FieldRef<"AlumniProgram", 'String'>
    readonly authorId: FieldRef<"AlumniProgram", 'String'>
    readonly adminProdiId: FieldRef<"AlumniProgram", 'String'>
    readonly adminUniversitasId: FieldRef<"AlumniProgram", 'String'>
    readonly createdAt: FieldRef<"AlumniProgram", 'DateTime'>
    readonly updatedAt: FieldRef<"AlumniProgram", 'DateTime'>
    readonly isActive: FieldRef<"AlumniProgram", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * AlumniProgram findUnique
   */
  export type AlumniProgramFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlumniProgram
     */
    select?: AlumniProgramSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlumniProgramInclude<ExtArgs> | null
    /**
     * Filter, which AlumniProgram to fetch.
     */
    where: AlumniProgramWhereUniqueInput
  }

  /**
   * AlumniProgram findUniqueOrThrow
   */
  export type AlumniProgramFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlumniProgram
     */
    select?: AlumniProgramSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlumniProgramInclude<ExtArgs> | null
    /**
     * Filter, which AlumniProgram to fetch.
     */
    where: AlumniProgramWhereUniqueInput
  }

  /**
   * AlumniProgram findFirst
   */
  export type AlumniProgramFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlumniProgram
     */
    select?: AlumniProgramSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlumniProgramInclude<ExtArgs> | null
    /**
     * Filter, which AlumniProgram to fetch.
     */
    where?: AlumniProgramWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AlumniPrograms to fetch.
     */
    orderBy?: AlumniProgramOrderByWithRelationInput | AlumniProgramOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AlumniPrograms.
     */
    cursor?: AlumniProgramWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AlumniPrograms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AlumniPrograms.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AlumniPrograms.
     */
    distinct?: AlumniProgramScalarFieldEnum | AlumniProgramScalarFieldEnum[]
  }

  /**
   * AlumniProgram findFirstOrThrow
   */
  export type AlumniProgramFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlumniProgram
     */
    select?: AlumniProgramSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlumniProgramInclude<ExtArgs> | null
    /**
     * Filter, which AlumniProgram to fetch.
     */
    where?: AlumniProgramWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AlumniPrograms to fetch.
     */
    orderBy?: AlumniProgramOrderByWithRelationInput | AlumniProgramOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AlumniPrograms.
     */
    cursor?: AlumniProgramWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AlumniPrograms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AlumniPrograms.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AlumniPrograms.
     */
    distinct?: AlumniProgramScalarFieldEnum | AlumniProgramScalarFieldEnum[]
  }

  /**
   * AlumniProgram findMany
   */
  export type AlumniProgramFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlumniProgram
     */
    select?: AlumniProgramSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlumniProgramInclude<ExtArgs> | null
    /**
     * Filter, which AlumniPrograms to fetch.
     */
    where?: AlumniProgramWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AlumniPrograms to fetch.
     */
    orderBy?: AlumniProgramOrderByWithRelationInput | AlumniProgramOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AlumniPrograms.
     */
    cursor?: AlumniProgramWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AlumniPrograms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AlumniPrograms.
     */
    skip?: number
    distinct?: AlumniProgramScalarFieldEnum | AlumniProgramScalarFieldEnum[]
  }

  /**
   * AlumniProgram create
   */
  export type AlumniProgramCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlumniProgram
     */
    select?: AlumniProgramSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlumniProgramInclude<ExtArgs> | null
    /**
     * The data needed to create a AlumniProgram.
     */
    data: XOR<AlumniProgramCreateInput, AlumniProgramUncheckedCreateInput>
  }

  /**
   * AlumniProgram createMany
   */
  export type AlumniProgramCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AlumniPrograms.
     */
    data: AlumniProgramCreateManyInput | AlumniProgramCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AlumniProgram update
   */
  export type AlumniProgramUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlumniProgram
     */
    select?: AlumniProgramSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlumniProgramInclude<ExtArgs> | null
    /**
     * The data needed to update a AlumniProgram.
     */
    data: XOR<AlumniProgramUpdateInput, AlumniProgramUncheckedUpdateInput>
    /**
     * Choose, which AlumniProgram to update.
     */
    where: AlumniProgramWhereUniqueInput
  }

  /**
   * AlumniProgram updateMany
   */
  export type AlumniProgramUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AlumniPrograms.
     */
    data: XOR<AlumniProgramUpdateManyMutationInput, AlumniProgramUncheckedUpdateManyInput>
    /**
     * Filter which AlumniPrograms to update
     */
    where?: AlumniProgramWhereInput
  }

  /**
   * AlumniProgram upsert
   */
  export type AlumniProgramUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlumniProgram
     */
    select?: AlumniProgramSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlumniProgramInclude<ExtArgs> | null
    /**
     * The filter to search for the AlumniProgram to update in case it exists.
     */
    where: AlumniProgramWhereUniqueInput
    /**
     * In case the AlumniProgram found by the `where` argument doesn't exist, create a new AlumniProgram with this data.
     */
    create: XOR<AlumniProgramCreateInput, AlumniProgramUncheckedCreateInput>
    /**
     * In case the AlumniProgram was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AlumniProgramUpdateInput, AlumniProgramUncheckedUpdateInput>
  }

  /**
   * AlumniProgram delete
   */
  export type AlumniProgramDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlumniProgram
     */
    select?: AlumniProgramSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlumniProgramInclude<ExtArgs> | null
    /**
     * Filter which AlumniProgram to delete.
     */
    where: AlumniProgramWhereUniqueInput
  }

  /**
   * AlumniProgram deleteMany
   */
  export type AlumniProgramDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AlumniPrograms to delete
     */
    where?: AlumniProgramWhereInput
  }

  /**
   * AlumniProgram.adminProdi
   */
  export type AlumniProgram$adminProdiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * AlumniProgram.adminUniversitas
   */
  export type AlumniProgram$adminUniversitasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * AlumniProgram without action
   */
  export type AlumniProgramDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlumniProgram
     */
    select?: AlumniProgramSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlumniProgramInclude<ExtArgs> | null
  }


  /**
   * Model TracerStudy
   */

  export type AggregateTracerStudy = {
    _count: TracerStudyCountAggregateOutputType | null
    _avg: TracerStudyAvgAggregateOutputType | null
    _sum: TracerStudySumAggregateOutputType | null
    _min: TracerStudyMinAggregateOutputType | null
    _max: TracerStudyMaxAggregateOutputType | null
  }

  export type TracerStudyAvgAggregateOutputType = {
    f8: number | null
    f502: number | null
    f505: number | null
    f1101: number | null
    f5d: number | null
    f1201: number | null
    f14: number | null
    f15: number | null
    f1761: number | null
    f1762: number | null
    f1763: number | null
    f1764: number | null
    f1765: number | null
    f1766: number | null
    f1767: number | null
    f1768: number | null
    f1769: number | null
    f1770: number | null
    f1771: number | null
    f1772: number | null
    f1773: number | null
    f1774: number | null
    f21: number | null
    f22: number | null
    f23: number | null
    f24: number | null
    f25: number | null
    f26: number | null
    f27: number | null
    f301: number | null
    f302: number | null
    f303: number | null
    f401: number | null
    f402: number | null
    f403: number | null
    f404: number | null
    f405: number | null
    f406: number | null
    f407: number | null
    f408: number | null
    f409: number | null
    f410: number | null
    f411: number | null
    f412: number | null
    f413: number | null
    f414: number | null
    f415: number | null
    f6: number | null
    f7: number | null
    f7a: number | null
    f1001: number | null
    f1601: number | null
    f1602: number | null
    f1603: number | null
    f1604: number | null
    f1605: number | null
    f1606: number | null
    f1607: number | null
    f1608: number | null
    f1609: number | null
    f1610: number | null
    f1611: number | null
    f1612: number | null
    f1613: number | null
  }

  export type TracerStudySumAggregateOutputType = {
    f8: number | null
    f502: number | null
    f505: number | null
    f1101: number | null
    f5d: number | null
    f1201: number | null
    f14: number | null
    f15: number | null
    f1761: number | null
    f1762: number | null
    f1763: number | null
    f1764: number | null
    f1765: number | null
    f1766: number | null
    f1767: number | null
    f1768: number | null
    f1769: number | null
    f1770: number | null
    f1771: number | null
    f1772: number | null
    f1773: number | null
    f1774: number | null
    f21: number | null
    f22: number | null
    f23: number | null
    f24: number | null
    f25: number | null
    f26: number | null
    f27: number | null
    f301: number | null
    f302: number | null
    f303: number | null
    f401: number | null
    f402: number | null
    f403: number | null
    f404: number | null
    f405: number | null
    f406: number | null
    f407: number | null
    f408: number | null
    f409: number | null
    f410: number | null
    f411: number | null
    f412: number | null
    f413: number | null
    f414: number | null
    f415: number | null
    f6: number | null
    f7: number | null
    f7a: number | null
    f1001: number | null
    f1601: number | null
    f1602: number | null
    f1603: number | null
    f1604: number | null
    f1605: number | null
    f1606: number | null
    f1607: number | null
    f1608: number | null
    f1609: number | null
    f1610: number | null
    f1611: number | null
    f1612: number | null
    f1613: number | null
  }

  export type TracerStudyMinAggregateOutputType = {
    id: string | null
    profile_id: string | null
    nimhsmsmh: string | null
    tahun_lulus: string | null
    nmmhsmsmh: string | null
    emailmsmh: string | null
    kdptimsmh: string | null
    kdpstmsmh: string | null
    telpomsmh: string | null
    nik: string | null
    npwp: string | null
    f8: number | null
    f502: number | null
    f505: number | null
    f5a1: string | null
    f5a2: string | null
    f1101: number | null
    f1102: string | null
    f5b: string | null
    f5c: string | null
    f5d: number | null
    f18a: string | null
    f18b: string | null
    f18c: string | null
    f18d: Date | null
    f1201: number | null
    f1202: string | null
    f14: number | null
    f15: number | null
    f1761: number | null
    f1762: number | null
    f1763: number | null
    f1764: number | null
    f1765: number | null
    f1766: number | null
    f1767: number | null
    f1768: number | null
    f1769: number | null
    f1770: number | null
    f1771: number | null
    f1772: number | null
    f1773: number | null
    f1774: number | null
    f21: number | null
    f22: number | null
    f23: number | null
    f24: number | null
    f25: number | null
    f26: number | null
    f27: number | null
    f301: number | null
    f302: number | null
    f303: number | null
    f401: number | null
    f402: number | null
    f403: number | null
    f404: number | null
    f405: number | null
    f406: number | null
    f407: number | null
    f408: number | null
    f409: number | null
    f410: number | null
    f411: number | null
    f412: number | null
    f413: number | null
    f414: number | null
    f415: number | null
    f416: string | null
    f6: number | null
    f7: number | null
    f7a: number | null
    f1001: number | null
    f1002: string | null
    f1601: number | null
    f1602: number | null
    f1603: number | null
    f1604: number | null
    f1605: number | null
    f1606: number | null
    f1607: number | null
    f1608: number | null
    f1609: number | null
    f1610: number | null
    f1611: number | null
    f1612: number | null
    f1613: number | null
    f1614: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type TracerStudyMaxAggregateOutputType = {
    id: string | null
    profile_id: string | null
    nimhsmsmh: string | null
    tahun_lulus: string | null
    nmmhsmsmh: string | null
    emailmsmh: string | null
    kdptimsmh: string | null
    kdpstmsmh: string | null
    telpomsmh: string | null
    nik: string | null
    npwp: string | null
    f8: number | null
    f502: number | null
    f505: number | null
    f5a1: string | null
    f5a2: string | null
    f1101: number | null
    f1102: string | null
    f5b: string | null
    f5c: string | null
    f5d: number | null
    f18a: string | null
    f18b: string | null
    f18c: string | null
    f18d: Date | null
    f1201: number | null
    f1202: string | null
    f14: number | null
    f15: number | null
    f1761: number | null
    f1762: number | null
    f1763: number | null
    f1764: number | null
    f1765: number | null
    f1766: number | null
    f1767: number | null
    f1768: number | null
    f1769: number | null
    f1770: number | null
    f1771: number | null
    f1772: number | null
    f1773: number | null
    f1774: number | null
    f21: number | null
    f22: number | null
    f23: number | null
    f24: number | null
    f25: number | null
    f26: number | null
    f27: number | null
    f301: number | null
    f302: number | null
    f303: number | null
    f401: number | null
    f402: number | null
    f403: number | null
    f404: number | null
    f405: number | null
    f406: number | null
    f407: number | null
    f408: number | null
    f409: number | null
    f410: number | null
    f411: number | null
    f412: number | null
    f413: number | null
    f414: number | null
    f415: number | null
    f416: string | null
    f6: number | null
    f7: number | null
    f7a: number | null
    f1001: number | null
    f1002: string | null
    f1601: number | null
    f1602: number | null
    f1603: number | null
    f1604: number | null
    f1605: number | null
    f1606: number | null
    f1607: number | null
    f1608: number | null
    f1609: number | null
    f1610: number | null
    f1611: number | null
    f1612: number | null
    f1613: number | null
    f1614: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type TracerStudyCountAggregateOutputType = {
    id: number
    profile_id: number
    nimhsmsmh: number
    tahun_lulus: number
    nmmhsmsmh: number
    emailmsmh: number
    kdptimsmh: number
    kdpstmsmh: number
    telpomsmh: number
    nik: number
    npwp: number
    f8: number
    f502: number
    f505: number
    f5a1: number
    f5a2: number
    f1101: number
    f1102: number
    f5b: number
    f5c: number
    f5d: number
    f18a: number
    f18b: number
    f18c: number
    f18d: number
    f1201: number
    f1202: number
    f14: number
    f15: number
    f1761: number
    f1762: number
    f1763: number
    f1764: number
    f1765: number
    f1766: number
    f1767: number
    f1768: number
    f1769: number
    f1770: number
    f1771: number
    f1772: number
    f1773: number
    f1774: number
    f21: number
    f22: number
    f23: number
    f24: number
    f25: number
    f26: number
    f27: number
    f301: number
    f302: number
    f303: number
    f401: number
    f402: number
    f403: number
    f404: number
    f405: number
    f406: number
    f407: number
    f408: number
    f409: number
    f410: number
    f411: number
    f412: number
    f413: number
    f414: number
    f415: number
    f416: number
    f6: number
    f7: number
    f7a: number
    f1001: number
    f1002: number
    f1601: number
    f1602: number
    f1603: number
    f1604: number
    f1605: number
    f1606: number
    f1607: number
    f1608: number
    f1609: number
    f1610: number
    f1611: number
    f1612: number
    f1613: number
    f1614: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type TracerStudyAvgAggregateInputType = {
    f8?: true
    f502?: true
    f505?: true
    f1101?: true
    f5d?: true
    f1201?: true
    f14?: true
    f15?: true
    f1761?: true
    f1762?: true
    f1763?: true
    f1764?: true
    f1765?: true
    f1766?: true
    f1767?: true
    f1768?: true
    f1769?: true
    f1770?: true
    f1771?: true
    f1772?: true
    f1773?: true
    f1774?: true
    f21?: true
    f22?: true
    f23?: true
    f24?: true
    f25?: true
    f26?: true
    f27?: true
    f301?: true
    f302?: true
    f303?: true
    f401?: true
    f402?: true
    f403?: true
    f404?: true
    f405?: true
    f406?: true
    f407?: true
    f408?: true
    f409?: true
    f410?: true
    f411?: true
    f412?: true
    f413?: true
    f414?: true
    f415?: true
    f6?: true
    f7?: true
    f7a?: true
    f1001?: true
    f1601?: true
    f1602?: true
    f1603?: true
    f1604?: true
    f1605?: true
    f1606?: true
    f1607?: true
    f1608?: true
    f1609?: true
    f1610?: true
    f1611?: true
    f1612?: true
    f1613?: true
  }

  export type TracerStudySumAggregateInputType = {
    f8?: true
    f502?: true
    f505?: true
    f1101?: true
    f5d?: true
    f1201?: true
    f14?: true
    f15?: true
    f1761?: true
    f1762?: true
    f1763?: true
    f1764?: true
    f1765?: true
    f1766?: true
    f1767?: true
    f1768?: true
    f1769?: true
    f1770?: true
    f1771?: true
    f1772?: true
    f1773?: true
    f1774?: true
    f21?: true
    f22?: true
    f23?: true
    f24?: true
    f25?: true
    f26?: true
    f27?: true
    f301?: true
    f302?: true
    f303?: true
    f401?: true
    f402?: true
    f403?: true
    f404?: true
    f405?: true
    f406?: true
    f407?: true
    f408?: true
    f409?: true
    f410?: true
    f411?: true
    f412?: true
    f413?: true
    f414?: true
    f415?: true
    f6?: true
    f7?: true
    f7a?: true
    f1001?: true
    f1601?: true
    f1602?: true
    f1603?: true
    f1604?: true
    f1605?: true
    f1606?: true
    f1607?: true
    f1608?: true
    f1609?: true
    f1610?: true
    f1611?: true
    f1612?: true
    f1613?: true
  }

  export type TracerStudyMinAggregateInputType = {
    id?: true
    profile_id?: true
    nimhsmsmh?: true
    tahun_lulus?: true
    nmmhsmsmh?: true
    emailmsmh?: true
    kdptimsmh?: true
    kdpstmsmh?: true
    telpomsmh?: true
    nik?: true
    npwp?: true
    f8?: true
    f502?: true
    f505?: true
    f5a1?: true
    f5a2?: true
    f1101?: true
    f1102?: true
    f5b?: true
    f5c?: true
    f5d?: true
    f18a?: true
    f18b?: true
    f18c?: true
    f18d?: true
    f1201?: true
    f1202?: true
    f14?: true
    f15?: true
    f1761?: true
    f1762?: true
    f1763?: true
    f1764?: true
    f1765?: true
    f1766?: true
    f1767?: true
    f1768?: true
    f1769?: true
    f1770?: true
    f1771?: true
    f1772?: true
    f1773?: true
    f1774?: true
    f21?: true
    f22?: true
    f23?: true
    f24?: true
    f25?: true
    f26?: true
    f27?: true
    f301?: true
    f302?: true
    f303?: true
    f401?: true
    f402?: true
    f403?: true
    f404?: true
    f405?: true
    f406?: true
    f407?: true
    f408?: true
    f409?: true
    f410?: true
    f411?: true
    f412?: true
    f413?: true
    f414?: true
    f415?: true
    f416?: true
    f6?: true
    f7?: true
    f7a?: true
    f1001?: true
    f1002?: true
    f1601?: true
    f1602?: true
    f1603?: true
    f1604?: true
    f1605?: true
    f1606?: true
    f1607?: true
    f1608?: true
    f1609?: true
    f1610?: true
    f1611?: true
    f1612?: true
    f1613?: true
    f1614?: true
    createdAt?: true
    updatedAt?: true
  }

  export type TracerStudyMaxAggregateInputType = {
    id?: true
    profile_id?: true
    nimhsmsmh?: true
    tahun_lulus?: true
    nmmhsmsmh?: true
    emailmsmh?: true
    kdptimsmh?: true
    kdpstmsmh?: true
    telpomsmh?: true
    nik?: true
    npwp?: true
    f8?: true
    f502?: true
    f505?: true
    f5a1?: true
    f5a2?: true
    f1101?: true
    f1102?: true
    f5b?: true
    f5c?: true
    f5d?: true
    f18a?: true
    f18b?: true
    f18c?: true
    f18d?: true
    f1201?: true
    f1202?: true
    f14?: true
    f15?: true
    f1761?: true
    f1762?: true
    f1763?: true
    f1764?: true
    f1765?: true
    f1766?: true
    f1767?: true
    f1768?: true
    f1769?: true
    f1770?: true
    f1771?: true
    f1772?: true
    f1773?: true
    f1774?: true
    f21?: true
    f22?: true
    f23?: true
    f24?: true
    f25?: true
    f26?: true
    f27?: true
    f301?: true
    f302?: true
    f303?: true
    f401?: true
    f402?: true
    f403?: true
    f404?: true
    f405?: true
    f406?: true
    f407?: true
    f408?: true
    f409?: true
    f410?: true
    f411?: true
    f412?: true
    f413?: true
    f414?: true
    f415?: true
    f416?: true
    f6?: true
    f7?: true
    f7a?: true
    f1001?: true
    f1002?: true
    f1601?: true
    f1602?: true
    f1603?: true
    f1604?: true
    f1605?: true
    f1606?: true
    f1607?: true
    f1608?: true
    f1609?: true
    f1610?: true
    f1611?: true
    f1612?: true
    f1613?: true
    f1614?: true
    createdAt?: true
    updatedAt?: true
  }

  export type TracerStudyCountAggregateInputType = {
    id?: true
    profile_id?: true
    nimhsmsmh?: true
    tahun_lulus?: true
    nmmhsmsmh?: true
    emailmsmh?: true
    kdptimsmh?: true
    kdpstmsmh?: true
    telpomsmh?: true
    nik?: true
    npwp?: true
    f8?: true
    f502?: true
    f505?: true
    f5a1?: true
    f5a2?: true
    f1101?: true
    f1102?: true
    f5b?: true
    f5c?: true
    f5d?: true
    f18a?: true
    f18b?: true
    f18c?: true
    f18d?: true
    f1201?: true
    f1202?: true
    f14?: true
    f15?: true
    f1761?: true
    f1762?: true
    f1763?: true
    f1764?: true
    f1765?: true
    f1766?: true
    f1767?: true
    f1768?: true
    f1769?: true
    f1770?: true
    f1771?: true
    f1772?: true
    f1773?: true
    f1774?: true
    f21?: true
    f22?: true
    f23?: true
    f24?: true
    f25?: true
    f26?: true
    f27?: true
    f301?: true
    f302?: true
    f303?: true
    f401?: true
    f402?: true
    f403?: true
    f404?: true
    f405?: true
    f406?: true
    f407?: true
    f408?: true
    f409?: true
    f410?: true
    f411?: true
    f412?: true
    f413?: true
    f414?: true
    f415?: true
    f416?: true
    f6?: true
    f7?: true
    f7a?: true
    f1001?: true
    f1002?: true
    f1601?: true
    f1602?: true
    f1603?: true
    f1604?: true
    f1605?: true
    f1606?: true
    f1607?: true
    f1608?: true
    f1609?: true
    f1610?: true
    f1611?: true
    f1612?: true
    f1613?: true
    f1614?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type TracerStudyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TracerStudy to aggregate.
     */
    where?: TracerStudyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TracerStudies to fetch.
     */
    orderBy?: TracerStudyOrderByWithRelationInput | TracerStudyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TracerStudyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TracerStudies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TracerStudies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TracerStudies
    **/
    _count?: true | TracerStudyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TracerStudyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TracerStudySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TracerStudyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TracerStudyMaxAggregateInputType
  }

  export type GetTracerStudyAggregateType<T extends TracerStudyAggregateArgs> = {
        [P in keyof T & keyof AggregateTracerStudy]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTracerStudy[P]>
      : GetScalarType<T[P], AggregateTracerStudy[P]>
  }




  export type TracerStudyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TracerStudyWhereInput
    orderBy?: TracerStudyOrderByWithAggregationInput | TracerStudyOrderByWithAggregationInput[]
    by: TracerStudyScalarFieldEnum[] | TracerStudyScalarFieldEnum
    having?: TracerStudyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TracerStudyCountAggregateInputType | true
    _avg?: TracerStudyAvgAggregateInputType
    _sum?: TracerStudySumAggregateInputType
    _min?: TracerStudyMinAggregateInputType
    _max?: TracerStudyMaxAggregateInputType
  }

  export type TracerStudyGroupByOutputType = {
    id: string
    profile_id: string
    nimhsmsmh: string | null
    tahun_lulus: string | null
    nmmhsmsmh: string | null
    emailmsmh: string | null
    kdptimsmh: string | null
    kdpstmsmh: string | null
    telpomsmh: string | null
    nik: string | null
    npwp: string | null
    f8: number
    f502: number | null
    f505: number | null
    f5a1: string | null
    f5a2: string | null
    f1101: number | null
    f1102: string | null
    f5b: string | null
    f5c: string | null
    f5d: number | null
    f18a: string | null
    f18b: string | null
    f18c: string | null
    f18d: Date | null
    f1201: number
    f1202: string | null
    f14: number | null
    f15: number | null
    f1761: number
    f1762: number
    f1763: number
    f1764: number
    f1765: number
    f1766: number
    f1767: number
    f1768: number
    f1769: number
    f1770: number
    f1771: number
    f1772: number
    f1773: number
    f1774: number
    f21: number | null
    f22: number | null
    f23: number | null
    f24: number | null
    f25: number | null
    f26: number | null
    f27: number | null
    f301: number | null
    f302: number | null
    f303: number | null
    f401: number | null
    f402: number | null
    f403: number | null
    f404: number | null
    f405: number | null
    f406: number | null
    f407: number | null
    f408: number | null
    f409: number | null
    f410: number | null
    f411: number | null
    f412: number | null
    f413: number | null
    f414: number | null
    f415: number | null
    f416: string | null
    f6: number | null
    f7: number | null
    f7a: number | null
    f1001: number | null
    f1002: string | null
    f1601: number | null
    f1602: number | null
    f1603: number | null
    f1604: number | null
    f1605: number | null
    f1606: number | null
    f1607: number | null
    f1608: number | null
    f1609: number | null
    f1610: number | null
    f1611: number | null
    f1612: number | null
    f1613: number | null
    f1614: string | null
    createdAt: Date
    updatedAt: Date
    _count: TracerStudyCountAggregateOutputType | null
    _avg: TracerStudyAvgAggregateOutputType | null
    _sum: TracerStudySumAggregateOutputType | null
    _min: TracerStudyMinAggregateOutputType | null
    _max: TracerStudyMaxAggregateOutputType | null
  }

  type GetTracerStudyGroupByPayload<T extends TracerStudyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TracerStudyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TracerStudyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TracerStudyGroupByOutputType[P]>
            : GetScalarType<T[P], TracerStudyGroupByOutputType[P]>
        }
      >
    >


  export type TracerStudySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    profile_id?: boolean
    nimhsmsmh?: boolean
    tahun_lulus?: boolean
    nmmhsmsmh?: boolean
    emailmsmh?: boolean
    kdptimsmh?: boolean
    kdpstmsmh?: boolean
    telpomsmh?: boolean
    nik?: boolean
    npwp?: boolean
    f8?: boolean
    f502?: boolean
    f505?: boolean
    f5a1?: boolean
    f5a2?: boolean
    f1101?: boolean
    f1102?: boolean
    f5b?: boolean
    f5c?: boolean
    f5d?: boolean
    f18a?: boolean
    f18b?: boolean
    f18c?: boolean
    f18d?: boolean
    f1201?: boolean
    f1202?: boolean
    f14?: boolean
    f15?: boolean
    f1761?: boolean
    f1762?: boolean
    f1763?: boolean
    f1764?: boolean
    f1765?: boolean
    f1766?: boolean
    f1767?: boolean
    f1768?: boolean
    f1769?: boolean
    f1770?: boolean
    f1771?: boolean
    f1772?: boolean
    f1773?: boolean
    f1774?: boolean
    f21?: boolean
    f22?: boolean
    f23?: boolean
    f24?: boolean
    f25?: boolean
    f26?: boolean
    f27?: boolean
    f301?: boolean
    f302?: boolean
    f303?: boolean
    f401?: boolean
    f402?: boolean
    f403?: boolean
    f404?: boolean
    f405?: boolean
    f406?: boolean
    f407?: boolean
    f408?: boolean
    f409?: boolean
    f410?: boolean
    f411?: boolean
    f412?: boolean
    f413?: boolean
    f414?: boolean
    f415?: boolean
    f416?: boolean
    f6?: boolean
    f7?: boolean
    f7a?: boolean
    f1001?: boolean
    f1002?: boolean
    f1601?: boolean
    f1602?: boolean
    f1603?: boolean
    f1604?: boolean
    f1605?: boolean
    f1606?: boolean
    f1607?: boolean
    f1608?: boolean
    f1609?: boolean
    f1610?: boolean
    f1611?: boolean
    f1612?: boolean
    f1613?: boolean
    f1614?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    profile?: boolean | ProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tracerStudy"]>


  export type TracerStudySelectScalar = {
    id?: boolean
    profile_id?: boolean
    nimhsmsmh?: boolean
    tahun_lulus?: boolean
    nmmhsmsmh?: boolean
    emailmsmh?: boolean
    kdptimsmh?: boolean
    kdpstmsmh?: boolean
    telpomsmh?: boolean
    nik?: boolean
    npwp?: boolean
    f8?: boolean
    f502?: boolean
    f505?: boolean
    f5a1?: boolean
    f5a2?: boolean
    f1101?: boolean
    f1102?: boolean
    f5b?: boolean
    f5c?: boolean
    f5d?: boolean
    f18a?: boolean
    f18b?: boolean
    f18c?: boolean
    f18d?: boolean
    f1201?: boolean
    f1202?: boolean
    f14?: boolean
    f15?: boolean
    f1761?: boolean
    f1762?: boolean
    f1763?: boolean
    f1764?: boolean
    f1765?: boolean
    f1766?: boolean
    f1767?: boolean
    f1768?: boolean
    f1769?: boolean
    f1770?: boolean
    f1771?: boolean
    f1772?: boolean
    f1773?: boolean
    f1774?: boolean
    f21?: boolean
    f22?: boolean
    f23?: boolean
    f24?: boolean
    f25?: boolean
    f26?: boolean
    f27?: boolean
    f301?: boolean
    f302?: boolean
    f303?: boolean
    f401?: boolean
    f402?: boolean
    f403?: boolean
    f404?: boolean
    f405?: boolean
    f406?: boolean
    f407?: boolean
    f408?: boolean
    f409?: boolean
    f410?: boolean
    f411?: boolean
    f412?: boolean
    f413?: boolean
    f414?: boolean
    f415?: boolean
    f416?: boolean
    f6?: boolean
    f7?: boolean
    f7a?: boolean
    f1001?: boolean
    f1002?: boolean
    f1601?: boolean
    f1602?: boolean
    f1603?: boolean
    f1604?: boolean
    f1605?: boolean
    f1606?: boolean
    f1607?: boolean
    f1608?: boolean
    f1609?: boolean
    f1610?: boolean
    f1611?: boolean
    f1612?: boolean
    f1613?: boolean
    f1614?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type TracerStudyInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    profile?: boolean | ProfileDefaultArgs<ExtArgs>
  }

  export type $TracerStudyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TracerStudy"
    objects: {
      profile: Prisma.$ProfilePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      profile_id: string
      nimhsmsmh: string | null
      tahun_lulus: string | null
      nmmhsmsmh: string | null
      emailmsmh: string | null
      kdptimsmh: string | null
      kdpstmsmh: string | null
      telpomsmh: string | null
      nik: string | null
      npwp: string | null
      f8: number
      f502: number | null
      f505: number | null
      f5a1: string | null
      f5a2: string | null
      f1101: number | null
      f1102: string | null
      f5b: string | null
      f5c: string | null
      f5d: number | null
      f18a: string | null
      f18b: string | null
      f18c: string | null
      f18d: Date | null
      f1201: number
      f1202: string | null
      f14: number | null
      f15: number | null
      f1761: number
      f1762: number
      f1763: number
      f1764: number
      f1765: number
      f1766: number
      f1767: number
      f1768: number
      f1769: number
      f1770: number
      f1771: number
      f1772: number
      f1773: number
      f1774: number
      f21: number | null
      f22: number | null
      f23: number | null
      f24: number | null
      f25: number | null
      f26: number | null
      f27: number | null
      f301: number | null
      f302: number | null
      f303: number | null
      f401: number | null
      f402: number | null
      f403: number | null
      f404: number | null
      f405: number | null
      f406: number | null
      f407: number | null
      f408: number | null
      f409: number | null
      f410: number | null
      f411: number | null
      f412: number | null
      f413: number | null
      f414: number | null
      f415: number | null
      f416: string | null
      f6: number | null
      f7: number | null
      f7a: number | null
      f1001: number | null
      f1002: string | null
      f1601: number | null
      f1602: number | null
      f1603: number | null
      f1604: number | null
      f1605: number | null
      f1606: number | null
      f1607: number | null
      f1608: number | null
      f1609: number | null
      f1610: number | null
      f1611: number | null
      f1612: number | null
      f1613: number | null
      f1614: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["tracerStudy"]>
    composites: {}
  }

  type TracerStudyGetPayload<S extends boolean | null | undefined | TracerStudyDefaultArgs> = $Result.GetResult<Prisma.$TracerStudyPayload, S>

  type TracerStudyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TracerStudyFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TracerStudyCountAggregateInputType | true
    }

  export interface TracerStudyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TracerStudy'], meta: { name: 'TracerStudy' } }
    /**
     * Find zero or one TracerStudy that matches the filter.
     * @param {TracerStudyFindUniqueArgs} args - Arguments to find a TracerStudy
     * @example
     * // Get one TracerStudy
     * const tracerStudy = await prisma.tracerStudy.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TracerStudyFindUniqueArgs>(args: SelectSubset<T, TracerStudyFindUniqueArgs<ExtArgs>>): Prisma__TracerStudyClient<$Result.GetResult<Prisma.$TracerStudyPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one TracerStudy that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {TracerStudyFindUniqueOrThrowArgs} args - Arguments to find a TracerStudy
     * @example
     * // Get one TracerStudy
     * const tracerStudy = await prisma.tracerStudy.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TracerStudyFindUniqueOrThrowArgs>(args: SelectSubset<T, TracerStudyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TracerStudyClient<$Result.GetResult<Prisma.$TracerStudyPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first TracerStudy that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TracerStudyFindFirstArgs} args - Arguments to find a TracerStudy
     * @example
     * // Get one TracerStudy
     * const tracerStudy = await prisma.tracerStudy.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TracerStudyFindFirstArgs>(args?: SelectSubset<T, TracerStudyFindFirstArgs<ExtArgs>>): Prisma__TracerStudyClient<$Result.GetResult<Prisma.$TracerStudyPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first TracerStudy that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TracerStudyFindFirstOrThrowArgs} args - Arguments to find a TracerStudy
     * @example
     * // Get one TracerStudy
     * const tracerStudy = await prisma.tracerStudy.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TracerStudyFindFirstOrThrowArgs>(args?: SelectSubset<T, TracerStudyFindFirstOrThrowArgs<ExtArgs>>): Prisma__TracerStudyClient<$Result.GetResult<Prisma.$TracerStudyPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more TracerStudies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TracerStudyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TracerStudies
     * const tracerStudies = await prisma.tracerStudy.findMany()
     * 
     * // Get first 10 TracerStudies
     * const tracerStudies = await prisma.tracerStudy.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tracerStudyWithIdOnly = await prisma.tracerStudy.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TracerStudyFindManyArgs>(args?: SelectSubset<T, TracerStudyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TracerStudyPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a TracerStudy.
     * @param {TracerStudyCreateArgs} args - Arguments to create a TracerStudy.
     * @example
     * // Create one TracerStudy
     * const TracerStudy = await prisma.tracerStudy.create({
     *   data: {
     *     // ... data to create a TracerStudy
     *   }
     * })
     * 
     */
    create<T extends TracerStudyCreateArgs>(args: SelectSubset<T, TracerStudyCreateArgs<ExtArgs>>): Prisma__TracerStudyClient<$Result.GetResult<Prisma.$TracerStudyPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many TracerStudies.
     * @param {TracerStudyCreateManyArgs} args - Arguments to create many TracerStudies.
     * @example
     * // Create many TracerStudies
     * const tracerStudy = await prisma.tracerStudy.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TracerStudyCreateManyArgs>(args?: SelectSubset<T, TracerStudyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TracerStudy.
     * @param {TracerStudyDeleteArgs} args - Arguments to delete one TracerStudy.
     * @example
     * // Delete one TracerStudy
     * const TracerStudy = await prisma.tracerStudy.delete({
     *   where: {
     *     // ... filter to delete one TracerStudy
     *   }
     * })
     * 
     */
    delete<T extends TracerStudyDeleteArgs>(args: SelectSubset<T, TracerStudyDeleteArgs<ExtArgs>>): Prisma__TracerStudyClient<$Result.GetResult<Prisma.$TracerStudyPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one TracerStudy.
     * @param {TracerStudyUpdateArgs} args - Arguments to update one TracerStudy.
     * @example
     * // Update one TracerStudy
     * const tracerStudy = await prisma.tracerStudy.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TracerStudyUpdateArgs>(args: SelectSubset<T, TracerStudyUpdateArgs<ExtArgs>>): Prisma__TracerStudyClient<$Result.GetResult<Prisma.$TracerStudyPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more TracerStudies.
     * @param {TracerStudyDeleteManyArgs} args - Arguments to filter TracerStudies to delete.
     * @example
     * // Delete a few TracerStudies
     * const { count } = await prisma.tracerStudy.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TracerStudyDeleteManyArgs>(args?: SelectSubset<T, TracerStudyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TracerStudies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TracerStudyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TracerStudies
     * const tracerStudy = await prisma.tracerStudy.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TracerStudyUpdateManyArgs>(args: SelectSubset<T, TracerStudyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TracerStudy.
     * @param {TracerStudyUpsertArgs} args - Arguments to update or create a TracerStudy.
     * @example
     * // Update or create a TracerStudy
     * const tracerStudy = await prisma.tracerStudy.upsert({
     *   create: {
     *     // ... data to create a TracerStudy
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TracerStudy we want to update
     *   }
     * })
     */
    upsert<T extends TracerStudyUpsertArgs>(args: SelectSubset<T, TracerStudyUpsertArgs<ExtArgs>>): Prisma__TracerStudyClient<$Result.GetResult<Prisma.$TracerStudyPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of TracerStudies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TracerStudyCountArgs} args - Arguments to filter TracerStudies to count.
     * @example
     * // Count the number of TracerStudies
     * const count = await prisma.tracerStudy.count({
     *   where: {
     *     // ... the filter for the TracerStudies we want to count
     *   }
     * })
    **/
    count<T extends TracerStudyCountArgs>(
      args?: Subset<T, TracerStudyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TracerStudyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TracerStudy.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TracerStudyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TracerStudyAggregateArgs>(args: Subset<T, TracerStudyAggregateArgs>): Prisma.PrismaPromise<GetTracerStudyAggregateType<T>>

    /**
     * Group by TracerStudy.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TracerStudyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TracerStudyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TracerStudyGroupByArgs['orderBy'] }
        : { orderBy?: TracerStudyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TracerStudyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTracerStudyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TracerStudy model
   */
  readonly fields: TracerStudyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TracerStudy.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TracerStudyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    profile<T extends ProfileDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProfileDefaultArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TracerStudy model
   */ 
  interface TracerStudyFieldRefs {
    readonly id: FieldRef<"TracerStudy", 'String'>
    readonly profile_id: FieldRef<"TracerStudy", 'String'>
    readonly nimhsmsmh: FieldRef<"TracerStudy", 'String'>
    readonly tahun_lulus: FieldRef<"TracerStudy", 'String'>
    readonly nmmhsmsmh: FieldRef<"TracerStudy", 'String'>
    readonly emailmsmh: FieldRef<"TracerStudy", 'String'>
    readonly kdptimsmh: FieldRef<"TracerStudy", 'String'>
    readonly kdpstmsmh: FieldRef<"TracerStudy", 'String'>
    readonly telpomsmh: FieldRef<"TracerStudy", 'String'>
    readonly nik: FieldRef<"TracerStudy", 'String'>
    readonly npwp: FieldRef<"TracerStudy", 'String'>
    readonly f8: FieldRef<"TracerStudy", 'Int'>
    readonly f502: FieldRef<"TracerStudy", 'Int'>
    readonly f505: FieldRef<"TracerStudy", 'Int'>
    readonly f5a1: FieldRef<"TracerStudy", 'String'>
    readonly f5a2: FieldRef<"TracerStudy", 'String'>
    readonly f1101: FieldRef<"TracerStudy", 'Int'>
    readonly f1102: FieldRef<"TracerStudy", 'String'>
    readonly f5b: FieldRef<"TracerStudy", 'String'>
    readonly f5c: FieldRef<"TracerStudy", 'String'>
    readonly f5d: FieldRef<"TracerStudy", 'Int'>
    readonly f18a: FieldRef<"TracerStudy", 'String'>
    readonly f18b: FieldRef<"TracerStudy", 'String'>
    readonly f18c: FieldRef<"TracerStudy", 'String'>
    readonly f18d: FieldRef<"TracerStudy", 'DateTime'>
    readonly f1201: FieldRef<"TracerStudy", 'Int'>
    readonly f1202: FieldRef<"TracerStudy", 'String'>
    readonly f14: FieldRef<"TracerStudy", 'Int'>
    readonly f15: FieldRef<"TracerStudy", 'Int'>
    readonly f1761: FieldRef<"TracerStudy", 'Int'>
    readonly f1762: FieldRef<"TracerStudy", 'Int'>
    readonly f1763: FieldRef<"TracerStudy", 'Int'>
    readonly f1764: FieldRef<"TracerStudy", 'Int'>
    readonly f1765: FieldRef<"TracerStudy", 'Int'>
    readonly f1766: FieldRef<"TracerStudy", 'Int'>
    readonly f1767: FieldRef<"TracerStudy", 'Int'>
    readonly f1768: FieldRef<"TracerStudy", 'Int'>
    readonly f1769: FieldRef<"TracerStudy", 'Int'>
    readonly f1770: FieldRef<"TracerStudy", 'Int'>
    readonly f1771: FieldRef<"TracerStudy", 'Int'>
    readonly f1772: FieldRef<"TracerStudy", 'Int'>
    readonly f1773: FieldRef<"TracerStudy", 'Int'>
    readonly f1774: FieldRef<"TracerStudy", 'Int'>
    readonly f21: FieldRef<"TracerStudy", 'Int'>
    readonly f22: FieldRef<"TracerStudy", 'Int'>
    readonly f23: FieldRef<"TracerStudy", 'Int'>
    readonly f24: FieldRef<"TracerStudy", 'Int'>
    readonly f25: FieldRef<"TracerStudy", 'Int'>
    readonly f26: FieldRef<"TracerStudy", 'Int'>
    readonly f27: FieldRef<"TracerStudy", 'Int'>
    readonly f301: FieldRef<"TracerStudy", 'Int'>
    readonly f302: FieldRef<"TracerStudy", 'Int'>
    readonly f303: FieldRef<"TracerStudy", 'Int'>
    readonly f401: FieldRef<"TracerStudy", 'Int'>
    readonly f402: FieldRef<"TracerStudy", 'Int'>
    readonly f403: FieldRef<"TracerStudy", 'Int'>
    readonly f404: FieldRef<"TracerStudy", 'Int'>
    readonly f405: FieldRef<"TracerStudy", 'Int'>
    readonly f406: FieldRef<"TracerStudy", 'Int'>
    readonly f407: FieldRef<"TracerStudy", 'Int'>
    readonly f408: FieldRef<"TracerStudy", 'Int'>
    readonly f409: FieldRef<"TracerStudy", 'Int'>
    readonly f410: FieldRef<"TracerStudy", 'Int'>
    readonly f411: FieldRef<"TracerStudy", 'Int'>
    readonly f412: FieldRef<"TracerStudy", 'Int'>
    readonly f413: FieldRef<"TracerStudy", 'Int'>
    readonly f414: FieldRef<"TracerStudy", 'Int'>
    readonly f415: FieldRef<"TracerStudy", 'Int'>
    readonly f416: FieldRef<"TracerStudy", 'String'>
    readonly f6: FieldRef<"TracerStudy", 'Int'>
    readonly f7: FieldRef<"TracerStudy", 'Int'>
    readonly f7a: FieldRef<"TracerStudy", 'Int'>
    readonly f1001: FieldRef<"TracerStudy", 'Int'>
    readonly f1002: FieldRef<"TracerStudy", 'String'>
    readonly f1601: FieldRef<"TracerStudy", 'Int'>
    readonly f1602: FieldRef<"TracerStudy", 'Int'>
    readonly f1603: FieldRef<"TracerStudy", 'Int'>
    readonly f1604: FieldRef<"TracerStudy", 'Int'>
    readonly f1605: FieldRef<"TracerStudy", 'Int'>
    readonly f1606: FieldRef<"TracerStudy", 'Int'>
    readonly f1607: FieldRef<"TracerStudy", 'Int'>
    readonly f1608: FieldRef<"TracerStudy", 'Int'>
    readonly f1609: FieldRef<"TracerStudy", 'Int'>
    readonly f1610: FieldRef<"TracerStudy", 'Int'>
    readonly f1611: FieldRef<"TracerStudy", 'Int'>
    readonly f1612: FieldRef<"TracerStudy", 'Int'>
    readonly f1613: FieldRef<"TracerStudy", 'Int'>
    readonly f1614: FieldRef<"TracerStudy", 'String'>
    readonly createdAt: FieldRef<"TracerStudy", 'DateTime'>
    readonly updatedAt: FieldRef<"TracerStudy", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * TracerStudy findUnique
   */
  export type TracerStudyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TracerStudy
     */
    select?: TracerStudySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TracerStudyInclude<ExtArgs> | null
    /**
     * Filter, which TracerStudy to fetch.
     */
    where: TracerStudyWhereUniqueInput
  }

  /**
   * TracerStudy findUniqueOrThrow
   */
  export type TracerStudyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TracerStudy
     */
    select?: TracerStudySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TracerStudyInclude<ExtArgs> | null
    /**
     * Filter, which TracerStudy to fetch.
     */
    where: TracerStudyWhereUniqueInput
  }

  /**
   * TracerStudy findFirst
   */
  export type TracerStudyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TracerStudy
     */
    select?: TracerStudySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TracerStudyInclude<ExtArgs> | null
    /**
     * Filter, which TracerStudy to fetch.
     */
    where?: TracerStudyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TracerStudies to fetch.
     */
    orderBy?: TracerStudyOrderByWithRelationInput | TracerStudyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TracerStudies.
     */
    cursor?: TracerStudyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TracerStudies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TracerStudies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TracerStudies.
     */
    distinct?: TracerStudyScalarFieldEnum | TracerStudyScalarFieldEnum[]
  }

  /**
   * TracerStudy findFirstOrThrow
   */
  export type TracerStudyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TracerStudy
     */
    select?: TracerStudySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TracerStudyInclude<ExtArgs> | null
    /**
     * Filter, which TracerStudy to fetch.
     */
    where?: TracerStudyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TracerStudies to fetch.
     */
    orderBy?: TracerStudyOrderByWithRelationInput | TracerStudyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TracerStudies.
     */
    cursor?: TracerStudyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TracerStudies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TracerStudies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TracerStudies.
     */
    distinct?: TracerStudyScalarFieldEnum | TracerStudyScalarFieldEnum[]
  }

  /**
   * TracerStudy findMany
   */
  export type TracerStudyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TracerStudy
     */
    select?: TracerStudySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TracerStudyInclude<ExtArgs> | null
    /**
     * Filter, which TracerStudies to fetch.
     */
    where?: TracerStudyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TracerStudies to fetch.
     */
    orderBy?: TracerStudyOrderByWithRelationInput | TracerStudyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TracerStudies.
     */
    cursor?: TracerStudyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TracerStudies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TracerStudies.
     */
    skip?: number
    distinct?: TracerStudyScalarFieldEnum | TracerStudyScalarFieldEnum[]
  }

  /**
   * TracerStudy create
   */
  export type TracerStudyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TracerStudy
     */
    select?: TracerStudySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TracerStudyInclude<ExtArgs> | null
    /**
     * The data needed to create a TracerStudy.
     */
    data: XOR<TracerStudyCreateInput, TracerStudyUncheckedCreateInput>
  }

  /**
   * TracerStudy createMany
   */
  export type TracerStudyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TracerStudies.
     */
    data: TracerStudyCreateManyInput | TracerStudyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TracerStudy update
   */
  export type TracerStudyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TracerStudy
     */
    select?: TracerStudySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TracerStudyInclude<ExtArgs> | null
    /**
     * The data needed to update a TracerStudy.
     */
    data: XOR<TracerStudyUpdateInput, TracerStudyUncheckedUpdateInput>
    /**
     * Choose, which TracerStudy to update.
     */
    where: TracerStudyWhereUniqueInput
  }

  /**
   * TracerStudy updateMany
   */
  export type TracerStudyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TracerStudies.
     */
    data: XOR<TracerStudyUpdateManyMutationInput, TracerStudyUncheckedUpdateManyInput>
    /**
     * Filter which TracerStudies to update
     */
    where?: TracerStudyWhereInput
  }

  /**
   * TracerStudy upsert
   */
  export type TracerStudyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TracerStudy
     */
    select?: TracerStudySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TracerStudyInclude<ExtArgs> | null
    /**
     * The filter to search for the TracerStudy to update in case it exists.
     */
    where: TracerStudyWhereUniqueInput
    /**
     * In case the TracerStudy found by the `where` argument doesn't exist, create a new TracerStudy with this data.
     */
    create: XOR<TracerStudyCreateInput, TracerStudyUncheckedCreateInput>
    /**
     * In case the TracerStudy was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TracerStudyUpdateInput, TracerStudyUncheckedUpdateInput>
  }

  /**
   * TracerStudy delete
   */
  export type TracerStudyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TracerStudy
     */
    select?: TracerStudySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TracerStudyInclude<ExtArgs> | null
    /**
     * Filter which TracerStudy to delete.
     */
    where: TracerStudyWhereUniqueInput
  }

  /**
   * TracerStudy deleteMany
   */
  export type TracerStudyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TracerStudies to delete
     */
    where?: TracerStudyWhereInput
  }

  /**
   * TracerStudy without action
   */
  export type TracerStudyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TracerStudy
     */
    select?: TracerStudySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TracerStudyInclude<ExtArgs> | null
  }


  /**
   * Model Category
   */

  export type AggregateCategory = {
    _count: CategoryCountAggregateOutputType | null
    _avg: CategoryAvgAggregateOutputType | null
    _sum: CategorySumAggregateOutputType | null
    _min: CategoryMinAggregateOutputType | null
    _max: CategoryMaxAggregateOutputType | null
  }

  export type CategoryAvgAggregateOutputType = {
    id: number | null
  }

  export type CategorySumAggregateOutputType = {
    id: number | null
  }

  export type CategoryMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CategoryMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CategoryCountAggregateOutputType = {
    id: number
    name: number
    description: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CategoryAvgAggregateInputType = {
    id?: true
  }

  export type CategorySumAggregateInputType = {
    id?: true
  }

  export type CategoryMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CategoryMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CategoryCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CategoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Category to aggregate.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Categories
    **/
    _count?: true | CategoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CategoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CategorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoryMaxAggregateInputType
  }

  export type GetCategoryAggregateType<T extends CategoryAggregateArgs> = {
        [P in keyof T & keyof AggregateCategory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategory[P]>
      : GetScalarType<T[P], AggregateCategory[P]>
  }




  export type CategoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryWhereInput
    orderBy?: CategoryOrderByWithAggregationInput | CategoryOrderByWithAggregationInput[]
    by: CategoryScalarFieldEnum[] | CategoryScalarFieldEnum
    having?: CategoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoryCountAggregateInputType | true
    _avg?: CategoryAvgAggregateInputType
    _sum?: CategorySumAggregateInputType
    _min?: CategoryMinAggregateInputType
    _max?: CategoryMaxAggregateInputType
  }

  export type CategoryGroupByOutputType = {
    id: number
    name: string
    description: string | null
    createdAt: Date
    updatedAt: Date
    _count: CategoryCountAggregateOutputType | null
    _avg: CategoryAvgAggregateOutputType | null
    _sum: CategorySumAggregateOutputType | null
    _min: CategoryMinAggregateOutputType | null
    _max: CategoryMaxAggregateOutputType | null
  }

  type GetCategoryGroupByPayload<T extends CategoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CategoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoryGroupByOutputType[P]>
            : GetScalarType<T[P], CategoryGroupByOutputType[P]>
        }
      >
    >


  export type CategorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Product?: boolean | Category$ProductArgs<ExtArgs>
    _count?: boolean | CategoryCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["category"]>


  export type CategorySelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CategoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Product?: boolean | Category$ProductArgs<ExtArgs>
    _count?: boolean | CategoryCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $CategoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Category"
    objects: {
      Product: Prisma.$ProductPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      description: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["category"]>
    composites: {}
  }

  type CategoryGetPayload<S extends boolean | null | undefined | CategoryDefaultArgs> = $Result.GetResult<Prisma.$CategoryPayload, S>

  type CategoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CategoryFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CategoryCountAggregateInputType | true
    }

  export interface CategoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Category'], meta: { name: 'Category' } }
    /**
     * Find zero or one Category that matches the filter.
     * @param {CategoryFindUniqueArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CategoryFindUniqueArgs>(args: SelectSubset<T, CategoryFindUniqueArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Category that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CategoryFindUniqueOrThrowArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CategoryFindUniqueOrThrowArgs>(args: SelectSubset<T, CategoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Category that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindFirstArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CategoryFindFirstArgs>(args?: SelectSubset<T, CategoryFindFirstArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Category that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindFirstOrThrowArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CategoryFindFirstOrThrowArgs>(args?: SelectSubset<T, CategoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Categories
     * const categories = await prisma.category.findMany()
     * 
     * // Get first 10 Categories
     * const categories = await prisma.category.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const categoryWithIdOnly = await prisma.category.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CategoryFindManyArgs>(args?: SelectSubset<T, CategoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Category.
     * @param {CategoryCreateArgs} args - Arguments to create a Category.
     * @example
     * // Create one Category
     * const Category = await prisma.category.create({
     *   data: {
     *     // ... data to create a Category
     *   }
     * })
     * 
     */
    create<T extends CategoryCreateArgs>(args: SelectSubset<T, CategoryCreateArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Categories.
     * @param {CategoryCreateManyArgs} args - Arguments to create many Categories.
     * @example
     * // Create many Categories
     * const category = await prisma.category.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CategoryCreateManyArgs>(args?: SelectSubset<T, CategoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Category.
     * @param {CategoryDeleteArgs} args - Arguments to delete one Category.
     * @example
     * // Delete one Category
     * const Category = await prisma.category.delete({
     *   where: {
     *     // ... filter to delete one Category
     *   }
     * })
     * 
     */
    delete<T extends CategoryDeleteArgs>(args: SelectSubset<T, CategoryDeleteArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Category.
     * @param {CategoryUpdateArgs} args - Arguments to update one Category.
     * @example
     * // Update one Category
     * const category = await prisma.category.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CategoryUpdateArgs>(args: SelectSubset<T, CategoryUpdateArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Categories.
     * @param {CategoryDeleteManyArgs} args - Arguments to filter Categories to delete.
     * @example
     * // Delete a few Categories
     * const { count } = await prisma.category.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CategoryDeleteManyArgs>(args?: SelectSubset<T, CategoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Categories
     * const category = await prisma.category.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CategoryUpdateManyArgs>(args: SelectSubset<T, CategoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Category.
     * @param {CategoryUpsertArgs} args - Arguments to update or create a Category.
     * @example
     * // Update or create a Category
     * const category = await prisma.category.upsert({
     *   create: {
     *     // ... data to create a Category
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Category we want to update
     *   }
     * })
     */
    upsert<T extends CategoryUpsertArgs>(args: SelectSubset<T, CategoryUpsertArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryCountArgs} args - Arguments to filter Categories to count.
     * @example
     * // Count the number of Categories
     * const count = await prisma.category.count({
     *   where: {
     *     // ... the filter for the Categories we want to count
     *   }
     * })
    **/
    count<T extends CategoryCountArgs>(
      args?: Subset<T, CategoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Category.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoryAggregateArgs>(args: Subset<T, CategoryAggregateArgs>): Prisma.PrismaPromise<GetCategoryAggregateType<T>>

    /**
     * Group by Category.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CategoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CategoryGroupByArgs['orderBy'] }
        : { orderBy?: CategoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CategoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Category model
   */
  readonly fields: CategoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Category.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CategoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Product<T extends Category$ProductArgs<ExtArgs> = {}>(args?: Subset<T, Category$ProductArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Category model
   */ 
  interface CategoryFieldRefs {
    readonly id: FieldRef<"Category", 'Int'>
    readonly name: FieldRef<"Category", 'String'>
    readonly description: FieldRef<"Category", 'String'>
    readonly createdAt: FieldRef<"Category", 'DateTime'>
    readonly updatedAt: FieldRef<"Category", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Category findUnique
   */
  export type CategoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category findUniqueOrThrow
   */
  export type CategoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category findFirst
   */
  export type CategoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categories.
     */
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category findFirstOrThrow
   */
  export type CategoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categories.
     */
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category findMany
   */
  export type CategoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Categories to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category create
   */
  export type CategoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * The data needed to create a Category.
     */
    data: XOR<CategoryCreateInput, CategoryUncheckedCreateInput>
  }

  /**
   * Category createMany
   */
  export type CategoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Categories.
     */
    data: CategoryCreateManyInput | CategoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Category update
   */
  export type CategoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * The data needed to update a Category.
     */
    data: XOR<CategoryUpdateInput, CategoryUncheckedUpdateInput>
    /**
     * Choose, which Category to update.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category updateMany
   */
  export type CategoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Categories.
     */
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyInput>
    /**
     * Filter which Categories to update
     */
    where?: CategoryWhereInput
  }

  /**
   * Category upsert
   */
  export type CategoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * The filter to search for the Category to update in case it exists.
     */
    where: CategoryWhereUniqueInput
    /**
     * In case the Category found by the `where` argument doesn't exist, create a new Category with this data.
     */
    create: XOR<CategoryCreateInput, CategoryUncheckedCreateInput>
    /**
     * In case the Category was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CategoryUpdateInput, CategoryUncheckedUpdateInput>
  }

  /**
   * Category delete
   */
  export type CategoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter which Category to delete.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category deleteMany
   */
  export type CategoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Categories to delete
     */
    where?: CategoryWhereInput
  }

  /**
   * Category.Product
   */
  export type Category$ProductArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Category without action
   */
  export type CategoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
  }


  /**
   * Model Product
   */

  export type AggregateProduct = {
    _count: ProductCountAggregateOutputType | null
    _avg: ProductAvgAggregateOutputType | null
    _sum: ProductSumAggregateOutputType | null
    _min: ProductMinAggregateOutputType | null
    _max: ProductMaxAggregateOutputType | null
  }

  export type ProductAvgAggregateOutputType = {
    price: number | null
    categoryId: number | null
    stock: number | null
    countReview: number | null
  }

  export type ProductSumAggregateOutputType = {
    price: number | null
    categoryId: number | null
    stock: number | null
    countReview: number | null
  }

  export type ProductMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    price: number | null
    categoryId: number | null
    image: string | null
    stock: number | null
    countReview: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProductMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    price: number | null
    categoryId: number | null
    image: string | null
    stock: number | null
    countReview: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProductCountAggregateOutputType = {
    id: number
    name: number
    description: number
    price: number
    categoryId: number
    image: number
    stock: number
    countReview: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ProductAvgAggregateInputType = {
    price?: true
    categoryId?: true
    stock?: true
    countReview?: true
  }

  export type ProductSumAggregateInputType = {
    price?: true
    categoryId?: true
    stock?: true
    countReview?: true
  }

  export type ProductMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    price?: true
    categoryId?: true
    image?: true
    stock?: true
    countReview?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProductMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    price?: true
    categoryId?: true
    image?: true
    stock?: true
    countReview?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProductCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    price?: true
    categoryId?: true
    image?: true
    stock?: true
    countReview?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ProductAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Product to aggregate.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Products
    **/
    _count?: true | ProductCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductMaxAggregateInputType
  }

  export type GetProductAggregateType<T extends ProductAggregateArgs> = {
        [P in keyof T & keyof AggregateProduct]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProduct[P]>
      : GetScalarType<T[P], AggregateProduct[P]>
  }




  export type ProductGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithAggregationInput | ProductOrderByWithAggregationInput[]
    by: ProductScalarFieldEnum[] | ProductScalarFieldEnum
    having?: ProductScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductCountAggregateInputType | true
    _avg?: ProductAvgAggregateInputType
    _sum?: ProductSumAggregateInputType
    _min?: ProductMinAggregateInputType
    _max?: ProductMaxAggregateInputType
  }

  export type ProductGroupByOutputType = {
    id: string
    name: string
    description: string | null
    price: number
    categoryId: number
    image: string
    stock: number
    countReview: number
    createdAt: Date
    updatedAt: Date
    _count: ProductCountAggregateOutputType | null
    _avg: ProductAvgAggregateOutputType | null
    _sum: ProductSumAggregateOutputType | null
    _min: ProductMinAggregateOutputType | null
    _max: ProductMaxAggregateOutputType | null
  }

  type GetProductGroupByPayload<T extends ProductGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductGroupByOutputType[P]>
            : GetScalarType<T[P], ProductGroupByOutputType[P]>
        }
      >
    >


  export type ProductSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    price?: boolean
    categoryId?: boolean
    image?: boolean
    stock?: boolean
    countReview?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    category?: boolean | CategoryDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["product"]>


  export type ProductSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    price?: boolean
    categoryId?: boolean
    image?: boolean
    stock?: boolean
    countReview?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ProductInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    category?: boolean | CategoryDefaultArgs<ExtArgs>
  }

  export type $ProductPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Product"
    objects: {
      category: Prisma.$CategoryPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string | null
      price: number
      categoryId: number
      image: string
      stock: number
      countReview: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["product"]>
    composites: {}
  }

  type ProductGetPayload<S extends boolean | null | undefined | ProductDefaultArgs> = $Result.GetResult<Prisma.$ProductPayload, S>

  type ProductCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ProductFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ProductCountAggregateInputType | true
    }

  export interface ProductDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Product'], meta: { name: 'Product' } }
    /**
     * Find zero or one Product that matches the filter.
     * @param {ProductFindUniqueArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductFindUniqueArgs>(args: SelectSubset<T, ProductFindUniqueArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Product that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ProductFindUniqueOrThrowArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Product that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindFirstArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductFindFirstArgs>(args?: SelectSubset<T, ProductFindFirstArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Product that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindFirstOrThrowArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Products
     * const products = await prisma.product.findMany()
     * 
     * // Get first 10 Products
     * const products = await prisma.product.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productWithIdOnly = await prisma.product.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductFindManyArgs>(args?: SelectSubset<T, ProductFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Product.
     * @param {ProductCreateArgs} args - Arguments to create a Product.
     * @example
     * // Create one Product
     * const Product = await prisma.product.create({
     *   data: {
     *     // ... data to create a Product
     *   }
     * })
     * 
     */
    create<T extends ProductCreateArgs>(args: SelectSubset<T, ProductCreateArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Products.
     * @param {ProductCreateManyArgs} args - Arguments to create many Products.
     * @example
     * // Create many Products
     * const product = await prisma.product.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductCreateManyArgs>(args?: SelectSubset<T, ProductCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Product.
     * @param {ProductDeleteArgs} args - Arguments to delete one Product.
     * @example
     * // Delete one Product
     * const Product = await prisma.product.delete({
     *   where: {
     *     // ... filter to delete one Product
     *   }
     * })
     * 
     */
    delete<T extends ProductDeleteArgs>(args: SelectSubset<T, ProductDeleteArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Product.
     * @param {ProductUpdateArgs} args - Arguments to update one Product.
     * @example
     * // Update one Product
     * const product = await prisma.product.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductUpdateArgs>(args: SelectSubset<T, ProductUpdateArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Products.
     * @param {ProductDeleteManyArgs} args - Arguments to filter Products to delete.
     * @example
     * // Delete a few Products
     * const { count } = await prisma.product.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductDeleteManyArgs>(args?: SelectSubset<T, ProductDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Products
     * const product = await prisma.product.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductUpdateManyArgs>(args: SelectSubset<T, ProductUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Product.
     * @param {ProductUpsertArgs} args - Arguments to update or create a Product.
     * @example
     * // Update or create a Product
     * const product = await prisma.product.upsert({
     *   create: {
     *     // ... data to create a Product
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Product we want to update
     *   }
     * })
     */
    upsert<T extends ProductUpsertArgs>(args: SelectSubset<T, ProductUpsertArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCountArgs} args - Arguments to filter Products to count.
     * @example
     * // Count the number of Products
     * const count = await prisma.product.count({
     *   where: {
     *     // ... the filter for the Products we want to count
     *   }
     * })
    **/
    count<T extends ProductCountArgs>(
      args?: Subset<T, ProductCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Product.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductAggregateArgs>(args: Subset<T, ProductAggregateArgs>): Prisma.PrismaPromise<GetProductAggregateType<T>>

    /**
     * Group by Product.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductGroupByArgs['orderBy'] }
        : { orderBy?: ProductGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Product model
   */
  readonly fields: ProductFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Product.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    category<T extends CategoryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CategoryDefaultArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Product model
   */ 
  interface ProductFieldRefs {
    readonly id: FieldRef<"Product", 'String'>
    readonly name: FieldRef<"Product", 'String'>
    readonly description: FieldRef<"Product", 'String'>
    readonly price: FieldRef<"Product", 'Int'>
    readonly categoryId: FieldRef<"Product", 'Int'>
    readonly image: FieldRef<"Product", 'String'>
    readonly stock: FieldRef<"Product", 'Int'>
    readonly countReview: FieldRef<"Product", 'Int'>
    readonly createdAt: FieldRef<"Product", 'DateTime'>
    readonly updatedAt: FieldRef<"Product", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Product findUnique
   */
  export type ProductFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product findUniqueOrThrow
   */
  export type ProductFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product findFirst
   */
  export type ProductFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Products.
     */
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product findFirstOrThrow
   */
  export type ProductFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Products.
     */
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product findMany
   */
  export type ProductFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Products to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product create
   */
  export type ProductCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The data needed to create a Product.
     */
    data: XOR<ProductCreateInput, ProductUncheckedCreateInput>
  }

  /**
   * Product createMany
   */
  export type ProductCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Products.
     */
    data: ProductCreateManyInput | ProductCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Product update
   */
  export type ProductUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The data needed to update a Product.
     */
    data: XOR<ProductUpdateInput, ProductUncheckedUpdateInput>
    /**
     * Choose, which Product to update.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product updateMany
   */
  export type ProductUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Products.
     */
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyInput>
    /**
     * Filter which Products to update
     */
    where?: ProductWhereInput
  }

  /**
   * Product upsert
   */
  export type ProductUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The filter to search for the Product to update in case it exists.
     */
    where: ProductWhereUniqueInput
    /**
     * In case the Product found by the `where` argument doesn't exist, create a new Product with this data.
     */
    create: XOR<ProductCreateInput, ProductUncheckedCreateInput>
    /**
     * In case the Product was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductUpdateInput, ProductUncheckedUpdateInput>
  }

  /**
   * Product delete
   */
  export type ProductDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter which Product to delete.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product deleteMany
   */
  export type ProductDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Products to delete
     */
    where?: ProductWhereInput
  }

  /**
   * Product without action
   */
  export type ProductDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserScalarFieldEnum: {
    id: 'id',
    username: 'username',
    password: 'password',
    roleId: 'roleId',
    profileId: 'profileId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const RoleScalarFieldEnum: {
    id: 'id',
    name: 'name',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type RoleScalarFieldEnum = (typeof RoleScalarFieldEnum)[keyof typeof RoleScalarFieldEnum]


  export const ProfileScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    image: 'image',
    full_name: 'full_name',
    student_identification_number: 'student_identification_number',
    study_program_id: 'study_program_id',
    year_graduated: 'year_graduated',
    work: 'work',
    skills: 'skills',
    entrepreneur: 'entrepreneur',
    competencies: 'competencies',
    career: 'career',
    company: 'company',
    linkedin: 'linkedin',
    is_alumni_leader: 'is_alumni_leader',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ProfileScalarFieldEnum = (typeof ProfileScalarFieldEnum)[keyof typeof ProfileScalarFieldEnum]


  export const StudyProgramScalarFieldEnum: {
    id: 'id',
    name: 'name',
    code: 'code',
    level: 'level',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type StudyProgramScalarFieldEnum = (typeof StudyProgramScalarFieldEnum)[keyof typeof StudyProgramScalarFieldEnum]


  export const SensitiveStudentDataScalarFieldEnum: {
    id: 'id',
    profile_id: 'profile_id',
    pt_code: 'pt_code',
    place_of_birth: 'place_of_birth',
    date_of_birth: 'date_of_birth',
    national_identity_number: 'national_identity_number',
    full_address: 'full_address',
    email: 'email',
    phone_number: 'phone_number',
    mobile_number: 'mobile_number',
    total_credits: 'total_credits',
    graduation_date: 'graduation_date',
    yudisium_date: 'yudisium_date',
    gpa: 'gpa',
    gender: 'gender'
  };

  export type SensitiveStudentDataScalarFieldEnum = (typeof SensitiveStudentDataScalarFieldEnum)[keyof typeof SensitiveStudentDataScalarFieldEnum]


  export const NewsScalarFieldEnum: {
    id: 'id',
    title: 'title',
    content: 'content',
    image: 'image',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    NewsStatus: 'NewsStatus',
    rejectionReason: 'rejectionReason',
    authorId: 'authorId',
    adminUniversitasId: 'adminUniversitasId',
    isActive: 'isActive'
  };

  export type NewsScalarFieldEnum = (typeof NewsScalarFieldEnum)[keyof typeof NewsScalarFieldEnum]


  export const EventScalarFieldEnum: {
    id: 'id',
    title: 'title',
    date: 'date',
    description: 'description',
    image: 'image',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    EventStatus: 'EventStatus',
    rejectionReason: 'rejectionReason',
    authorId: 'authorId',
    adminUniversitasId: 'adminUniversitasId',
    isActive: 'isActive'
  };

  export type EventScalarFieldEnum = (typeof EventScalarFieldEnum)[keyof typeof EventScalarFieldEnum]


  export const AlumniProgramScalarFieldEnum: {
    id: 'id',
    title: 'title',
    description: 'description',
    image: 'image',
    category: 'category',
    AlumniProgramStatus: 'AlumniProgramStatus',
    rejectionReason: 'rejectionReason',
    authorId: 'authorId',
    adminProdiId: 'adminProdiId',
    adminUniversitasId: 'adminUniversitasId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    isActive: 'isActive'
  };

  export type AlumniProgramScalarFieldEnum = (typeof AlumniProgramScalarFieldEnum)[keyof typeof AlumniProgramScalarFieldEnum]


  export const TracerStudyScalarFieldEnum: {
    id: 'id',
    profile_id: 'profile_id',
    nimhsmsmh: 'nimhsmsmh',
    tahun_lulus: 'tahun_lulus',
    nmmhsmsmh: 'nmmhsmsmh',
    emailmsmh: 'emailmsmh',
    kdptimsmh: 'kdptimsmh',
    kdpstmsmh: 'kdpstmsmh',
    telpomsmh: 'telpomsmh',
    nik: 'nik',
    npwp: 'npwp',
    f8: 'f8',
    f502: 'f502',
    f505: 'f505',
    f5a1: 'f5a1',
    f5a2: 'f5a2',
    f1101: 'f1101',
    f1102: 'f1102',
    f5b: 'f5b',
    f5c: 'f5c',
    f5d: 'f5d',
    f18a: 'f18a',
    f18b: 'f18b',
    f18c: 'f18c',
    f18d: 'f18d',
    f1201: 'f1201',
    f1202: 'f1202',
    f14: 'f14',
    f15: 'f15',
    f1761: 'f1761',
    f1762: 'f1762',
    f1763: 'f1763',
    f1764: 'f1764',
    f1765: 'f1765',
    f1766: 'f1766',
    f1767: 'f1767',
    f1768: 'f1768',
    f1769: 'f1769',
    f1770: 'f1770',
    f1771: 'f1771',
    f1772: 'f1772',
    f1773: 'f1773',
    f1774: 'f1774',
    f21: 'f21',
    f22: 'f22',
    f23: 'f23',
    f24: 'f24',
    f25: 'f25',
    f26: 'f26',
    f27: 'f27',
    f301: 'f301',
    f302: 'f302',
    f303: 'f303',
    f401: 'f401',
    f402: 'f402',
    f403: 'f403',
    f404: 'f404',
    f405: 'f405',
    f406: 'f406',
    f407: 'f407',
    f408: 'f408',
    f409: 'f409',
    f410: 'f410',
    f411: 'f411',
    f412: 'f412',
    f413: 'f413',
    f414: 'f414',
    f415: 'f415',
    f416: 'f416',
    f6: 'f6',
    f7: 'f7',
    f7a: 'f7a',
    f1001: 'f1001',
    f1002: 'f1002',
    f1601: 'f1601',
    f1602: 'f1602',
    f1603: 'f1603',
    f1604: 'f1604',
    f1605: 'f1605',
    f1606: 'f1606',
    f1607: 'f1607',
    f1608: 'f1608',
    f1609: 'f1609',
    f1610: 'f1610',
    f1611: 'f1611',
    f1612: 'f1612',
    f1613: 'f1613',
    f1614: 'f1614',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type TracerStudyScalarFieldEnum = (typeof TracerStudyScalarFieldEnum)[keyof typeof TracerStudyScalarFieldEnum]


  export const CategoryScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CategoryScalarFieldEnum = (typeof CategoryScalarFieldEnum)[keyof typeof CategoryScalarFieldEnum]


  export const ProductScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    price: 'price',
    categoryId: 'categoryId',
    image: 'image',
    stock: 'stock',
    countReview: 'countReview',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ProductScalarFieldEnum = (typeof ProductScalarFieldEnum)[keyof typeof ProductScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'NewsStatus'
   */
  export type EnumNewsStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'NewsStatus'>
    


  /**
   * Reference to a field of type 'EventStatus'
   */
  export type EnumEventStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EventStatus'>
    


  /**
   * Reference to a field of type 'ProgramType'
   */
  export type EnumProgramTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ProgramType'>
    


  /**
   * Reference to a field of type 'AlumniProgramStatus'
   */
  export type EnumAlumniProgramStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AlumniProgramStatus'>
    
  /**
   * Deep Input Types
   */


  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    username?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    roleId?: StringFilter<"User"> | string
    profileId?: StringNullableFilter<"User"> | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    role?: XOR<RoleRelationFilter, RoleWhereInput>
    eventsAsUniversitas?: EventListRelationFilter
    newsAsUniversitas?: NewsListRelationFilter
    authoredEvents?: EventListRelationFilter
    authoredNews?: NewsListRelationFilter
    AlumniPrograms?: AlumniProgramListRelationFilter
    prodiVerifications?: AlumniProgramListRelationFilter
    universityVerifications?: AlumniProgramListRelationFilter
    Profile?: XOR<ProfileNullableRelationFilter, ProfileWhereInput> | null
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    roleId?: SortOrder
    profileId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    role?: RoleOrderByWithRelationInput
    eventsAsUniversitas?: EventOrderByRelationAggregateInput
    newsAsUniversitas?: NewsOrderByRelationAggregateInput
    authoredEvents?: EventOrderByRelationAggregateInput
    authoredNews?: NewsOrderByRelationAggregateInput
    AlumniPrograms?: AlumniProgramOrderByRelationAggregateInput
    prodiVerifications?: AlumniProgramOrderByRelationAggregateInput
    universityVerifications?: AlumniProgramOrderByRelationAggregateInput
    Profile?: ProfileOrderByWithRelationInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    username?: string
    profileId?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    password?: StringFilter<"User"> | string
    roleId?: StringFilter<"User"> | string
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    role?: XOR<RoleRelationFilter, RoleWhereInput>
    eventsAsUniversitas?: EventListRelationFilter
    newsAsUniversitas?: NewsListRelationFilter
    authoredEvents?: EventListRelationFilter
    authoredNews?: NewsListRelationFilter
    AlumniPrograms?: AlumniProgramListRelationFilter
    prodiVerifications?: AlumniProgramListRelationFilter
    universityVerifications?: AlumniProgramListRelationFilter
    Profile?: XOR<ProfileNullableRelationFilter, ProfileWhereInput> | null
  }, "id" | "username" | "profileId">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    roleId?: SortOrder
    profileId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    username?: StringWithAggregatesFilter<"User"> | string
    password?: StringWithAggregatesFilter<"User"> | string
    roleId?: StringWithAggregatesFilter<"User"> | string
    profileId?: StringNullableWithAggregatesFilter<"User"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
  }

  export type RoleWhereInput = {
    AND?: RoleWhereInput | RoleWhereInput[]
    OR?: RoleWhereInput[]
    NOT?: RoleWhereInput | RoleWhereInput[]
    id?: StringFilter<"Role"> | string
    name?: StringFilter<"Role"> | string
    createdAt?: DateTimeFilter<"Role"> | Date | string
    updatedAt?: DateTimeFilter<"Role"> | Date | string
    users?: UserListRelationFilter
  }

  export type RoleOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    users?: UserOrderByRelationAggregateInput
  }

  export type RoleWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name?: string
    AND?: RoleWhereInput | RoleWhereInput[]
    OR?: RoleWhereInput[]
    NOT?: RoleWhereInput | RoleWhereInput[]
    createdAt?: DateTimeFilter<"Role"> | Date | string
    updatedAt?: DateTimeFilter<"Role"> | Date | string
    users?: UserListRelationFilter
  }, "id" | "name">

  export type RoleOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: RoleCountOrderByAggregateInput
    _max?: RoleMaxOrderByAggregateInput
    _min?: RoleMinOrderByAggregateInput
  }

  export type RoleScalarWhereWithAggregatesInput = {
    AND?: RoleScalarWhereWithAggregatesInput | RoleScalarWhereWithAggregatesInput[]
    OR?: RoleScalarWhereWithAggregatesInput[]
    NOT?: RoleScalarWhereWithAggregatesInput | RoleScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Role"> | string
    name?: StringWithAggregatesFilter<"Role"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Role"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Role"> | Date | string
  }

  export type ProfileWhereInput = {
    AND?: ProfileWhereInput | ProfileWhereInput[]
    OR?: ProfileWhereInput[]
    NOT?: ProfileWhereInput | ProfileWhereInput[]
    id?: StringFilter<"Profile"> | string
    user_id?: StringFilter<"Profile"> | string
    image?: StringFilter<"Profile"> | string
    full_name?: StringFilter<"Profile"> | string
    student_identification_number?: StringFilter<"Profile"> | string
    study_program_id?: StringFilter<"Profile"> | string
    year_graduated?: DateTimeNullableFilter<"Profile"> | Date | string | null
    work?: StringNullableFilter<"Profile"> | string | null
    skills?: StringNullableFilter<"Profile"> | string | null
    entrepreneur?: StringNullableFilter<"Profile"> | string | null
    competencies?: StringNullableFilter<"Profile"> | string | null
    career?: StringNullableFilter<"Profile"> | string | null
    company?: StringNullableFilter<"Profile"> | string | null
    linkedin?: StringNullableFilter<"Profile"> | string | null
    is_alumni_leader?: BoolFilter<"Profile"> | boolean
    createdAt?: DateTimeFilter<"Profile"> | Date | string
    updatedAt?: DateTimeFilter<"Profile"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
    studyProgram?: XOR<StudyProgramRelationFilter, StudyProgramWhereInput>
    sensitive_student_data?: XOR<SensitiveStudentDataNullableRelationFilter, SensitiveStudentDataWhereInput> | null
    tracer_study?: XOR<TracerStudyNullableRelationFilter, TracerStudyWhereInput> | null
  }

  export type ProfileOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    image?: SortOrder
    full_name?: SortOrder
    student_identification_number?: SortOrder
    study_program_id?: SortOrder
    year_graduated?: SortOrderInput | SortOrder
    work?: SortOrderInput | SortOrder
    skills?: SortOrderInput | SortOrder
    entrepreneur?: SortOrderInput | SortOrder
    competencies?: SortOrderInput | SortOrder
    career?: SortOrderInput | SortOrder
    company?: SortOrderInput | SortOrder
    linkedin?: SortOrderInput | SortOrder
    is_alumni_leader?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
    studyProgram?: StudyProgramOrderByWithRelationInput
    sensitive_student_data?: SensitiveStudentDataOrderByWithRelationInput
    tracer_study?: TracerStudyOrderByWithRelationInput
  }

  export type ProfileWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    user_id?: string
    AND?: ProfileWhereInput | ProfileWhereInput[]
    OR?: ProfileWhereInput[]
    NOT?: ProfileWhereInput | ProfileWhereInput[]
    image?: StringFilter<"Profile"> | string
    full_name?: StringFilter<"Profile"> | string
    student_identification_number?: StringFilter<"Profile"> | string
    study_program_id?: StringFilter<"Profile"> | string
    year_graduated?: DateTimeNullableFilter<"Profile"> | Date | string | null
    work?: StringNullableFilter<"Profile"> | string | null
    skills?: StringNullableFilter<"Profile"> | string | null
    entrepreneur?: StringNullableFilter<"Profile"> | string | null
    competencies?: StringNullableFilter<"Profile"> | string | null
    career?: StringNullableFilter<"Profile"> | string | null
    company?: StringNullableFilter<"Profile"> | string | null
    linkedin?: StringNullableFilter<"Profile"> | string | null
    is_alumni_leader?: BoolFilter<"Profile"> | boolean
    createdAt?: DateTimeFilter<"Profile"> | Date | string
    updatedAt?: DateTimeFilter<"Profile"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
    studyProgram?: XOR<StudyProgramRelationFilter, StudyProgramWhereInput>
    sensitive_student_data?: XOR<SensitiveStudentDataNullableRelationFilter, SensitiveStudentDataWhereInput> | null
    tracer_study?: XOR<TracerStudyNullableRelationFilter, TracerStudyWhereInput> | null
  }, "id" | "user_id">

  export type ProfileOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    image?: SortOrder
    full_name?: SortOrder
    student_identification_number?: SortOrder
    study_program_id?: SortOrder
    year_graduated?: SortOrderInput | SortOrder
    work?: SortOrderInput | SortOrder
    skills?: SortOrderInput | SortOrder
    entrepreneur?: SortOrderInput | SortOrder
    competencies?: SortOrderInput | SortOrder
    career?: SortOrderInput | SortOrder
    company?: SortOrderInput | SortOrder
    linkedin?: SortOrderInput | SortOrder
    is_alumni_leader?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ProfileCountOrderByAggregateInput
    _max?: ProfileMaxOrderByAggregateInput
    _min?: ProfileMinOrderByAggregateInput
  }

  export type ProfileScalarWhereWithAggregatesInput = {
    AND?: ProfileScalarWhereWithAggregatesInput | ProfileScalarWhereWithAggregatesInput[]
    OR?: ProfileScalarWhereWithAggregatesInput[]
    NOT?: ProfileScalarWhereWithAggregatesInput | ProfileScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Profile"> | string
    user_id?: StringWithAggregatesFilter<"Profile"> | string
    image?: StringWithAggregatesFilter<"Profile"> | string
    full_name?: StringWithAggregatesFilter<"Profile"> | string
    student_identification_number?: StringWithAggregatesFilter<"Profile"> | string
    study_program_id?: StringWithAggregatesFilter<"Profile"> | string
    year_graduated?: DateTimeNullableWithAggregatesFilter<"Profile"> | Date | string | null
    work?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    skills?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    entrepreneur?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    competencies?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    career?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    company?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    linkedin?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    is_alumni_leader?: BoolWithAggregatesFilter<"Profile"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Profile"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Profile"> | Date | string
  }

  export type StudyProgramWhereInput = {
    AND?: StudyProgramWhereInput | StudyProgramWhereInput[]
    OR?: StudyProgramWhereInput[]
    NOT?: StudyProgramWhereInput | StudyProgramWhereInput[]
    id?: StringFilter<"StudyProgram"> | string
    name?: StringFilter<"StudyProgram"> | string
    code?: StringFilter<"StudyProgram"> | string
    level?: StringFilter<"StudyProgram"> | string
    createdAt?: DateTimeFilter<"StudyProgram"> | Date | string
    updatedAt?: DateTimeFilter<"StudyProgram"> | Date | string
    profiles?: ProfileListRelationFilter
  }

  export type StudyProgramOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    level?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    profiles?: ProfileOrderByRelationAggregateInput
  }

  export type StudyProgramWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    code?: string
    AND?: StudyProgramWhereInput | StudyProgramWhereInput[]
    OR?: StudyProgramWhereInput[]
    NOT?: StudyProgramWhereInput | StudyProgramWhereInput[]
    name?: StringFilter<"StudyProgram"> | string
    level?: StringFilter<"StudyProgram"> | string
    createdAt?: DateTimeFilter<"StudyProgram"> | Date | string
    updatedAt?: DateTimeFilter<"StudyProgram"> | Date | string
    profiles?: ProfileListRelationFilter
  }, "id" | "code">

  export type StudyProgramOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    level?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: StudyProgramCountOrderByAggregateInput
    _max?: StudyProgramMaxOrderByAggregateInput
    _min?: StudyProgramMinOrderByAggregateInput
  }

  export type StudyProgramScalarWhereWithAggregatesInput = {
    AND?: StudyProgramScalarWhereWithAggregatesInput | StudyProgramScalarWhereWithAggregatesInput[]
    OR?: StudyProgramScalarWhereWithAggregatesInput[]
    NOT?: StudyProgramScalarWhereWithAggregatesInput | StudyProgramScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"StudyProgram"> | string
    name?: StringWithAggregatesFilter<"StudyProgram"> | string
    code?: StringWithAggregatesFilter<"StudyProgram"> | string
    level?: StringWithAggregatesFilter<"StudyProgram"> | string
    createdAt?: DateTimeWithAggregatesFilter<"StudyProgram"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"StudyProgram"> | Date | string
  }

  export type SensitiveStudentDataWhereInput = {
    AND?: SensitiveStudentDataWhereInput | SensitiveStudentDataWhereInput[]
    OR?: SensitiveStudentDataWhereInput[]
    NOT?: SensitiveStudentDataWhereInput | SensitiveStudentDataWhereInput[]
    id?: StringFilter<"SensitiveStudentData"> | string
    profile_id?: StringFilter<"SensitiveStudentData"> | string
    pt_code?: StringFilter<"SensitiveStudentData"> | string
    place_of_birth?: StringFilter<"SensitiveStudentData"> | string
    date_of_birth?: DateTimeFilter<"SensitiveStudentData"> | Date | string
    national_identity_number?: StringFilter<"SensitiveStudentData"> | string
    full_address?: StringFilter<"SensitiveStudentData"> | string
    email?: StringFilter<"SensitiveStudentData"> | string
    phone_number?: StringFilter<"SensitiveStudentData"> | string
    mobile_number?: StringFilter<"SensitiveStudentData"> | string
    total_credits?: IntFilter<"SensitiveStudentData"> | number
    graduation_date?: DateTimeFilter<"SensitiveStudentData"> | Date | string
    yudisium_date?: DateTimeFilter<"SensitiveStudentData"> | Date | string
    gpa?: FloatFilter<"SensitiveStudentData"> | number
    gender?: StringFilter<"SensitiveStudentData"> | string
    profile?: XOR<ProfileRelationFilter, ProfileWhereInput>
  }

  export type SensitiveStudentDataOrderByWithRelationInput = {
    id?: SortOrder
    profile_id?: SortOrder
    pt_code?: SortOrder
    place_of_birth?: SortOrder
    date_of_birth?: SortOrder
    national_identity_number?: SortOrder
    full_address?: SortOrder
    email?: SortOrder
    phone_number?: SortOrder
    mobile_number?: SortOrder
    total_credits?: SortOrder
    graduation_date?: SortOrder
    yudisium_date?: SortOrder
    gpa?: SortOrder
    gender?: SortOrder
    profile?: ProfileOrderByWithRelationInput
  }

  export type SensitiveStudentDataWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    profile_id?: string
    AND?: SensitiveStudentDataWhereInput | SensitiveStudentDataWhereInput[]
    OR?: SensitiveStudentDataWhereInput[]
    NOT?: SensitiveStudentDataWhereInput | SensitiveStudentDataWhereInput[]
    pt_code?: StringFilter<"SensitiveStudentData"> | string
    place_of_birth?: StringFilter<"SensitiveStudentData"> | string
    date_of_birth?: DateTimeFilter<"SensitiveStudentData"> | Date | string
    national_identity_number?: StringFilter<"SensitiveStudentData"> | string
    full_address?: StringFilter<"SensitiveStudentData"> | string
    email?: StringFilter<"SensitiveStudentData"> | string
    phone_number?: StringFilter<"SensitiveStudentData"> | string
    mobile_number?: StringFilter<"SensitiveStudentData"> | string
    total_credits?: IntFilter<"SensitiveStudentData"> | number
    graduation_date?: DateTimeFilter<"SensitiveStudentData"> | Date | string
    yudisium_date?: DateTimeFilter<"SensitiveStudentData"> | Date | string
    gpa?: FloatFilter<"SensitiveStudentData"> | number
    gender?: StringFilter<"SensitiveStudentData"> | string
    profile?: XOR<ProfileRelationFilter, ProfileWhereInput>
  }, "id" | "profile_id">

  export type SensitiveStudentDataOrderByWithAggregationInput = {
    id?: SortOrder
    profile_id?: SortOrder
    pt_code?: SortOrder
    place_of_birth?: SortOrder
    date_of_birth?: SortOrder
    national_identity_number?: SortOrder
    full_address?: SortOrder
    email?: SortOrder
    phone_number?: SortOrder
    mobile_number?: SortOrder
    total_credits?: SortOrder
    graduation_date?: SortOrder
    yudisium_date?: SortOrder
    gpa?: SortOrder
    gender?: SortOrder
    _count?: SensitiveStudentDataCountOrderByAggregateInput
    _avg?: SensitiveStudentDataAvgOrderByAggregateInput
    _max?: SensitiveStudentDataMaxOrderByAggregateInput
    _min?: SensitiveStudentDataMinOrderByAggregateInput
    _sum?: SensitiveStudentDataSumOrderByAggregateInput
  }

  export type SensitiveStudentDataScalarWhereWithAggregatesInput = {
    AND?: SensitiveStudentDataScalarWhereWithAggregatesInput | SensitiveStudentDataScalarWhereWithAggregatesInput[]
    OR?: SensitiveStudentDataScalarWhereWithAggregatesInput[]
    NOT?: SensitiveStudentDataScalarWhereWithAggregatesInput | SensitiveStudentDataScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SensitiveStudentData"> | string
    profile_id?: StringWithAggregatesFilter<"SensitiveStudentData"> | string
    pt_code?: StringWithAggregatesFilter<"SensitiveStudentData"> | string
    place_of_birth?: StringWithAggregatesFilter<"SensitiveStudentData"> | string
    date_of_birth?: DateTimeWithAggregatesFilter<"SensitiveStudentData"> | Date | string
    national_identity_number?: StringWithAggregatesFilter<"SensitiveStudentData"> | string
    full_address?: StringWithAggregatesFilter<"SensitiveStudentData"> | string
    email?: StringWithAggregatesFilter<"SensitiveStudentData"> | string
    phone_number?: StringWithAggregatesFilter<"SensitiveStudentData"> | string
    mobile_number?: StringWithAggregatesFilter<"SensitiveStudentData"> | string
    total_credits?: IntWithAggregatesFilter<"SensitiveStudentData"> | number
    graduation_date?: DateTimeWithAggregatesFilter<"SensitiveStudentData"> | Date | string
    yudisium_date?: DateTimeWithAggregatesFilter<"SensitiveStudentData"> | Date | string
    gpa?: FloatWithAggregatesFilter<"SensitiveStudentData"> | number
    gender?: StringWithAggregatesFilter<"SensitiveStudentData"> | string
  }

  export type NewsWhereInput = {
    AND?: NewsWhereInput | NewsWhereInput[]
    OR?: NewsWhereInput[]
    NOT?: NewsWhereInput | NewsWhereInput[]
    id?: StringFilter<"News"> | string
    title?: StringFilter<"News"> | string
    content?: StringFilter<"News"> | string
    image?: StringFilter<"News"> | string
    createdAt?: DateTimeFilter<"News"> | Date | string
    updatedAt?: DateTimeFilter<"News"> | Date | string
    NewsStatus?: EnumNewsStatusFilter<"News"> | $Enums.NewsStatus
    rejectionReason?: StringNullableFilter<"News"> | string | null
    authorId?: StringFilter<"News"> | string
    adminUniversitasId?: StringNullableFilter<"News"> | string | null
    isActive?: BoolFilter<"News"> | boolean
    author?: XOR<UserRelationFilter, UserWhereInput>
    adminUniversitas?: XOR<UserNullableRelationFilter, UserWhereInput> | null
  }

  export type NewsOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    image?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    NewsStatus?: SortOrder
    rejectionReason?: SortOrderInput | SortOrder
    authorId?: SortOrder
    adminUniversitasId?: SortOrderInput | SortOrder
    isActive?: SortOrder
    author?: UserOrderByWithRelationInput
    adminUniversitas?: UserOrderByWithRelationInput
  }

  export type NewsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    title?: string
    AND?: NewsWhereInput | NewsWhereInput[]
    OR?: NewsWhereInput[]
    NOT?: NewsWhereInput | NewsWhereInput[]
    content?: StringFilter<"News"> | string
    image?: StringFilter<"News"> | string
    createdAt?: DateTimeFilter<"News"> | Date | string
    updatedAt?: DateTimeFilter<"News"> | Date | string
    NewsStatus?: EnumNewsStatusFilter<"News"> | $Enums.NewsStatus
    rejectionReason?: StringNullableFilter<"News"> | string | null
    authorId?: StringFilter<"News"> | string
    adminUniversitasId?: StringNullableFilter<"News"> | string | null
    isActive?: BoolFilter<"News"> | boolean
    author?: XOR<UserRelationFilter, UserWhereInput>
    adminUniversitas?: XOR<UserNullableRelationFilter, UserWhereInput> | null
  }, "id" | "title">

  export type NewsOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    image?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    NewsStatus?: SortOrder
    rejectionReason?: SortOrderInput | SortOrder
    authorId?: SortOrder
    adminUniversitasId?: SortOrderInput | SortOrder
    isActive?: SortOrder
    _count?: NewsCountOrderByAggregateInput
    _max?: NewsMaxOrderByAggregateInput
    _min?: NewsMinOrderByAggregateInput
  }

  export type NewsScalarWhereWithAggregatesInput = {
    AND?: NewsScalarWhereWithAggregatesInput | NewsScalarWhereWithAggregatesInput[]
    OR?: NewsScalarWhereWithAggregatesInput[]
    NOT?: NewsScalarWhereWithAggregatesInput | NewsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"News"> | string
    title?: StringWithAggregatesFilter<"News"> | string
    content?: StringWithAggregatesFilter<"News"> | string
    image?: StringWithAggregatesFilter<"News"> | string
    createdAt?: DateTimeWithAggregatesFilter<"News"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"News"> | Date | string
    NewsStatus?: EnumNewsStatusWithAggregatesFilter<"News"> | $Enums.NewsStatus
    rejectionReason?: StringNullableWithAggregatesFilter<"News"> | string | null
    authorId?: StringWithAggregatesFilter<"News"> | string
    adminUniversitasId?: StringNullableWithAggregatesFilter<"News"> | string | null
    isActive?: BoolWithAggregatesFilter<"News"> | boolean
  }

  export type EventWhereInput = {
    AND?: EventWhereInput | EventWhereInput[]
    OR?: EventWhereInput[]
    NOT?: EventWhereInput | EventWhereInput[]
    id?: StringFilter<"Event"> | string
    title?: StringFilter<"Event"> | string
    date?: DateTimeFilter<"Event"> | Date | string
    description?: StringNullableFilter<"Event"> | string | null
    image?: StringFilter<"Event"> | string
    createdAt?: DateTimeFilter<"Event"> | Date | string
    updatedAt?: DateTimeFilter<"Event"> | Date | string
    EventStatus?: EnumEventStatusFilter<"Event"> | $Enums.EventStatus
    rejectionReason?: StringNullableFilter<"Event"> | string | null
    authorId?: StringFilter<"Event"> | string
    adminUniversitasId?: StringNullableFilter<"Event"> | string | null
    isActive?: BoolFilter<"Event"> | boolean
    author?: XOR<UserRelationFilter, UserWhereInput>
    adminUniversitas?: XOR<UserNullableRelationFilter, UserWhereInput> | null
  }

  export type EventOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    date?: SortOrder
    description?: SortOrderInput | SortOrder
    image?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    EventStatus?: SortOrder
    rejectionReason?: SortOrderInput | SortOrder
    authorId?: SortOrder
    adminUniversitasId?: SortOrderInput | SortOrder
    isActive?: SortOrder
    author?: UserOrderByWithRelationInput
    adminUniversitas?: UserOrderByWithRelationInput
  }

  export type EventWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    title?: string
    AND?: EventWhereInput | EventWhereInput[]
    OR?: EventWhereInput[]
    NOT?: EventWhereInput | EventWhereInput[]
    date?: DateTimeFilter<"Event"> | Date | string
    description?: StringNullableFilter<"Event"> | string | null
    image?: StringFilter<"Event"> | string
    createdAt?: DateTimeFilter<"Event"> | Date | string
    updatedAt?: DateTimeFilter<"Event"> | Date | string
    EventStatus?: EnumEventStatusFilter<"Event"> | $Enums.EventStatus
    rejectionReason?: StringNullableFilter<"Event"> | string | null
    authorId?: StringFilter<"Event"> | string
    adminUniversitasId?: StringNullableFilter<"Event"> | string | null
    isActive?: BoolFilter<"Event"> | boolean
    author?: XOR<UserRelationFilter, UserWhereInput>
    adminUniversitas?: XOR<UserNullableRelationFilter, UserWhereInput> | null
  }, "id" | "title">

  export type EventOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    date?: SortOrder
    description?: SortOrderInput | SortOrder
    image?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    EventStatus?: SortOrder
    rejectionReason?: SortOrderInput | SortOrder
    authorId?: SortOrder
    adminUniversitasId?: SortOrderInput | SortOrder
    isActive?: SortOrder
    _count?: EventCountOrderByAggregateInput
    _max?: EventMaxOrderByAggregateInput
    _min?: EventMinOrderByAggregateInput
  }

  export type EventScalarWhereWithAggregatesInput = {
    AND?: EventScalarWhereWithAggregatesInput | EventScalarWhereWithAggregatesInput[]
    OR?: EventScalarWhereWithAggregatesInput[]
    NOT?: EventScalarWhereWithAggregatesInput | EventScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Event"> | string
    title?: StringWithAggregatesFilter<"Event"> | string
    date?: DateTimeWithAggregatesFilter<"Event"> | Date | string
    description?: StringNullableWithAggregatesFilter<"Event"> | string | null
    image?: StringWithAggregatesFilter<"Event"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Event"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Event"> | Date | string
    EventStatus?: EnumEventStatusWithAggregatesFilter<"Event"> | $Enums.EventStatus
    rejectionReason?: StringNullableWithAggregatesFilter<"Event"> | string | null
    authorId?: StringWithAggregatesFilter<"Event"> | string
    adminUniversitasId?: StringNullableWithAggregatesFilter<"Event"> | string | null
    isActive?: BoolWithAggregatesFilter<"Event"> | boolean
  }

  export type AlumniProgramWhereInput = {
    AND?: AlumniProgramWhereInput | AlumniProgramWhereInput[]
    OR?: AlumniProgramWhereInput[]
    NOT?: AlumniProgramWhereInput | AlumniProgramWhereInput[]
    id?: StringFilter<"AlumniProgram"> | string
    title?: StringFilter<"AlumniProgram"> | string
    description?: StringFilter<"AlumniProgram"> | string
    image?: StringNullableFilter<"AlumniProgram"> | string | null
    category?: EnumProgramTypeFilter<"AlumniProgram"> | $Enums.ProgramType
    AlumniProgramStatus?: EnumAlumniProgramStatusFilter<"AlumniProgram"> | $Enums.AlumniProgramStatus
    rejectionReason?: StringNullableFilter<"AlumniProgram"> | string | null
    authorId?: StringFilter<"AlumniProgram"> | string
    adminProdiId?: StringNullableFilter<"AlumniProgram"> | string | null
    adminUniversitasId?: StringNullableFilter<"AlumniProgram"> | string | null
    createdAt?: DateTimeFilter<"AlumniProgram"> | Date | string
    updatedAt?: DateTimeFilter<"AlumniProgram"> | Date | string
    isActive?: BoolFilter<"AlumniProgram"> | boolean
    author?: XOR<UserRelationFilter, UserWhereInput>
    adminProdi?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    adminUniversitas?: XOR<UserNullableRelationFilter, UserWhereInput> | null
  }

  export type AlumniProgramOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    image?: SortOrderInput | SortOrder
    category?: SortOrder
    AlumniProgramStatus?: SortOrder
    rejectionReason?: SortOrderInput | SortOrder
    authorId?: SortOrder
    adminProdiId?: SortOrderInput | SortOrder
    adminUniversitasId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isActive?: SortOrder
    author?: UserOrderByWithRelationInput
    adminProdi?: UserOrderByWithRelationInput
    adminUniversitas?: UserOrderByWithRelationInput
  }

  export type AlumniProgramWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AlumniProgramWhereInput | AlumniProgramWhereInput[]
    OR?: AlumniProgramWhereInput[]
    NOT?: AlumniProgramWhereInput | AlumniProgramWhereInput[]
    title?: StringFilter<"AlumniProgram"> | string
    description?: StringFilter<"AlumniProgram"> | string
    image?: StringNullableFilter<"AlumniProgram"> | string | null
    category?: EnumProgramTypeFilter<"AlumniProgram"> | $Enums.ProgramType
    AlumniProgramStatus?: EnumAlumniProgramStatusFilter<"AlumniProgram"> | $Enums.AlumniProgramStatus
    rejectionReason?: StringNullableFilter<"AlumniProgram"> | string | null
    authorId?: StringFilter<"AlumniProgram"> | string
    adminProdiId?: StringNullableFilter<"AlumniProgram"> | string | null
    adminUniversitasId?: StringNullableFilter<"AlumniProgram"> | string | null
    createdAt?: DateTimeFilter<"AlumniProgram"> | Date | string
    updatedAt?: DateTimeFilter<"AlumniProgram"> | Date | string
    isActive?: BoolFilter<"AlumniProgram"> | boolean
    author?: XOR<UserRelationFilter, UserWhereInput>
    adminProdi?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    adminUniversitas?: XOR<UserNullableRelationFilter, UserWhereInput> | null
  }, "id">

  export type AlumniProgramOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    image?: SortOrderInput | SortOrder
    category?: SortOrder
    AlumniProgramStatus?: SortOrder
    rejectionReason?: SortOrderInput | SortOrder
    authorId?: SortOrder
    adminProdiId?: SortOrderInput | SortOrder
    adminUniversitasId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isActive?: SortOrder
    _count?: AlumniProgramCountOrderByAggregateInput
    _max?: AlumniProgramMaxOrderByAggregateInput
    _min?: AlumniProgramMinOrderByAggregateInput
  }

  export type AlumniProgramScalarWhereWithAggregatesInput = {
    AND?: AlumniProgramScalarWhereWithAggregatesInput | AlumniProgramScalarWhereWithAggregatesInput[]
    OR?: AlumniProgramScalarWhereWithAggregatesInput[]
    NOT?: AlumniProgramScalarWhereWithAggregatesInput | AlumniProgramScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AlumniProgram"> | string
    title?: StringWithAggregatesFilter<"AlumniProgram"> | string
    description?: StringWithAggregatesFilter<"AlumniProgram"> | string
    image?: StringNullableWithAggregatesFilter<"AlumniProgram"> | string | null
    category?: EnumProgramTypeWithAggregatesFilter<"AlumniProgram"> | $Enums.ProgramType
    AlumniProgramStatus?: EnumAlumniProgramStatusWithAggregatesFilter<"AlumniProgram"> | $Enums.AlumniProgramStatus
    rejectionReason?: StringNullableWithAggregatesFilter<"AlumniProgram"> | string | null
    authorId?: StringWithAggregatesFilter<"AlumniProgram"> | string
    adminProdiId?: StringNullableWithAggregatesFilter<"AlumniProgram"> | string | null
    adminUniversitasId?: StringNullableWithAggregatesFilter<"AlumniProgram"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"AlumniProgram"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"AlumniProgram"> | Date | string
    isActive?: BoolWithAggregatesFilter<"AlumniProgram"> | boolean
  }

  export type TracerStudyWhereInput = {
    AND?: TracerStudyWhereInput | TracerStudyWhereInput[]
    OR?: TracerStudyWhereInput[]
    NOT?: TracerStudyWhereInput | TracerStudyWhereInput[]
    id?: StringFilter<"TracerStudy"> | string
    profile_id?: StringFilter<"TracerStudy"> | string
    nimhsmsmh?: StringNullableFilter<"TracerStudy"> | string | null
    tahun_lulus?: StringNullableFilter<"TracerStudy"> | string | null
    nmmhsmsmh?: StringNullableFilter<"TracerStudy"> | string | null
    emailmsmh?: StringNullableFilter<"TracerStudy"> | string | null
    kdptimsmh?: StringNullableFilter<"TracerStudy"> | string | null
    kdpstmsmh?: StringNullableFilter<"TracerStudy"> | string | null
    telpomsmh?: StringNullableFilter<"TracerStudy"> | string | null
    nik?: StringNullableFilter<"TracerStudy"> | string | null
    npwp?: StringNullableFilter<"TracerStudy"> | string | null
    f8?: IntFilter<"TracerStudy"> | number
    f502?: IntNullableFilter<"TracerStudy"> | number | null
    f505?: IntNullableFilter<"TracerStudy"> | number | null
    f5a1?: StringNullableFilter<"TracerStudy"> | string | null
    f5a2?: StringNullableFilter<"TracerStudy"> | string | null
    f1101?: IntNullableFilter<"TracerStudy"> | number | null
    f1102?: StringNullableFilter<"TracerStudy"> | string | null
    f5b?: StringNullableFilter<"TracerStudy"> | string | null
    f5c?: StringNullableFilter<"TracerStudy"> | string | null
    f5d?: IntNullableFilter<"TracerStudy"> | number | null
    f18a?: StringNullableFilter<"TracerStudy"> | string | null
    f18b?: StringNullableFilter<"TracerStudy"> | string | null
    f18c?: StringNullableFilter<"TracerStudy"> | string | null
    f18d?: DateTimeNullableFilter<"TracerStudy"> | Date | string | null
    f1201?: IntFilter<"TracerStudy"> | number
    f1202?: StringNullableFilter<"TracerStudy"> | string | null
    f14?: IntNullableFilter<"TracerStudy"> | number | null
    f15?: IntNullableFilter<"TracerStudy"> | number | null
    f1761?: IntFilter<"TracerStudy"> | number
    f1762?: IntFilter<"TracerStudy"> | number
    f1763?: IntFilter<"TracerStudy"> | number
    f1764?: IntFilter<"TracerStudy"> | number
    f1765?: IntFilter<"TracerStudy"> | number
    f1766?: IntFilter<"TracerStudy"> | number
    f1767?: IntFilter<"TracerStudy"> | number
    f1768?: IntFilter<"TracerStudy"> | number
    f1769?: IntFilter<"TracerStudy"> | number
    f1770?: IntFilter<"TracerStudy"> | number
    f1771?: IntFilter<"TracerStudy"> | number
    f1772?: IntFilter<"TracerStudy"> | number
    f1773?: IntFilter<"TracerStudy"> | number
    f1774?: IntFilter<"TracerStudy"> | number
    f21?: IntNullableFilter<"TracerStudy"> | number | null
    f22?: IntNullableFilter<"TracerStudy"> | number | null
    f23?: IntNullableFilter<"TracerStudy"> | number | null
    f24?: IntNullableFilter<"TracerStudy"> | number | null
    f25?: IntNullableFilter<"TracerStudy"> | number | null
    f26?: IntNullableFilter<"TracerStudy"> | number | null
    f27?: IntNullableFilter<"TracerStudy"> | number | null
    f301?: IntNullableFilter<"TracerStudy"> | number | null
    f302?: IntNullableFilter<"TracerStudy"> | number | null
    f303?: IntNullableFilter<"TracerStudy"> | number | null
    f401?: IntNullableFilter<"TracerStudy"> | number | null
    f402?: IntNullableFilter<"TracerStudy"> | number | null
    f403?: IntNullableFilter<"TracerStudy"> | number | null
    f404?: IntNullableFilter<"TracerStudy"> | number | null
    f405?: IntNullableFilter<"TracerStudy"> | number | null
    f406?: IntNullableFilter<"TracerStudy"> | number | null
    f407?: IntNullableFilter<"TracerStudy"> | number | null
    f408?: IntNullableFilter<"TracerStudy"> | number | null
    f409?: IntNullableFilter<"TracerStudy"> | number | null
    f410?: IntNullableFilter<"TracerStudy"> | number | null
    f411?: IntNullableFilter<"TracerStudy"> | number | null
    f412?: IntNullableFilter<"TracerStudy"> | number | null
    f413?: IntNullableFilter<"TracerStudy"> | number | null
    f414?: IntNullableFilter<"TracerStudy"> | number | null
    f415?: IntNullableFilter<"TracerStudy"> | number | null
    f416?: StringNullableFilter<"TracerStudy"> | string | null
    f6?: IntNullableFilter<"TracerStudy"> | number | null
    f7?: IntNullableFilter<"TracerStudy"> | number | null
    f7a?: IntNullableFilter<"TracerStudy"> | number | null
    f1001?: IntNullableFilter<"TracerStudy"> | number | null
    f1002?: StringNullableFilter<"TracerStudy"> | string | null
    f1601?: IntNullableFilter<"TracerStudy"> | number | null
    f1602?: IntNullableFilter<"TracerStudy"> | number | null
    f1603?: IntNullableFilter<"TracerStudy"> | number | null
    f1604?: IntNullableFilter<"TracerStudy"> | number | null
    f1605?: IntNullableFilter<"TracerStudy"> | number | null
    f1606?: IntNullableFilter<"TracerStudy"> | number | null
    f1607?: IntNullableFilter<"TracerStudy"> | number | null
    f1608?: IntNullableFilter<"TracerStudy"> | number | null
    f1609?: IntNullableFilter<"TracerStudy"> | number | null
    f1610?: IntNullableFilter<"TracerStudy"> | number | null
    f1611?: IntNullableFilter<"TracerStudy"> | number | null
    f1612?: IntNullableFilter<"TracerStudy"> | number | null
    f1613?: IntNullableFilter<"TracerStudy"> | number | null
    f1614?: StringNullableFilter<"TracerStudy"> | string | null
    createdAt?: DateTimeFilter<"TracerStudy"> | Date | string
    updatedAt?: DateTimeFilter<"TracerStudy"> | Date | string
    profile?: XOR<ProfileRelationFilter, ProfileWhereInput>
  }

  export type TracerStudyOrderByWithRelationInput = {
    id?: SortOrder
    profile_id?: SortOrder
    nimhsmsmh?: SortOrderInput | SortOrder
    tahun_lulus?: SortOrderInput | SortOrder
    nmmhsmsmh?: SortOrderInput | SortOrder
    emailmsmh?: SortOrderInput | SortOrder
    kdptimsmh?: SortOrderInput | SortOrder
    kdpstmsmh?: SortOrderInput | SortOrder
    telpomsmh?: SortOrderInput | SortOrder
    nik?: SortOrderInput | SortOrder
    npwp?: SortOrderInput | SortOrder
    f8?: SortOrder
    f502?: SortOrderInput | SortOrder
    f505?: SortOrderInput | SortOrder
    f5a1?: SortOrderInput | SortOrder
    f5a2?: SortOrderInput | SortOrder
    f1101?: SortOrderInput | SortOrder
    f1102?: SortOrderInput | SortOrder
    f5b?: SortOrderInput | SortOrder
    f5c?: SortOrderInput | SortOrder
    f5d?: SortOrderInput | SortOrder
    f18a?: SortOrderInput | SortOrder
    f18b?: SortOrderInput | SortOrder
    f18c?: SortOrderInput | SortOrder
    f18d?: SortOrderInput | SortOrder
    f1201?: SortOrder
    f1202?: SortOrderInput | SortOrder
    f14?: SortOrderInput | SortOrder
    f15?: SortOrderInput | SortOrder
    f1761?: SortOrder
    f1762?: SortOrder
    f1763?: SortOrder
    f1764?: SortOrder
    f1765?: SortOrder
    f1766?: SortOrder
    f1767?: SortOrder
    f1768?: SortOrder
    f1769?: SortOrder
    f1770?: SortOrder
    f1771?: SortOrder
    f1772?: SortOrder
    f1773?: SortOrder
    f1774?: SortOrder
    f21?: SortOrderInput | SortOrder
    f22?: SortOrderInput | SortOrder
    f23?: SortOrderInput | SortOrder
    f24?: SortOrderInput | SortOrder
    f25?: SortOrderInput | SortOrder
    f26?: SortOrderInput | SortOrder
    f27?: SortOrderInput | SortOrder
    f301?: SortOrderInput | SortOrder
    f302?: SortOrderInput | SortOrder
    f303?: SortOrderInput | SortOrder
    f401?: SortOrderInput | SortOrder
    f402?: SortOrderInput | SortOrder
    f403?: SortOrderInput | SortOrder
    f404?: SortOrderInput | SortOrder
    f405?: SortOrderInput | SortOrder
    f406?: SortOrderInput | SortOrder
    f407?: SortOrderInput | SortOrder
    f408?: SortOrderInput | SortOrder
    f409?: SortOrderInput | SortOrder
    f410?: SortOrderInput | SortOrder
    f411?: SortOrderInput | SortOrder
    f412?: SortOrderInput | SortOrder
    f413?: SortOrderInput | SortOrder
    f414?: SortOrderInput | SortOrder
    f415?: SortOrderInput | SortOrder
    f416?: SortOrderInput | SortOrder
    f6?: SortOrderInput | SortOrder
    f7?: SortOrderInput | SortOrder
    f7a?: SortOrderInput | SortOrder
    f1001?: SortOrderInput | SortOrder
    f1002?: SortOrderInput | SortOrder
    f1601?: SortOrderInput | SortOrder
    f1602?: SortOrderInput | SortOrder
    f1603?: SortOrderInput | SortOrder
    f1604?: SortOrderInput | SortOrder
    f1605?: SortOrderInput | SortOrder
    f1606?: SortOrderInput | SortOrder
    f1607?: SortOrderInput | SortOrder
    f1608?: SortOrderInput | SortOrder
    f1609?: SortOrderInput | SortOrder
    f1610?: SortOrderInput | SortOrder
    f1611?: SortOrderInput | SortOrder
    f1612?: SortOrderInput | SortOrder
    f1613?: SortOrderInput | SortOrder
    f1614?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    profile?: ProfileOrderByWithRelationInput
  }

  export type TracerStudyWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    profile_id?: string
    AND?: TracerStudyWhereInput | TracerStudyWhereInput[]
    OR?: TracerStudyWhereInput[]
    NOT?: TracerStudyWhereInput | TracerStudyWhereInput[]
    nimhsmsmh?: StringNullableFilter<"TracerStudy"> | string | null
    tahun_lulus?: StringNullableFilter<"TracerStudy"> | string | null
    nmmhsmsmh?: StringNullableFilter<"TracerStudy"> | string | null
    emailmsmh?: StringNullableFilter<"TracerStudy"> | string | null
    kdptimsmh?: StringNullableFilter<"TracerStudy"> | string | null
    kdpstmsmh?: StringNullableFilter<"TracerStudy"> | string | null
    telpomsmh?: StringNullableFilter<"TracerStudy"> | string | null
    nik?: StringNullableFilter<"TracerStudy"> | string | null
    npwp?: StringNullableFilter<"TracerStudy"> | string | null
    f8?: IntFilter<"TracerStudy"> | number
    f502?: IntNullableFilter<"TracerStudy"> | number | null
    f505?: IntNullableFilter<"TracerStudy"> | number | null
    f5a1?: StringNullableFilter<"TracerStudy"> | string | null
    f5a2?: StringNullableFilter<"TracerStudy"> | string | null
    f1101?: IntNullableFilter<"TracerStudy"> | number | null
    f1102?: StringNullableFilter<"TracerStudy"> | string | null
    f5b?: StringNullableFilter<"TracerStudy"> | string | null
    f5c?: StringNullableFilter<"TracerStudy"> | string | null
    f5d?: IntNullableFilter<"TracerStudy"> | number | null
    f18a?: StringNullableFilter<"TracerStudy"> | string | null
    f18b?: StringNullableFilter<"TracerStudy"> | string | null
    f18c?: StringNullableFilter<"TracerStudy"> | string | null
    f18d?: DateTimeNullableFilter<"TracerStudy"> | Date | string | null
    f1201?: IntFilter<"TracerStudy"> | number
    f1202?: StringNullableFilter<"TracerStudy"> | string | null
    f14?: IntNullableFilter<"TracerStudy"> | number | null
    f15?: IntNullableFilter<"TracerStudy"> | number | null
    f1761?: IntFilter<"TracerStudy"> | number
    f1762?: IntFilter<"TracerStudy"> | number
    f1763?: IntFilter<"TracerStudy"> | number
    f1764?: IntFilter<"TracerStudy"> | number
    f1765?: IntFilter<"TracerStudy"> | number
    f1766?: IntFilter<"TracerStudy"> | number
    f1767?: IntFilter<"TracerStudy"> | number
    f1768?: IntFilter<"TracerStudy"> | number
    f1769?: IntFilter<"TracerStudy"> | number
    f1770?: IntFilter<"TracerStudy"> | number
    f1771?: IntFilter<"TracerStudy"> | number
    f1772?: IntFilter<"TracerStudy"> | number
    f1773?: IntFilter<"TracerStudy"> | number
    f1774?: IntFilter<"TracerStudy"> | number
    f21?: IntNullableFilter<"TracerStudy"> | number | null
    f22?: IntNullableFilter<"TracerStudy"> | number | null
    f23?: IntNullableFilter<"TracerStudy"> | number | null
    f24?: IntNullableFilter<"TracerStudy"> | number | null
    f25?: IntNullableFilter<"TracerStudy"> | number | null
    f26?: IntNullableFilter<"TracerStudy"> | number | null
    f27?: IntNullableFilter<"TracerStudy"> | number | null
    f301?: IntNullableFilter<"TracerStudy"> | number | null
    f302?: IntNullableFilter<"TracerStudy"> | number | null
    f303?: IntNullableFilter<"TracerStudy"> | number | null
    f401?: IntNullableFilter<"TracerStudy"> | number | null
    f402?: IntNullableFilter<"TracerStudy"> | number | null
    f403?: IntNullableFilter<"TracerStudy"> | number | null
    f404?: IntNullableFilter<"TracerStudy"> | number | null
    f405?: IntNullableFilter<"TracerStudy"> | number | null
    f406?: IntNullableFilter<"TracerStudy"> | number | null
    f407?: IntNullableFilter<"TracerStudy"> | number | null
    f408?: IntNullableFilter<"TracerStudy"> | number | null
    f409?: IntNullableFilter<"TracerStudy"> | number | null
    f410?: IntNullableFilter<"TracerStudy"> | number | null
    f411?: IntNullableFilter<"TracerStudy"> | number | null
    f412?: IntNullableFilter<"TracerStudy"> | number | null
    f413?: IntNullableFilter<"TracerStudy"> | number | null
    f414?: IntNullableFilter<"TracerStudy"> | number | null
    f415?: IntNullableFilter<"TracerStudy"> | number | null
    f416?: StringNullableFilter<"TracerStudy"> | string | null
    f6?: IntNullableFilter<"TracerStudy"> | number | null
    f7?: IntNullableFilter<"TracerStudy"> | number | null
    f7a?: IntNullableFilter<"TracerStudy"> | number | null
    f1001?: IntNullableFilter<"TracerStudy"> | number | null
    f1002?: StringNullableFilter<"TracerStudy"> | string | null
    f1601?: IntNullableFilter<"TracerStudy"> | number | null
    f1602?: IntNullableFilter<"TracerStudy"> | number | null
    f1603?: IntNullableFilter<"TracerStudy"> | number | null
    f1604?: IntNullableFilter<"TracerStudy"> | number | null
    f1605?: IntNullableFilter<"TracerStudy"> | number | null
    f1606?: IntNullableFilter<"TracerStudy"> | number | null
    f1607?: IntNullableFilter<"TracerStudy"> | number | null
    f1608?: IntNullableFilter<"TracerStudy"> | number | null
    f1609?: IntNullableFilter<"TracerStudy"> | number | null
    f1610?: IntNullableFilter<"TracerStudy"> | number | null
    f1611?: IntNullableFilter<"TracerStudy"> | number | null
    f1612?: IntNullableFilter<"TracerStudy"> | number | null
    f1613?: IntNullableFilter<"TracerStudy"> | number | null
    f1614?: StringNullableFilter<"TracerStudy"> | string | null
    createdAt?: DateTimeFilter<"TracerStudy"> | Date | string
    updatedAt?: DateTimeFilter<"TracerStudy"> | Date | string
    profile?: XOR<ProfileRelationFilter, ProfileWhereInput>
  }, "id" | "profile_id">

  export type TracerStudyOrderByWithAggregationInput = {
    id?: SortOrder
    profile_id?: SortOrder
    nimhsmsmh?: SortOrderInput | SortOrder
    tahun_lulus?: SortOrderInput | SortOrder
    nmmhsmsmh?: SortOrderInput | SortOrder
    emailmsmh?: SortOrderInput | SortOrder
    kdptimsmh?: SortOrderInput | SortOrder
    kdpstmsmh?: SortOrderInput | SortOrder
    telpomsmh?: SortOrderInput | SortOrder
    nik?: SortOrderInput | SortOrder
    npwp?: SortOrderInput | SortOrder
    f8?: SortOrder
    f502?: SortOrderInput | SortOrder
    f505?: SortOrderInput | SortOrder
    f5a1?: SortOrderInput | SortOrder
    f5a2?: SortOrderInput | SortOrder
    f1101?: SortOrderInput | SortOrder
    f1102?: SortOrderInput | SortOrder
    f5b?: SortOrderInput | SortOrder
    f5c?: SortOrderInput | SortOrder
    f5d?: SortOrderInput | SortOrder
    f18a?: SortOrderInput | SortOrder
    f18b?: SortOrderInput | SortOrder
    f18c?: SortOrderInput | SortOrder
    f18d?: SortOrderInput | SortOrder
    f1201?: SortOrder
    f1202?: SortOrderInput | SortOrder
    f14?: SortOrderInput | SortOrder
    f15?: SortOrderInput | SortOrder
    f1761?: SortOrder
    f1762?: SortOrder
    f1763?: SortOrder
    f1764?: SortOrder
    f1765?: SortOrder
    f1766?: SortOrder
    f1767?: SortOrder
    f1768?: SortOrder
    f1769?: SortOrder
    f1770?: SortOrder
    f1771?: SortOrder
    f1772?: SortOrder
    f1773?: SortOrder
    f1774?: SortOrder
    f21?: SortOrderInput | SortOrder
    f22?: SortOrderInput | SortOrder
    f23?: SortOrderInput | SortOrder
    f24?: SortOrderInput | SortOrder
    f25?: SortOrderInput | SortOrder
    f26?: SortOrderInput | SortOrder
    f27?: SortOrderInput | SortOrder
    f301?: SortOrderInput | SortOrder
    f302?: SortOrderInput | SortOrder
    f303?: SortOrderInput | SortOrder
    f401?: SortOrderInput | SortOrder
    f402?: SortOrderInput | SortOrder
    f403?: SortOrderInput | SortOrder
    f404?: SortOrderInput | SortOrder
    f405?: SortOrderInput | SortOrder
    f406?: SortOrderInput | SortOrder
    f407?: SortOrderInput | SortOrder
    f408?: SortOrderInput | SortOrder
    f409?: SortOrderInput | SortOrder
    f410?: SortOrderInput | SortOrder
    f411?: SortOrderInput | SortOrder
    f412?: SortOrderInput | SortOrder
    f413?: SortOrderInput | SortOrder
    f414?: SortOrderInput | SortOrder
    f415?: SortOrderInput | SortOrder
    f416?: SortOrderInput | SortOrder
    f6?: SortOrderInput | SortOrder
    f7?: SortOrderInput | SortOrder
    f7a?: SortOrderInput | SortOrder
    f1001?: SortOrderInput | SortOrder
    f1002?: SortOrderInput | SortOrder
    f1601?: SortOrderInput | SortOrder
    f1602?: SortOrderInput | SortOrder
    f1603?: SortOrderInput | SortOrder
    f1604?: SortOrderInput | SortOrder
    f1605?: SortOrderInput | SortOrder
    f1606?: SortOrderInput | SortOrder
    f1607?: SortOrderInput | SortOrder
    f1608?: SortOrderInput | SortOrder
    f1609?: SortOrderInput | SortOrder
    f1610?: SortOrderInput | SortOrder
    f1611?: SortOrderInput | SortOrder
    f1612?: SortOrderInput | SortOrder
    f1613?: SortOrderInput | SortOrder
    f1614?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: TracerStudyCountOrderByAggregateInput
    _avg?: TracerStudyAvgOrderByAggregateInput
    _max?: TracerStudyMaxOrderByAggregateInput
    _min?: TracerStudyMinOrderByAggregateInput
    _sum?: TracerStudySumOrderByAggregateInput
  }

  export type TracerStudyScalarWhereWithAggregatesInput = {
    AND?: TracerStudyScalarWhereWithAggregatesInput | TracerStudyScalarWhereWithAggregatesInput[]
    OR?: TracerStudyScalarWhereWithAggregatesInput[]
    NOT?: TracerStudyScalarWhereWithAggregatesInput | TracerStudyScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"TracerStudy"> | string
    profile_id?: StringWithAggregatesFilter<"TracerStudy"> | string
    nimhsmsmh?: StringNullableWithAggregatesFilter<"TracerStudy"> | string | null
    tahun_lulus?: StringNullableWithAggregatesFilter<"TracerStudy"> | string | null
    nmmhsmsmh?: StringNullableWithAggregatesFilter<"TracerStudy"> | string | null
    emailmsmh?: StringNullableWithAggregatesFilter<"TracerStudy"> | string | null
    kdptimsmh?: StringNullableWithAggregatesFilter<"TracerStudy"> | string | null
    kdpstmsmh?: StringNullableWithAggregatesFilter<"TracerStudy"> | string | null
    telpomsmh?: StringNullableWithAggregatesFilter<"TracerStudy"> | string | null
    nik?: StringNullableWithAggregatesFilter<"TracerStudy"> | string | null
    npwp?: StringNullableWithAggregatesFilter<"TracerStudy"> | string | null
    f8?: IntWithAggregatesFilter<"TracerStudy"> | number
    f502?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f505?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f5a1?: StringNullableWithAggregatesFilter<"TracerStudy"> | string | null
    f5a2?: StringNullableWithAggregatesFilter<"TracerStudy"> | string | null
    f1101?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f1102?: StringNullableWithAggregatesFilter<"TracerStudy"> | string | null
    f5b?: StringNullableWithAggregatesFilter<"TracerStudy"> | string | null
    f5c?: StringNullableWithAggregatesFilter<"TracerStudy"> | string | null
    f5d?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f18a?: StringNullableWithAggregatesFilter<"TracerStudy"> | string | null
    f18b?: StringNullableWithAggregatesFilter<"TracerStudy"> | string | null
    f18c?: StringNullableWithAggregatesFilter<"TracerStudy"> | string | null
    f18d?: DateTimeNullableWithAggregatesFilter<"TracerStudy"> | Date | string | null
    f1201?: IntWithAggregatesFilter<"TracerStudy"> | number
    f1202?: StringNullableWithAggregatesFilter<"TracerStudy"> | string | null
    f14?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f15?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f1761?: IntWithAggregatesFilter<"TracerStudy"> | number
    f1762?: IntWithAggregatesFilter<"TracerStudy"> | number
    f1763?: IntWithAggregatesFilter<"TracerStudy"> | number
    f1764?: IntWithAggregatesFilter<"TracerStudy"> | number
    f1765?: IntWithAggregatesFilter<"TracerStudy"> | number
    f1766?: IntWithAggregatesFilter<"TracerStudy"> | number
    f1767?: IntWithAggregatesFilter<"TracerStudy"> | number
    f1768?: IntWithAggregatesFilter<"TracerStudy"> | number
    f1769?: IntWithAggregatesFilter<"TracerStudy"> | number
    f1770?: IntWithAggregatesFilter<"TracerStudy"> | number
    f1771?: IntWithAggregatesFilter<"TracerStudy"> | number
    f1772?: IntWithAggregatesFilter<"TracerStudy"> | number
    f1773?: IntWithAggregatesFilter<"TracerStudy"> | number
    f1774?: IntWithAggregatesFilter<"TracerStudy"> | number
    f21?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f22?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f23?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f24?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f25?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f26?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f27?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f301?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f302?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f303?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f401?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f402?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f403?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f404?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f405?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f406?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f407?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f408?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f409?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f410?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f411?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f412?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f413?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f414?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f415?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f416?: StringNullableWithAggregatesFilter<"TracerStudy"> | string | null
    f6?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f7?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f7a?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f1001?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f1002?: StringNullableWithAggregatesFilter<"TracerStudy"> | string | null
    f1601?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f1602?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f1603?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f1604?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f1605?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f1606?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f1607?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f1608?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f1609?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f1610?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f1611?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f1612?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f1613?: IntNullableWithAggregatesFilter<"TracerStudy"> | number | null
    f1614?: StringNullableWithAggregatesFilter<"TracerStudy"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"TracerStudy"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"TracerStudy"> | Date | string
  }

  export type CategoryWhereInput = {
    AND?: CategoryWhereInput | CategoryWhereInput[]
    OR?: CategoryWhereInput[]
    NOT?: CategoryWhereInput | CategoryWhereInput[]
    id?: IntFilter<"Category"> | number
    name?: StringFilter<"Category"> | string
    description?: StringNullableFilter<"Category"> | string | null
    createdAt?: DateTimeFilter<"Category"> | Date | string
    updatedAt?: DateTimeFilter<"Category"> | Date | string
    Product?: ProductListRelationFilter
  }

  export type CategoryOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    Product?: ProductOrderByRelationAggregateInput
  }

  export type CategoryWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    name?: string
    AND?: CategoryWhereInput | CategoryWhereInput[]
    OR?: CategoryWhereInput[]
    NOT?: CategoryWhereInput | CategoryWhereInput[]
    description?: StringNullableFilter<"Category"> | string | null
    createdAt?: DateTimeFilter<"Category"> | Date | string
    updatedAt?: DateTimeFilter<"Category"> | Date | string
    Product?: ProductListRelationFilter
  }, "id" | "name">

  export type CategoryOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CategoryCountOrderByAggregateInput
    _avg?: CategoryAvgOrderByAggregateInput
    _max?: CategoryMaxOrderByAggregateInput
    _min?: CategoryMinOrderByAggregateInput
    _sum?: CategorySumOrderByAggregateInput
  }

  export type CategoryScalarWhereWithAggregatesInput = {
    AND?: CategoryScalarWhereWithAggregatesInput | CategoryScalarWhereWithAggregatesInput[]
    OR?: CategoryScalarWhereWithAggregatesInput[]
    NOT?: CategoryScalarWhereWithAggregatesInput | CategoryScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Category"> | number
    name?: StringWithAggregatesFilter<"Category"> | string
    description?: StringNullableWithAggregatesFilter<"Category"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Category"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Category"> | Date | string
  }

  export type ProductWhereInput = {
    AND?: ProductWhereInput | ProductWhereInput[]
    OR?: ProductWhereInput[]
    NOT?: ProductWhereInput | ProductWhereInput[]
    id?: StringFilter<"Product"> | string
    name?: StringFilter<"Product"> | string
    description?: StringNullableFilter<"Product"> | string | null
    price?: IntFilter<"Product"> | number
    categoryId?: IntFilter<"Product"> | number
    image?: StringFilter<"Product"> | string
    stock?: IntFilter<"Product"> | number
    countReview?: IntFilter<"Product"> | number
    createdAt?: DateTimeFilter<"Product"> | Date | string
    updatedAt?: DateTimeFilter<"Product"> | Date | string
    category?: XOR<CategoryRelationFilter, CategoryWhereInput>
  }

  export type ProductOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    price?: SortOrder
    categoryId?: SortOrder
    image?: SortOrder
    stock?: SortOrder
    countReview?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    category?: CategoryOrderByWithRelationInput
  }

  export type ProductWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name?: string
    AND?: ProductWhereInput | ProductWhereInput[]
    OR?: ProductWhereInput[]
    NOT?: ProductWhereInput | ProductWhereInput[]
    description?: StringNullableFilter<"Product"> | string | null
    price?: IntFilter<"Product"> | number
    categoryId?: IntFilter<"Product"> | number
    image?: StringFilter<"Product"> | string
    stock?: IntFilter<"Product"> | number
    countReview?: IntFilter<"Product"> | number
    createdAt?: DateTimeFilter<"Product"> | Date | string
    updatedAt?: DateTimeFilter<"Product"> | Date | string
    category?: XOR<CategoryRelationFilter, CategoryWhereInput>
  }, "id" | "id" | "name">

  export type ProductOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    price?: SortOrder
    categoryId?: SortOrder
    image?: SortOrder
    stock?: SortOrder
    countReview?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ProductCountOrderByAggregateInput
    _avg?: ProductAvgOrderByAggregateInput
    _max?: ProductMaxOrderByAggregateInput
    _min?: ProductMinOrderByAggregateInput
    _sum?: ProductSumOrderByAggregateInput
  }

  export type ProductScalarWhereWithAggregatesInput = {
    AND?: ProductScalarWhereWithAggregatesInput | ProductScalarWhereWithAggregatesInput[]
    OR?: ProductScalarWhereWithAggregatesInput[]
    NOT?: ProductScalarWhereWithAggregatesInput | ProductScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Product"> | string
    name?: StringWithAggregatesFilter<"Product"> | string
    description?: StringNullableWithAggregatesFilter<"Product"> | string | null
    price?: IntWithAggregatesFilter<"Product"> | number
    categoryId?: IntWithAggregatesFilter<"Product"> | number
    image?: StringWithAggregatesFilter<"Product"> | string
    stock?: IntWithAggregatesFilter<"Product"> | number
    countReview?: IntWithAggregatesFilter<"Product"> | number
    createdAt?: DateTimeWithAggregatesFilter<"Product"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Product"> | Date | string
  }

  export type UserCreateInput = {
    id?: string
    username: string
    password: string
    profileId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    eventsAsUniversitas?: EventCreateNestedManyWithoutAdminUniversitasInput
    newsAsUniversitas?: NewsCreateNestedManyWithoutAdminUniversitasInput
    authoredEvents?: EventCreateNestedManyWithoutAuthorInput
    authoredNews?: NewsCreateNestedManyWithoutAuthorInput
    AlumniPrograms?: AlumniProgramCreateNestedManyWithoutAuthorInput
    prodiVerifications?: AlumniProgramCreateNestedManyWithoutAdminProdiInput
    universityVerifications?: AlumniProgramCreateNestedManyWithoutAdminUniversitasInput
    Profile?: ProfileCreateNestedOneWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    username: string
    password: string
    roleId: string
    profileId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    eventsAsUniversitas?: EventUncheckedCreateNestedManyWithoutAdminUniversitasInput
    newsAsUniversitas?: NewsUncheckedCreateNestedManyWithoutAdminUniversitasInput
    authoredEvents?: EventUncheckedCreateNestedManyWithoutAuthorInput
    authoredNews?: NewsUncheckedCreateNestedManyWithoutAuthorInput
    AlumniPrograms?: AlumniProgramUncheckedCreateNestedManyWithoutAuthorInput
    prodiVerifications?: AlumniProgramUncheckedCreateNestedManyWithoutAdminProdiInput
    universityVerifications?: AlumniProgramUncheckedCreateNestedManyWithoutAdminUniversitasInput
    Profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    profileId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    eventsAsUniversitas?: EventUpdateManyWithoutAdminUniversitasNestedInput
    newsAsUniversitas?: NewsUpdateManyWithoutAdminUniversitasNestedInput
    authoredEvents?: EventUpdateManyWithoutAuthorNestedInput
    authoredNews?: NewsUpdateManyWithoutAuthorNestedInput
    AlumniPrograms?: AlumniProgramUpdateManyWithoutAuthorNestedInput
    prodiVerifications?: AlumniProgramUpdateManyWithoutAdminProdiNestedInput
    universityVerifications?: AlumniProgramUpdateManyWithoutAdminUniversitasNestedInput
    Profile?: ProfileUpdateOneWithoutUserNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    roleId?: StringFieldUpdateOperationsInput | string
    profileId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    eventsAsUniversitas?: EventUncheckedUpdateManyWithoutAdminUniversitasNestedInput
    newsAsUniversitas?: NewsUncheckedUpdateManyWithoutAdminUniversitasNestedInput
    authoredEvents?: EventUncheckedUpdateManyWithoutAuthorNestedInput
    authoredNews?: NewsUncheckedUpdateManyWithoutAuthorNestedInput
    AlumniPrograms?: AlumniProgramUncheckedUpdateManyWithoutAuthorNestedInput
    prodiVerifications?: AlumniProgramUncheckedUpdateManyWithoutAdminProdiNestedInput
    universityVerifications?: AlumniProgramUncheckedUpdateManyWithoutAdminUniversitasNestedInput
    Profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    username: string
    password: string
    roleId: string
    profileId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    profileId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    roleId?: StringFieldUpdateOperationsInput | string
    profileId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RoleCreateInput = {
    id?: string
    name: string
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutRoleInput
  }

  export type RoleUncheckedCreateInput = {
    id?: string
    name: string
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutRoleInput
  }

  export type RoleUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutRoleNestedInput
  }

  export type RoleUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type RoleCreateManyInput = {
    id?: string
    name: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RoleUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RoleUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProfileCreateInput = {
    id?: string
    image: string
    full_name: string
    student_identification_number: string
    year_graduated?: Date | string | null
    work?: string | null
    skills?: string | null
    entrepreneur?: string | null
    competencies?: string | null
    career?: string | null
    company?: string | null
    linkedin?: string | null
    is_alumni_leader?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutProfileInput
    studyProgram: StudyProgramCreateNestedOneWithoutProfilesInput
    sensitive_student_data?: SensitiveStudentDataCreateNestedOneWithoutProfileInput
    tracer_study?: TracerStudyCreateNestedOneWithoutProfileInput
  }

  export type ProfileUncheckedCreateInput = {
    id?: string
    user_id: string
    image: string
    full_name: string
    student_identification_number: string
    study_program_id: string
    year_graduated?: Date | string | null
    work?: string | null
    skills?: string | null
    entrepreneur?: string | null
    competencies?: string | null
    career?: string | null
    company?: string | null
    linkedin?: string | null
    is_alumni_leader?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    sensitive_student_data?: SensitiveStudentDataUncheckedCreateNestedOneWithoutProfileInput
    tracer_study?: TracerStudyUncheckedCreateNestedOneWithoutProfileInput
  }

  export type ProfileUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    full_name?: StringFieldUpdateOperationsInput | string
    student_identification_number?: StringFieldUpdateOperationsInput | string
    year_graduated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    work?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    entrepreneur?: NullableStringFieldUpdateOperationsInput | string | null
    competencies?: NullableStringFieldUpdateOperationsInput | string | null
    career?: NullableStringFieldUpdateOperationsInput | string | null
    company?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    is_alumni_leader?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutProfileNestedInput
    studyProgram?: StudyProgramUpdateOneRequiredWithoutProfilesNestedInput
    sensitive_student_data?: SensitiveStudentDataUpdateOneWithoutProfileNestedInput
    tracer_study?: TracerStudyUpdateOneWithoutProfileNestedInput
  }

  export type ProfileUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    full_name?: StringFieldUpdateOperationsInput | string
    student_identification_number?: StringFieldUpdateOperationsInput | string
    study_program_id?: StringFieldUpdateOperationsInput | string
    year_graduated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    work?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    entrepreneur?: NullableStringFieldUpdateOperationsInput | string | null
    competencies?: NullableStringFieldUpdateOperationsInput | string | null
    career?: NullableStringFieldUpdateOperationsInput | string | null
    company?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    is_alumni_leader?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sensitive_student_data?: SensitiveStudentDataUncheckedUpdateOneWithoutProfileNestedInput
    tracer_study?: TracerStudyUncheckedUpdateOneWithoutProfileNestedInput
  }

  export type ProfileCreateManyInput = {
    id?: string
    user_id: string
    image: string
    full_name: string
    student_identification_number: string
    study_program_id: string
    year_graduated?: Date | string | null
    work?: string | null
    skills?: string | null
    entrepreneur?: string | null
    competencies?: string | null
    career?: string | null
    company?: string | null
    linkedin?: string | null
    is_alumni_leader?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProfileUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    full_name?: StringFieldUpdateOperationsInput | string
    student_identification_number?: StringFieldUpdateOperationsInput | string
    year_graduated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    work?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    entrepreneur?: NullableStringFieldUpdateOperationsInput | string | null
    competencies?: NullableStringFieldUpdateOperationsInput | string | null
    career?: NullableStringFieldUpdateOperationsInput | string | null
    company?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    is_alumni_leader?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProfileUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    full_name?: StringFieldUpdateOperationsInput | string
    student_identification_number?: StringFieldUpdateOperationsInput | string
    study_program_id?: StringFieldUpdateOperationsInput | string
    year_graduated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    work?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    entrepreneur?: NullableStringFieldUpdateOperationsInput | string | null
    competencies?: NullableStringFieldUpdateOperationsInput | string | null
    career?: NullableStringFieldUpdateOperationsInput | string | null
    company?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    is_alumni_leader?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StudyProgramCreateInput = {
    id?: string
    name: string
    code: string
    level: string
    createdAt?: Date | string
    updatedAt?: Date | string
    profiles?: ProfileCreateNestedManyWithoutStudyProgramInput
  }

  export type StudyProgramUncheckedCreateInput = {
    id?: string
    name: string
    code: string
    level: string
    createdAt?: Date | string
    updatedAt?: Date | string
    profiles?: ProfileUncheckedCreateNestedManyWithoutStudyProgramInput
  }

  export type StudyProgramUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    level?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    profiles?: ProfileUpdateManyWithoutStudyProgramNestedInput
  }

  export type StudyProgramUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    level?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    profiles?: ProfileUncheckedUpdateManyWithoutStudyProgramNestedInput
  }

  export type StudyProgramCreateManyInput = {
    id?: string
    name: string
    code: string
    level: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type StudyProgramUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    level?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StudyProgramUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    level?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SensitiveStudentDataCreateInput = {
    id?: string
    pt_code?: string
    place_of_birth: string
    date_of_birth: Date | string
    national_identity_number: string
    full_address: string
    email: string
    phone_number: string
    mobile_number: string
    total_credits: number
    graduation_date: Date | string
    yudisium_date: Date | string
    gpa: number
    gender: string
    profile: ProfileCreateNestedOneWithoutSensitive_student_dataInput
  }

  export type SensitiveStudentDataUncheckedCreateInput = {
    id?: string
    profile_id: string
    pt_code?: string
    place_of_birth: string
    date_of_birth: Date | string
    national_identity_number: string
    full_address: string
    email: string
    phone_number: string
    mobile_number: string
    total_credits: number
    graduation_date: Date | string
    yudisium_date: Date | string
    gpa: number
    gender: string
  }

  export type SensitiveStudentDataUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    pt_code?: StringFieldUpdateOperationsInput | string
    place_of_birth?: StringFieldUpdateOperationsInput | string
    date_of_birth?: DateTimeFieldUpdateOperationsInput | Date | string
    national_identity_number?: StringFieldUpdateOperationsInput | string
    full_address?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone_number?: StringFieldUpdateOperationsInput | string
    mobile_number?: StringFieldUpdateOperationsInput | string
    total_credits?: IntFieldUpdateOperationsInput | number
    graduation_date?: DateTimeFieldUpdateOperationsInput | Date | string
    yudisium_date?: DateTimeFieldUpdateOperationsInput | Date | string
    gpa?: FloatFieldUpdateOperationsInput | number
    gender?: StringFieldUpdateOperationsInput | string
    profile?: ProfileUpdateOneRequiredWithoutSensitive_student_dataNestedInput
  }

  export type SensitiveStudentDataUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    profile_id?: StringFieldUpdateOperationsInput | string
    pt_code?: StringFieldUpdateOperationsInput | string
    place_of_birth?: StringFieldUpdateOperationsInput | string
    date_of_birth?: DateTimeFieldUpdateOperationsInput | Date | string
    national_identity_number?: StringFieldUpdateOperationsInput | string
    full_address?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone_number?: StringFieldUpdateOperationsInput | string
    mobile_number?: StringFieldUpdateOperationsInput | string
    total_credits?: IntFieldUpdateOperationsInput | number
    graduation_date?: DateTimeFieldUpdateOperationsInput | Date | string
    yudisium_date?: DateTimeFieldUpdateOperationsInput | Date | string
    gpa?: FloatFieldUpdateOperationsInput | number
    gender?: StringFieldUpdateOperationsInput | string
  }

  export type SensitiveStudentDataCreateManyInput = {
    id?: string
    profile_id: string
    pt_code?: string
    place_of_birth: string
    date_of_birth: Date | string
    national_identity_number: string
    full_address: string
    email: string
    phone_number: string
    mobile_number: string
    total_credits: number
    graduation_date: Date | string
    yudisium_date: Date | string
    gpa: number
    gender: string
  }

  export type SensitiveStudentDataUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    pt_code?: StringFieldUpdateOperationsInput | string
    place_of_birth?: StringFieldUpdateOperationsInput | string
    date_of_birth?: DateTimeFieldUpdateOperationsInput | Date | string
    national_identity_number?: StringFieldUpdateOperationsInput | string
    full_address?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone_number?: StringFieldUpdateOperationsInput | string
    mobile_number?: StringFieldUpdateOperationsInput | string
    total_credits?: IntFieldUpdateOperationsInput | number
    graduation_date?: DateTimeFieldUpdateOperationsInput | Date | string
    yudisium_date?: DateTimeFieldUpdateOperationsInput | Date | string
    gpa?: FloatFieldUpdateOperationsInput | number
    gender?: StringFieldUpdateOperationsInput | string
  }

  export type SensitiveStudentDataUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    profile_id?: StringFieldUpdateOperationsInput | string
    pt_code?: StringFieldUpdateOperationsInput | string
    place_of_birth?: StringFieldUpdateOperationsInput | string
    date_of_birth?: DateTimeFieldUpdateOperationsInput | Date | string
    national_identity_number?: StringFieldUpdateOperationsInput | string
    full_address?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone_number?: StringFieldUpdateOperationsInput | string
    mobile_number?: StringFieldUpdateOperationsInput | string
    total_credits?: IntFieldUpdateOperationsInput | number
    graduation_date?: DateTimeFieldUpdateOperationsInput | Date | string
    yudisium_date?: DateTimeFieldUpdateOperationsInput | Date | string
    gpa?: FloatFieldUpdateOperationsInput | number
    gender?: StringFieldUpdateOperationsInput | string
  }

  export type NewsCreateInput = {
    id?: string
    title: string
    content: string
    image: string
    createdAt?: Date | string
    updatedAt?: Date | string
    NewsStatus?: $Enums.NewsStatus
    rejectionReason?: string | null
    isActive?: boolean
    author: UserCreateNestedOneWithoutAuthoredNewsInput
    adminUniversitas?: UserCreateNestedOneWithoutNewsAsUniversitasInput
  }

  export type NewsUncheckedCreateInput = {
    id?: string
    title: string
    content: string
    image: string
    createdAt?: Date | string
    updatedAt?: Date | string
    NewsStatus?: $Enums.NewsStatus
    rejectionReason?: string | null
    authorId: string
    adminUniversitasId?: string | null
    isActive?: boolean
  }

  export type NewsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    NewsStatus?: EnumNewsStatusFieldUpdateOperationsInput | $Enums.NewsStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    author?: UserUpdateOneRequiredWithoutAuthoredNewsNestedInput
    adminUniversitas?: UserUpdateOneWithoutNewsAsUniversitasNestedInput
  }

  export type NewsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    NewsStatus?: EnumNewsStatusFieldUpdateOperationsInput | $Enums.NewsStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    authorId?: StringFieldUpdateOperationsInput | string
    adminUniversitasId?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type NewsCreateManyInput = {
    id?: string
    title: string
    content: string
    image: string
    createdAt?: Date | string
    updatedAt?: Date | string
    NewsStatus?: $Enums.NewsStatus
    rejectionReason?: string | null
    authorId: string
    adminUniversitasId?: string | null
    isActive?: boolean
  }

  export type NewsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    NewsStatus?: EnumNewsStatusFieldUpdateOperationsInput | $Enums.NewsStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type NewsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    NewsStatus?: EnumNewsStatusFieldUpdateOperationsInput | $Enums.NewsStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    authorId?: StringFieldUpdateOperationsInput | string
    adminUniversitasId?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type EventCreateInput = {
    id?: string
    title: string
    date: Date | string
    description?: string | null
    image: string
    createdAt?: Date | string
    updatedAt?: Date | string
    EventStatus?: $Enums.EventStatus
    rejectionReason?: string | null
    isActive?: boolean
    author: UserCreateNestedOneWithoutAuthoredEventsInput
    adminUniversitas?: UserCreateNestedOneWithoutEventsAsUniversitasInput
  }

  export type EventUncheckedCreateInput = {
    id?: string
    title: string
    date: Date | string
    description?: string | null
    image: string
    createdAt?: Date | string
    updatedAt?: Date | string
    EventStatus?: $Enums.EventStatus
    rejectionReason?: string | null
    authorId: string
    adminUniversitasId?: string | null
    isActive?: boolean
  }

  export type EventUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    EventStatus?: EnumEventStatusFieldUpdateOperationsInput | $Enums.EventStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    author?: UserUpdateOneRequiredWithoutAuthoredEventsNestedInput
    adminUniversitas?: UserUpdateOneWithoutEventsAsUniversitasNestedInput
  }

  export type EventUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    EventStatus?: EnumEventStatusFieldUpdateOperationsInput | $Enums.EventStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    authorId?: StringFieldUpdateOperationsInput | string
    adminUniversitasId?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type EventCreateManyInput = {
    id?: string
    title: string
    date: Date | string
    description?: string | null
    image: string
    createdAt?: Date | string
    updatedAt?: Date | string
    EventStatus?: $Enums.EventStatus
    rejectionReason?: string | null
    authorId: string
    adminUniversitasId?: string | null
    isActive?: boolean
  }

  export type EventUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    EventStatus?: EnumEventStatusFieldUpdateOperationsInput | $Enums.EventStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type EventUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    EventStatus?: EnumEventStatusFieldUpdateOperationsInput | $Enums.EventStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    authorId?: StringFieldUpdateOperationsInput | string
    adminUniversitasId?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type AlumniProgramCreateInput = {
    id?: string
    title: string
    description: string
    image?: string | null
    category: $Enums.ProgramType
    AlumniProgramStatus?: $Enums.AlumniProgramStatus
    rejectionReason?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isActive?: boolean
    author: UserCreateNestedOneWithoutAlumniProgramsInput
    adminProdi?: UserCreateNestedOneWithoutProdiVerificationsInput
    adminUniversitas?: UserCreateNestedOneWithoutUniversityVerificationsInput
  }

  export type AlumniProgramUncheckedCreateInput = {
    id?: string
    title: string
    description: string
    image?: string | null
    category: $Enums.ProgramType
    AlumniProgramStatus?: $Enums.AlumniProgramStatus
    rejectionReason?: string | null
    authorId: string
    adminProdiId?: string | null
    adminUniversitasId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isActive?: boolean
  }

  export type AlumniProgramUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumProgramTypeFieldUpdateOperationsInput | $Enums.ProgramType
    AlumniProgramStatus?: EnumAlumniProgramStatusFieldUpdateOperationsInput | $Enums.AlumniProgramStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    author?: UserUpdateOneRequiredWithoutAlumniProgramsNestedInput
    adminProdi?: UserUpdateOneWithoutProdiVerificationsNestedInput
    adminUniversitas?: UserUpdateOneWithoutUniversityVerificationsNestedInput
  }

  export type AlumniProgramUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumProgramTypeFieldUpdateOperationsInput | $Enums.ProgramType
    AlumniProgramStatus?: EnumAlumniProgramStatusFieldUpdateOperationsInput | $Enums.AlumniProgramStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    authorId?: StringFieldUpdateOperationsInput | string
    adminProdiId?: NullableStringFieldUpdateOperationsInput | string | null
    adminUniversitasId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type AlumniProgramCreateManyInput = {
    id?: string
    title: string
    description: string
    image?: string | null
    category: $Enums.ProgramType
    AlumniProgramStatus?: $Enums.AlumniProgramStatus
    rejectionReason?: string | null
    authorId: string
    adminProdiId?: string | null
    adminUniversitasId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isActive?: boolean
  }

  export type AlumniProgramUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumProgramTypeFieldUpdateOperationsInput | $Enums.ProgramType
    AlumniProgramStatus?: EnumAlumniProgramStatusFieldUpdateOperationsInput | $Enums.AlumniProgramStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type AlumniProgramUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumProgramTypeFieldUpdateOperationsInput | $Enums.ProgramType
    AlumniProgramStatus?: EnumAlumniProgramStatusFieldUpdateOperationsInput | $Enums.AlumniProgramStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    authorId?: StringFieldUpdateOperationsInput | string
    adminProdiId?: NullableStringFieldUpdateOperationsInput | string | null
    adminUniversitasId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type TracerStudyCreateInput = {
    id?: string
    nimhsmsmh?: string | null
    tahun_lulus?: string | null
    nmmhsmsmh?: string | null
    emailmsmh?: string | null
    kdptimsmh?: string | null
    kdpstmsmh?: string | null
    telpomsmh?: string | null
    nik?: string | null
    npwp?: string | null
    f8: number
    f502?: number | null
    f505?: number | null
    f5a1?: string | null
    f5a2?: string | null
    f1101?: number | null
    f1102?: string | null
    f5b?: string | null
    f5c?: string | null
    f5d?: number | null
    f18a?: string | null
    f18b?: string | null
    f18c?: string | null
    f18d?: Date | string | null
    f1201: number
    f1202?: string | null
    f14?: number | null
    f15?: number | null
    f1761: number
    f1762: number
    f1763: number
    f1764: number
    f1765: number
    f1766: number
    f1767: number
    f1768: number
    f1769: number
    f1770: number
    f1771: number
    f1772: number
    f1773: number
    f1774: number
    f21?: number | null
    f22?: number | null
    f23?: number | null
    f24?: number | null
    f25?: number | null
    f26?: number | null
    f27?: number | null
    f301?: number | null
    f302?: number | null
    f303?: number | null
    f401?: number | null
    f402?: number | null
    f403?: number | null
    f404?: number | null
    f405?: number | null
    f406?: number | null
    f407?: number | null
    f408?: number | null
    f409?: number | null
    f410?: number | null
    f411?: number | null
    f412?: number | null
    f413?: number | null
    f414?: number | null
    f415?: number | null
    f416?: string | null
    f6?: number | null
    f7?: number | null
    f7a?: number | null
    f1001?: number | null
    f1002?: string | null
    f1601?: number | null
    f1602?: number | null
    f1603?: number | null
    f1604?: number | null
    f1605?: number | null
    f1606?: number | null
    f1607?: number | null
    f1608?: number | null
    f1609?: number | null
    f1610?: number | null
    f1611?: number | null
    f1612?: number | null
    f1613?: number | null
    f1614?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    profile: ProfileCreateNestedOneWithoutTracer_studyInput
  }

  export type TracerStudyUncheckedCreateInput = {
    id?: string
    profile_id: string
    nimhsmsmh?: string | null
    tahun_lulus?: string | null
    nmmhsmsmh?: string | null
    emailmsmh?: string | null
    kdptimsmh?: string | null
    kdpstmsmh?: string | null
    telpomsmh?: string | null
    nik?: string | null
    npwp?: string | null
    f8: number
    f502?: number | null
    f505?: number | null
    f5a1?: string | null
    f5a2?: string | null
    f1101?: number | null
    f1102?: string | null
    f5b?: string | null
    f5c?: string | null
    f5d?: number | null
    f18a?: string | null
    f18b?: string | null
    f18c?: string | null
    f18d?: Date | string | null
    f1201: number
    f1202?: string | null
    f14?: number | null
    f15?: number | null
    f1761: number
    f1762: number
    f1763: number
    f1764: number
    f1765: number
    f1766: number
    f1767: number
    f1768: number
    f1769: number
    f1770: number
    f1771: number
    f1772: number
    f1773: number
    f1774: number
    f21?: number | null
    f22?: number | null
    f23?: number | null
    f24?: number | null
    f25?: number | null
    f26?: number | null
    f27?: number | null
    f301?: number | null
    f302?: number | null
    f303?: number | null
    f401?: number | null
    f402?: number | null
    f403?: number | null
    f404?: number | null
    f405?: number | null
    f406?: number | null
    f407?: number | null
    f408?: number | null
    f409?: number | null
    f410?: number | null
    f411?: number | null
    f412?: number | null
    f413?: number | null
    f414?: number | null
    f415?: number | null
    f416?: string | null
    f6?: number | null
    f7?: number | null
    f7a?: number | null
    f1001?: number | null
    f1002?: string | null
    f1601?: number | null
    f1602?: number | null
    f1603?: number | null
    f1604?: number | null
    f1605?: number | null
    f1606?: number | null
    f1607?: number | null
    f1608?: number | null
    f1609?: number | null
    f1610?: number | null
    f1611?: number | null
    f1612?: number | null
    f1613?: number | null
    f1614?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TracerStudyUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nimhsmsmh?: NullableStringFieldUpdateOperationsInput | string | null
    tahun_lulus?: NullableStringFieldUpdateOperationsInput | string | null
    nmmhsmsmh?: NullableStringFieldUpdateOperationsInput | string | null
    emailmsmh?: NullableStringFieldUpdateOperationsInput | string | null
    kdptimsmh?: NullableStringFieldUpdateOperationsInput | string | null
    kdpstmsmh?: NullableStringFieldUpdateOperationsInput | string | null
    telpomsmh?: NullableStringFieldUpdateOperationsInput | string | null
    nik?: NullableStringFieldUpdateOperationsInput | string | null
    npwp?: NullableStringFieldUpdateOperationsInput | string | null
    f8?: IntFieldUpdateOperationsInput | number
    f502?: NullableIntFieldUpdateOperationsInput | number | null
    f505?: NullableIntFieldUpdateOperationsInput | number | null
    f5a1?: NullableStringFieldUpdateOperationsInput | string | null
    f5a2?: NullableStringFieldUpdateOperationsInput | string | null
    f1101?: NullableIntFieldUpdateOperationsInput | number | null
    f1102?: NullableStringFieldUpdateOperationsInput | string | null
    f5b?: NullableStringFieldUpdateOperationsInput | string | null
    f5c?: NullableStringFieldUpdateOperationsInput | string | null
    f5d?: NullableIntFieldUpdateOperationsInput | number | null
    f18a?: NullableStringFieldUpdateOperationsInput | string | null
    f18b?: NullableStringFieldUpdateOperationsInput | string | null
    f18c?: NullableStringFieldUpdateOperationsInput | string | null
    f18d?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    f1201?: IntFieldUpdateOperationsInput | number
    f1202?: NullableStringFieldUpdateOperationsInput | string | null
    f14?: NullableIntFieldUpdateOperationsInput | number | null
    f15?: NullableIntFieldUpdateOperationsInput | number | null
    f1761?: IntFieldUpdateOperationsInput | number
    f1762?: IntFieldUpdateOperationsInput | number
    f1763?: IntFieldUpdateOperationsInput | number
    f1764?: IntFieldUpdateOperationsInput | number
    f1765?: IntFieldUpdateOperationsInput | number
    f1766?: IntFieldUpdateOperationsInput | number
    f1767?: IntFieldUpdateOperationsInput | number
    f1768?: IntFieldUpdateOperationsInput | number
    f1769?: IntFieldUpdateOperationsInput | number
    f1770?: IntFieldUpdateOperationsInput | number
    f1771?: IntFieldUpdateOperationsInput | number
    f1772?: IntFieldUpdateOperationsInput | number
    f1773?: IntFieldUpdateOperationsInput | number
    f1774?: IntFieldUpdateOperationsInput | number
    f21?: NullableIntFieldUpdateOperationsInput | number | null
    f22?: NullableIntFieldUpdateOperationsInput | number | null
    f23?: NullableIntFieldUpdateOperationsInput | number | null
    f24?: NullableIntFieldUpdateOperationsInput | number | null
    f25?: NullableIntFieldUpdateOperationsInput | number | null
    f26?: NullableIntFieldUpdateOperationsInput | number | null
    f27?: NullableIntFieldUpdateOperationsInput | number | null
    f301?: NullableIntFieldUpdateOperationsInput | number | null
    f302?: NullableIntFieldUpdateOperationsInput | number | null
    f303?: NullableIntFieldUpdateOperationsInput | number | null
    f401?: NullableIntFieldUpdateOperationsInput | number | null
    f402?: NullableIntFieldUpdateOperationsInput | number | null
    f403?: NullableIntFieldUpdateOperationsInput | number | null
    f404?: NullableIntFieldUpdateOperationsInput | number | null
    f405?: NullableIntFieldUpdateOperationsInput | number | null
    f406?: NullableIntFieldUpdateOperationsInput | number | null
    f407?: NullableIntFieldUpdateOperationsInput | number | null
    f408?: NullableIntFieldUpdateOperationsInput | number | null
    f409?: NullableIntFieldUpdateOperationsInput | number | null
    f410?: NullableIntFieldUpdateOperationsInput | number | null
    f411?: NullableIntFieldUpdateOperationsInput | number | null
    f412?: NullableIntFieldUpdateOperationsInput | number | null
    f413?: NullableIntFieldUpdateOperationsInput | number | null
    f414?: NullableIntFieldUpdateOperationsInput | number | null
    f415?: NullableIntFieldUpdateOperationsInput | number | null
    f416?: NullableStringFieldUpdateOperationsInput | string | null
    f6?: NullableIntFieldUpdateOperationsInput | number | null
    f7?: NullableIntFieldUpdateOperationsInput | number | null
    f7a?: NullableIntFieldUpdateOperationsInput | number | null
    f1001?: NullableIntFieldUpdateOperationsInput | number | null
    f1002?: NullableStringFieldUpdateOperationsInput | string | null
    f1601?: NullableIntFieldUpdateOperationsInput | number | null
    f1602?: NullableIntFieldUpdateOperationsInput | number | null
    f1603?: NullableIntFieldUpdateOperationsInput | number | null
    f1604?: NullableIntFieldUpdateOperationsInput | number | null
    f1605?: NullableIntFieldUpdateOperationsInput | number | null
    f1606?: NullableIntFieldUpdateOperationsInput | number | null
    f1607?: NullableIntFieldUpdateOperationsInput | number | null
    f1608?: NullableIntFieldUpdateOperationsInput | number | null
    f1609?: NullableIntFieldUpdateOperationsInput | number | null
    f1610?: NullableIntFieldUpdateOperationsInput | number | null
    f1611?: NullableIntFieldUpdateOperationsInput | number | null
    f1612?: NullableIntFieldUpdateOperationsInput | number | null
    f1613?: NullableIntFieldUpdateOperationsInput | number | null
    f1614?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    profile?: ProfileUpdateOneRequiredWithoutTracer_studyNestedInput
  }

  export type TracerStudyUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    profile_id?: StringFieldUpdateOperationsInput | string
    nimhsmsmh?: NullableStringFieldUpdateOperationsInput | string | null
    tahun_lulus?: NullableStringFieldUpdateOperationsInput | string | null
    nmmhsmsmh?: NullableStringFieldUpdateOperationsInput | string | null
    emailmsmh?: NullableStringFieldUpdateOperationsInput | string | null
    kdptimsmh?: NullableStringFieldUpdateOperationsInput | string | null
    kdpstmsmh?: NullableStringFieldUpdateOperationsInput | string | null
    telpomsmh?: NullableStringFieldUpdateOperationsInput | string | null
    nik?: NullableStringFieldUpdateOperationsInput | string | null
    npwp?: NullableStringFieldUpdateOperationsInput | string | null
    f8?: IntFieldUpdateOperationsInput | number
    f502?: NullableIntFieldUpdateOperationsInput | number | null
    f505?: NullableIntFieldUpdateOperationsInput | number | null
    f5a1?: NullableStringFieldUpdateOperationsInput | string | null
    f5a2?: NullableStringFieldUpdateOperationsInput | string | null
    f1101?: NullableIntFieldUpdateOperationsInput | number | null
    f1102?: NullableStringFieldUpdateOperationsInput | string | null
    f5b?: NullableStringFieldUpdateOperationsInput | string | null
    f5c?: NullableStringFieldUpdateOperationsInput | string | null
    f5d?: NullableIntFieldUpdateOperationsInput | number | null
    f18a?: NullableStringFieldUpdateOperationsInput | string | null
    f18b?: NullableStringFieldUpdateOperationsInput | string | null
    f18c?: NullableStringFieldUpdateOperationsInput | string | null
    f18d?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    f1201?: IntFieldUpdateOperationsInput | number
    f1202?: NullableStringFieldUpdateOperationsInput | string | null
    f14?: NullableIntFieldUpdateOperationsInput | number | null
    f15?: NullableIntFieldUpdateOperationsInput | number | null
    f1761?: IntFieldUpdateOperationsInput | number
    f1762?: IntFieldUpdateOperationsInput | number
    f1763?: IntFieldUpdateOperationsInput | number
    f1764?: IntFieldUpdateOperationsInput | number
    f1765?: IntFieldUpdateOperationsInput | number
    f1766?: IntFieldUpdateOperationsInput | number
    f1767?: IntFieldUpdateOperationsInput | number
    f1768?: IntFieldUpdateOperationsInput | number
    f1769?: IntFieldUpdateOperationsInput | number
    f1770?: IntFieldUpdateOperationsInput | number
    f1771?: IntFieldUpdateOperationsInput | number
    f1772?: IntFieldUpdateOperationsInput | number
    f1773?: IntFieldUpdateOperationsInput | number
    f1774?: IntFieldUpdateOperationsInput | number
    f21?: NullableIntFieldUpdateOperationsInput | number | null
    f22?: NullableIntFieldUpdateOperationsInput | number | null
    f23?: NullableIntFieldUpdateOperationsInput | number | null
    f24?: NullableIntFieldUpdateOperationsInput | number | null
    f25?: NullableIntFieldUpdateOperationsInput | number | null
    f26?: NullableIntFieldUpdateOperationsInput | number | null
    f27?: NullableIntFieldUpdateOperationsInput | number | null
    f301?: NullableIntFieldUpdateOperationsInput | number | null
    f302?: NullableIntFieldUpdateOperationsInput | number | null
    f303?: NullableIntFieldUpdateOperationsInput | number | null
    f401?: NullableIntFieldUpdateOperationsInput | number | null
    f402?: NullableIntFieldUpdateOperationsInput | number | null
    f403?: NullableIntFieldUpdateOperationsInput | number | null
    f404?: NullableIntFieldUpdateOperationsInput | number | null
    f405?: NullableIntFieldUpdateOperationsInput | number | null
    f406?: NullableIntFieldUpdateOperationsInput | number | null
    f407?: NullableIntFieldUpdateOperationsInput | number | null
    f408?: NullableIntFieldUpdateOperationsInput | number | null
    f409?: NullableIntFieldUpdateOperationsInput | number | null
    f410?: NullableIntFieldUpdateOperationsInput | number | null
    f411?: NullableIntFieldUpdateOperationsInput | number | null
    f412?: NullableIntFieldUpdateOperationsInput | number | null
    f413?: NullableIntFieldUpdateOperationsInput | number | null
    f414?: NullableIntFieldUpdateOperationsInput | number | null
    f415?: NullableIntFieldUpdateOperationsInput | number | null
    f416?: NullableStringFieldUpdateOperationsInput | string | null
    f6?: NullableIntFieldUpdateOperationsInput | number | null
    f7?: NullableIntFieldUpdateOperationsInput | number | null
    f7a?: NullableIntFieldUpdateOperationsInput | number | null
    f1001?: NullableIntFieldUpdateOperationsInput | number | null
    f1002?: NullableStringFieldUpdateOperationsInput | string | null
    f1601?: NullableIntFieldUpdateOperationsInput | number | null
    f1602?: NullableIntFieldUpdateOperationsInput | number | null
    f1603?: NullableIntFieldUpdateOperationsInput | number | null
    f1604?: NullableIntFieldUpdateOperationsInput | number | null
    f1605?: NullableIntFieldUpdateOperationsInput | number | null
    f1606?: NullableIntFieldUpdateOperationsInput | number | null
    f1607?: NullableIntFieldUpdateOperationsInput | number | null
    f1608?: NullableIntFieldUpdateOperationsInput | number | null
    f1609?: NullableIntFieldUpdateOperationsInput | number | null
    f1610?: NullableIntFieldUpdateOperationsInput | number | null
    f1611?: NullableIntFieldUpdateOperationsInput | number | null
    f1612?: NullableIntFieldUpdateOperationsInput | number | null
    f1613?: NullableIntFieldUpdateOperationsInput | number | null
    f1614?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TracerStudyCreateManyInput = {
    id?: string
    profile_id: string
    nimhsmsmh?: string | null
    tahun_lulus?: string | null
    nmmhsmsmh?: string | null
    emailmsmh?: string | null
    kdptimsmh?: string | null
    kdpstmsmh?: string | null
    telpomsmh?: string | null
    nik?: string | null
    npwp?: string | null
    f8: number
    f502?: number | null
    f505?: number | null
    f5a1?: string | null
    f5a2?: string | null
    f1101?: number | null
    f1102?: string | null
    f5b?: string | null
    f5c?: string | null
    f5d?: number | null
    f18a?: string | null
    f18b?: string | null
    f18c?: string | null
    f18d?: Date | string | null
    f1201: number
    f1202?: string | null
    f14?: number | null
    f15?: number | null
    f1761: number
    f1762: number
    f1763: number
    f1764: number
    f1765: number
    f1766: number
    f1767: number
    f1768: number
    f1769: number
    f1770: number
    f1771: number
    f1772: number
    f1773: number
    f1774: number
    f21?: number | null
    f22?: number | null
    f23?: number | null
    f24?: number | null
    f25?: number | null
    f26?: number | null
    f27?: number | null
    f301?: number | null
    f302?: number | null
    f303?: number | null
    f401?: number | null
    f402?: number | null
    f403?: number | null
    f404?: number | null
    f405?: number | null
    f406?: number | null
    f407?: number | null
    f408?: number | null
    f409?: number | null
    f410?: number | null
    f411?: number | null
    f412?: number | null
    f413?: number | null
    f414?: number | null
    f415?: number | null
    f416?: string | null
    f6?: number | null
    f7?: number | null
    f7a?: number | null
    f1001?: number | null
    f1002?: string | null
    f1601?: number | null
    f1602?: number | null
    f1603?: number | null
    f1604?: number | null
    f1605?: number | null
    f1606?: number | null
    f1607?: number | null
    f1608?: number | null
    f1609?: number | null
    f1610?: number | null
    f1611?: number | null
    f1612?: number | null
    f1613?: number | null
    f1614?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TracerStudyUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    nimhsmsmh?: NullableStringFieldUpdateOperationsInput | string | null
    tahun_lulus?: NullableStringFieldUpdateOperationsInput | string | null
    nmmhsmsmh?: NullableStringFieldUpdateOperationsInput | string | null
    emailmsmh?: NullableStringFieldUpdateOperationsInput | string | null
    kdptimsmh?: NullableStringFieldUpdateOperationsInput | string | null
    kdpstmsmh?: NullableStringFieldUpdateOperationsInput | string | null
    telpomsmh?: NullableStringFieldUpdateOperationsInput | string | null
    nik?: NullableStringFieldUpdateOperationsInput | string | null
    npwp?: NullableStringFieldUpdateOperationsInput | string | null
    f8?: IntFieldUpdateOperationsInput | number
    f502?: NullableIntFieldUpdateOperationsInput | number | null
    f505?: NullableIntFieldUpdateOperationsInput | number | null
    f5a1?: NullableStringFieldUpdateOperationsInput | string | null
    f5a2?: NullableStringFieldUpdateOperationsInput | string | null
    f1101?: NullableIntFieldUpdateOperationsInput | number | null
    f1102?: NullableStringFieldUpdateOperationsInput | string | null
    f5b?: NullableStringFieldUpdateOperationsInput | string | null
    f5c?: NullableStringFieldUpdateOperationsInput | string | null
    f5d?: NullableIntFieldUpdateOperationsInput | number | null
    f18a?: NullableStringFieldUpdateOperationsInput | string | null
    f18b?: NullableStringFieldUpdateOperationsInput | string | null
    f18c?: NullableStringFieldUpdateOperationsInput | string | null
    f18d?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    f1201?: IntFieldUpdateOperationsInput | number
    f1202?: NullableStringFieldUpdateOperationsInput | string | null
    f14?: NullableIntFieldUpdateOperationsInput | number | null
    f15?: NullableIntFieldUpdateOperationsInput | number | null
    f1761?: IntFieldUpdateOperationsInput | number
    f1762?: IntFieldUpdateOperationsInput | number
    f1763?: IntFieldUpdateOperationsInput | number
    f1764?: IntFieldUpdateOperationsInput | number
    f1765?: IntFieldUpdateOperationsInput | number
    f1766?: IntFieldUpdateOperationsInput | number
    f1767?: IntFieldUpdateOperationsInput | number
    f1768?: IntFieldUpdateOperationsInput | number
    f1769?: IntFieldUpdateOperationsInput | number
    f1770?: IntFieldUpdateOperationsInput | number
    f1771?: IntFieldUpdateOperationsInput | number
    f1772?: IntFieldUpdateOperationsInput | number
    f1773?: IntFieldUpdateOperationsInput | number
    f1774?: IntFieldUpdateOperationsInput | number
    f21?: NullableIntFieldUpdateOperationsInput | number | null
    f22?: NullableIntFieldUpdateOperationsInput | number | null
    f23?: NullableIntFieldUpdateOperationsInput | number | null
    f24?: NullableIntFieldUpdateOperationsInput | number | null
    f25?: NullableIntFieldUpdateOperationsInput | number | null
    f26?: NullableIntFieldUpdateOperationsInput | number | null
    f27?: NullableIntFieldUpdateOperationsInput | number | null
    f301?: NullableIntFieldUpdateOperationsInput | number | null
    f302?: NullableIntFieldUpdateOperationsInput | number | null
    f303?: NullableIntFieldUpdateOperationsInput | number | null
    f401?: NullableIntFieldUpdateOperationsInput | number | null
    f402?: NullableIntFieldUpdateOperationsInput | number | null
    f403?: NullableIntFieldUpdateOperationsInput | number | null
    f404?: NullableIntFieldUpdateOperationsInput | number | null
    f405?: NullableIntFieldUpdateOperationsInput | number | null
    f406?: NullableIntFieldUpdateOperationsInput | number | null
    f407?: NullableIntFieldUpdateOperationsInput | number | null
    f408?: NullableIntFieldUpdateOperationsInput | number | null
    f409?: NullableIntFieldUpdateOperationsInput | number | null
    f410?: NullableIntFieldUpdateOperationsInput | number | null
    f411?: NullableIntFieldUpdateOperationsInput | number | null
    f412?: NullableIntFieldUpdateOperationsInput | number | null
    f413?: NullableIntFieldUpdateOperationsInput | number | null
    f414?: NullableIntFieldUpdateOperationsInput | number | null
    f415?: NullableIntFieldUpdateOperationsInput | number | null
    f416?: NullableStringFieldUpdateOperationsInput | string | null
    f6?: NullableIntFieldUpdateOperationsInput | number | null
    f7?: NullableIntFieldUpdateOperationsInput | number | null
    f7a?: NullableIntFieldUpdateOperationsInput | number | null
    f1001?: NullableIntFieldUpdateOperationsInput | number | null
    f1002?: NullableStringFieldUpdateOperationsInput | string | null
    f1601?: NullableIntFieldUpdateOperationsInput | number | null
    f1602?: NullableIntFieldUpdateOperationsInput | number | null
    f1603?: NullableIntFieldUpdateOperationsInput | number | null
    f1604?: NullableIntFieldUpdateOperationsInput | number | null
    f1605?: NullableIntFieldUpdateOperationsInput | number | null
    f1606?: NullableIntFieldUpdateOperationsInput | number | null
    f1607?: NullableIntFieldUpdateOperationsInput | number | null
    f1608?: NullableIntFieldUpdateOperationsInput | number | null
    f1609?: NullableIntFieldUpdateOperationsInput | number | null
    f1610?: NullableIntFieldUpdateOperationsInput | number | null
    f1611?: NullableIntFieldUpdateOperationsInput | number | null
    f1612?: NullableIntFieldUpdateOperationsInput | number | null
    f1613?: NullableIntFieldUpdateOperationsInput | number | null
    f1614?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TracerStudyUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    profile_id?: StringFieldUpdateOperationsInput | string
    nimhsmsmh?: NullableStringFieldUpdateOperationsInput | string | null
    tahun_lulus?: NullableStringFieldUpdateOperationsInput | string | null
    nmmhsmsmh?: NullableStringFieldUpdateOperationsInput | string | null
    emailmsmh?: NullableStringFieldUpdateOperationsInput | string | null
    kdptimsmh?: NullableStringFieldUpdateOperationsInput | string | null
    kdpstmsmh?: NullableStringFieldUpdateOperationsInput | string | null
    telpomsmh?: NullableStringFieldUpdateOperationsInput | string | null
    nik?: NullableStringFieldUpdateOperationsInput | string | null
    npwp?: NullableStringFieldUpdateOperationsInput | string | null
    f8?: IntFieldUpdateOperationsInput | number
    f502?: NullableIntFieldUpdateOperationsInput | number | null
    f505?: NullableIntFieldUpdateOperationsInput | number | null
    f5a1?: NullableStringFieldUpdateOperationsInput | string | null
    f5a2?: NullableStringFieldUpdateOperationsInput | string | null
    f1101?: NullableIntFieldUpdateOperationsInput | number | null
    f1102?: NullableStringFieldUpdateOperationsInput | string | null
    f5b?: NullableStringFieldUpdateOperationsInput | string | null
    f5c?: NullableStringFieldUpdateOperationsInput | string | null
    f5d?: NullableIntFieldUpdateOperationsInput | number | null
    f18a?: NullableStringFieldUpdateOperationsInput | string | null
    f18b?: NullableStringFieldUpdateOperationsInput | string | null
    f18c?: NullableStringFieldUpdateOperationsInput | string | null
    f18d?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    f1201?: IntFieldUpdateOperationsInput | number
    f1202?: NullableStringFieldUpdateOperationsInput | string | null
    f14?: NullableIntFieldUpdateOperationsInput | number | null
    f15?: NullableIntFieldUpdateOperationsInput | number | null
    f1761?: IntFieldUpdateOperationsInput | number
    f1762?: IntFieldUpdateOperationsInput | number
    f1763?: IntFieldUpdateOperationsInput | number
    f1764?: IntFieldUpdateOperationsInput | number
    f1765?: IntFieldUpdateOperationsInput | number
    f1766?: IntFieldUpdateOperationsInput | number
    f1767?: IntFieldUpdateOperationsInput | number
    f1768?: IntFieldUpdateOperationsInput | number
    f1769?: IntFieldUpdateOperationsInput | number
    f1770?: IntFieldUpdateOperationsInput | number
    f1771?: IntFieldUpdateOperationsInput | number
    f1772?: IntFieldUpdateOperationsInput | number
    f1773?: IntFieldUpdateOperationsInput | number
    f1774?: IntFieldUpdateOperationsInput | number
    f21?: NullableIntFieldUpdateOperationsInput | number | null
    f22?: NullableIntFieldUpdateOperationsInput | number | null
    f23?: NullableIntFieldUpdateOperationsInput | number | null
    f24?: NullableIntFieldUpdateOperationsInput | number | null
    f25?: NullableIntFieldUpdateOperationsInput | number | null
    f26?: NullableIntFieldUpdateOperationsInput | number | null
    f27?: NullableIntFieldUpdateOperationsInput | number | null
    f301?: NullableIntFieldUpdateOperationsInput | number | null
    f302?: NullableIntFieldUpdateOperationsInput | number | null
    f303?: NullableIntFieldUpdateOperationsInput | number | null
    f401?: NullableIntFieldUpdateOperationsInput | number | null
    f402?: NullableIntFieldUpdateOperationsInput | number | null
    f403?: NullableIntFieldUpdateOperationsInput | number | null
    f404?: NullableIntFieldUpdateOperationsInput | number | null
    f405?: NullableIntFieldUpdateOperationsInput | number | null
    f406?: NullableIntFieldUpdateOperationsInput | number | null
    f407?: NullableIntFieldUpdateOperationsInput | number | null
    f408?: NullableIntFieldUpdateOperationsInput | number | null
    f409?: NullableIntFieldUpdateOperationsInput | number | null
    f410?: NullableIntFieldUpdateOperationsInput | number | null
    f411?: NullableIntFieldUpdateOperationsInput | number | null
    f412?: NullableIntFieldUpdateOperationsInput | number | null
    f413?: NullableIntFieldUpdateOperationsInput | number | null
    f414?: NullableIntFieldUpdateOperationsInput | number | null
    f415?: NullableIntFieldUpdateOperationsInput | number | null
    f416?: NullableStringFieldUpdateOperationsInput | string | null
    f6?: NullableIntFieldUpdateOperationsInput | number | null
    f7?: NullableIntFieldUpdateOperationsInput | number | null
    f7a?: NullableIntFieldUpdateOperationsInput | number | null
    f1001?: NullableIntFieldUpdateOperationsInput | number | null
    f1002?: NullableStringFieldUpdateOperationsInput | string | null
    f1601?: NullableIntFieldUpdateOperationsInput | number | null
    f1602?: NullableIntFieldUpdateOperationsInput | number | null
    f1603?: NullableIntFieldUpdateOperationsInput | number | null
    f1604?: NullableIntFieldUpdateOperationsInput | number | null
    f1605?: NullableIntFieldUpdateOperationsInput | number | null
    f1606?: NullableIntFieldUpdateOperationsInput | number | null
    f1607?: NullableIntFieldUpdateOperationsInput | number | null
    f1608?: NullableIntFieldUpdateOperationsInput | number | null
    f1609?: NullableIntFieldUpdateOperationsInput | number | null
    f1610?: NullableIntFieldUpdateOperationsInput | number | null
    f1611?: NullableIntFieldUpdateOperationsInput | number | null
    f1612?: NullableIntFieldUpdateOperationsInput | number | null
    f1613?: NullableIntFieldUpdateOperationsInput | number | null
    f1614?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryCreateInput = {
    name: string
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Product?: ProductCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUncheckedCreateInput = {
    id?: number
    name: string
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Product?: ProductUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Product?: ProductUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Product?: ProductUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryCreateManyInput = {
    id?: number
    name: string
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CategoryUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductCreateInput = {
    id?: string
    name: string
    description?: string | null
    price: number
    image: string
    stock?: number
    countReview?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    category: CategoryCreateNestedOneWithoutProductInput
  }

  export type ProductUncheckedCreateInput = {
    id?: string
    name: string
    description?: string | null
    price: number
    categoryId: number
    image: string
    stock?: number
    countReview?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: IntFieldUpdateOperationsInput | number
    image?: StringFieldUpdateOperationsInput | string
    stock?: IntFieldUpdateOperationsInput | number
    countReview?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: CategoryUpdateOneRequiredWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: IntFieldUpdateOperationsInput | number
    categoryId?: IntFieldUpdateOperationsInput | number
    image?: StringFieldUpdateOperationsInput | string
    stock?: IntFieldUpdateOperationsInput | number
    countReview?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductCreateManyInput = {
    id?: string
    name: string
    description?: string | null
    price: number
    categoryId: number
    image: string
    stock?: number
    countReview?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: IntFieldUpdateOperationsInput | number
    image?: StringFieldUpdateOperationsInput | string
    stock?: IntFieldUpdateOperationsInput | number
    countReview?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: IntFieldUpdateOperationsInput | number
    categoryId?: IntFieldUpdateOperationsInput | number
    image?: StringFieldUpdateOperationsInput | string
    stock?: IntFieldUpdateOperationsInput | number
    countReview?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type RoleRelationFilter = {
    is?: RoleWhereInput
    isNot?: RoleWhereInput
  }

  export type EventListRelationFilter = {
    every?: EventWhereInput
    some?: EventWhereInput
    none?: EventWhereInput
  }

  export type NewsListRelationFilter = {
    every?: NewsWhereInput
    some?: NewsWhereInput
    none?: NewsWhereInput
  }

  export type AlumniProgramListRelationFilter = {
    every?: AlumniProgramWhereInput
    some?: AlumniProgramWhereInput
    none?: AlumniProgramWhereInput
  }

  export type ProfileNullableRelationFilter = {
    is?: ProfileWhereInput | null
    isNot?: ProfileWhereInput | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type EventOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type NewsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AlumniProgramOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    roleId?: SortOrder
    profileId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    roleId?: SortOrder
    profileId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    roleId?: SortOrder
    profileId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type UserListRelationFilter = {
    every?: UserWhereInput
    some?: UserWhereInput
    none?: UserWhereInput
  }

  export type UserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RoleCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RoleMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RoleMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type UserRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type StudyProgramRelationFilter = {
    is?: StudyProgramWhereInput
    isNot?: StudyProgramWhereInput
  }

  export type SensitiveStudentDataNullableRelationFilter = {
    is?: SensitiveStudentDataWhereInput | null
    isNot?: SensitiveStudentDataWhereInput | null
  }

  export type TracerStudyNullableRelationFilter = {
    is?: TracerStudyWhereInput | null
    isNot?: TracerStudyWhereInput | null
  }

  export type ProfileCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    image?: SortOrder
    full_name?: SortOrder
    student_identification_number?: SortOrder
    study_program_id?: SortOrder
    year_graduated?: SortOrder
    work?: SortOrder
    skills?: SortOrder
    entrepreneur?: SortOrder
    competencies?: SortOrder
    career?: SortOrder
    company?: SortOrder
    linkedin?: SortOrder
    is_alumni_leader?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProfileMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    image?: SortOrder
    full_name?: SortOrder
    student_identification_number?: SortOrder
    study_program_id?: SortOrder
    year_graduated?: SortOrder
    work?: SortOrder
    skills?: SortOrder
    entrepreneur?: SortOrder
    competencies?: SortOrder
    career?: SortOrder
    company?: SortOrder
    linkedin?: SortOrder
    is_alumni_leader?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProfileMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    image?: SortOrder
    full_name?: SortOrder
    student_identification_number?: SortOrder
    study_program_id?: SortOrder
    year_graduated?: SortOrder
    work?: SortOrder
    skills?: SortOrder
    entrepreneur?: SortOrder
    competencies?: SortOrder
    career?: SortOrder
    company?: SortOrder
    linkedin?: SortOrder
    is_alumni_leader?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type ProfileListRelationFilter = {
    every?: ProfileWhereInput
    some?: ProfileWhereInput
    none?: ProfileWhereInput
  }

  export type ProfileOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type StudyProgramCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    level?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type StudyProgramMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    level?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type StudyProgramMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    code?: SortOrder
    level?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type ProfileRelationFilter = {
    is?: ProfileWhereInput
    isNot?: ProfileWhereInput
  }

  export type SensitiveStudentDataCountOrderByAggregateInput = {
    id?: SortOrder
    profile_id?: SortOrder
    pt_code?: SortOrder
    place_of_birth?: SortOrder
    date_of_birth?: SortOrder
    national_identity_number?: SortOrder
    full_address?: SortOrder
    email?: SortOrder
    phone_number?: SortOrder
    mobile_number?: SortOrder
    total_credits?: SortOrder
    graduation_date?: SortOrder
    yudisium_date?: SortOrder
    gpa?: SortOrder
    gender?: SortOrder
  }

  export type SensitiveStudentDataAvgOrderByAggregateInput = {
    total_credits?: SortOrder
    gpa?: SortOrder
  }

  export type SensitiveStudentDataMaxOrderByAggregateInput = {
    id?: SortOrder
    profile_id?: SortOrder
    pt_code?: SortOrder
    place_of_birth?: SortOrder
    date_of_birth?: SortOrder
    national_identity_number?: SortOrder
    full_address?: SortOrder
    email?: SortOrder
    phone_number?: SortOrder
    mobile_number?: SortOrder
    total_credits?: SortOrder
    graduation_date?: SortOrder
    yudisium_date?: SortOrder
    gpa?: SortOrder
    gender?: SortOrder
  }

  export type SensitiveStudentDataMinOrderByAggregateInput = {
    id?: SortOrder
    profile_id?: SortOrder
    pt_code?: SortOrder
    place_of_birth?: SortOrder
    date_of_birth?: SortOrder
    national_identity_number?: SortOrder
    full_address?: SortOrder
    email?: SortOrder
    phone_number?: SortOrder
    mobile_number?: SortOrder
    total_credits?: SortOrder
    graduation_date?: SortOrder
    yudisium_date?: SortOrder
    gpa?: SortOrder
    gender?: SortOrder
  }

  export type SensitiveStudentDataSumOrderByAggregateInput = {
    total_credits?: SortOrder
    gpa?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type EnumNewsStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.NewsStatus | EnumNewsStatusFieldRefInput<$PrismaModel>
    in?: $Enums.NewsStatus[]
    notIn?: $Enums.NewsStatus[]
    not?: NestedEnumNewsStatusFilter<$PrismaModel> | $Enums.NewsStatus
  }

  export type UserNullableRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type NewsCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    image?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    NewsStatus?: SortOrder
    rejectionReason?: SortOrder
    authorId?: SortOrder
    adminUniversitasId?: SortOrder
    isActive?: SortOrder
  }

  export type NewsMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    image?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    NewsStatus?: SortOrder
    rejectionReason?: SortOrder
    authorId?: SortOrder
    adminUniversitasId?: SortOrder
    isActive?: SortOrder
  }

  export type NewsMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    image?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    NewsStatus?: SortOrder
    rejectionReason?: SortOrder
    authorId?: SortOrder
    adminUniversitasId?: SortOrder
    isActive?: SortOrder
  }

  export type EnumNewsStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.NewsStatus | EnumNewsStatusFieldRefInput<$PrismaModel>
    in?: $Enums.NewsStatus[]
    notIn?: $Enums.NewsStatus[]
    not?: NestedEnumNewsStatusWithAggregatesFilter<$PrismaModel> | $Enums.NewsStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumNewsStatusFilter<$PrismaModel>
    _max?: NestedEnumNewsStatusFilter<$PrismaModel>
  }

  export type EnumEventStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.EventStatus | EnumEventStatusFieldRefInput<$PrismaModel>
    in?: $Enums.EventStatus[]
    notIn?: $Enums.EventStatus[]
    not?: NestedEnumEventStatusFilter<$PrismaModel> | $Enums.EventStatus
  }

  export type EventCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    date?: SortOrder
    description?: SortOrder
    image?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    EventStatus?: SortOrder
    rejectionReason?: SortOrder
    authorId?: SortOrder
    adminUniversitasId?: SortOrder
    isActive?: SortOrder
  }

  export type EventMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    date?: SortOrder
    description?: SortOrder
    image?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    EventStatus?: SortOrder
    rejectionReason?: SortOrder
    authorId?: SortOrder
    adminUniversitasId?: SortOrder
    isActive?: SortOrder
  }

  export type EventMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    date?: SortOrder
    description?: SortOrder
    image?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    EventStatus?: SortOrder
    rejectionReason?: SortOrder
    authorId?: SortOrder
    adminUniversitasId?: SortOrder
    isActive?: SortOrder
  }

  export type EnumEventStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EventStatus | EnumEventStatusFieldRefInput<$PrismaModel>
    in?: $Enums.EventStatus[]
    notIn?: $Enums.EventStatus[]
    not?: NestedEnumEventStatusWithAggregatesFilter<$PrismaModel> | $Enums.EventStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEventStatusFilter<$PrismaModel>
    _max?: NestedEnumEventStatusFilter<$PrismaModel>
  }

  export type EnumProgramTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ProgramType | EnumProgramTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ProgramType[]
    notIn?: $Enums.ProgramType[]
    not?: NestedEnumProgramTypeFilter<$PrismaModel> | $Enums.ProgramType
  }

  export type EnumAlumniProgramStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.AlumniProgramStatus | EnumAlumniProgramStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AlumniProgramStatus[]
    notIn?: $Enums.AlumniProgramStatus[]
    not?: NestedEnumAlumniProgramStatusFilter<$PrismaModel> | $Enums.AlumniProgramStatus
  }

  export type AlumniProgramCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    image?: SortOrder
    category?: SortOrder
    AlumniProgramStatus?: SortOrder
    rejectionReason?: SortOrder
    authorId?: SortOrder
    adminProdiId?: SortOrder
    adminUniversitasId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isActive?: SortOrder
  }

  export type AlumniProgramMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    image?: SortOrder
    category?: SortOrder
    AlumniProgramStatus?: SortOrder
    rejectionReason?: SortOrder
    authorId?: SortOrder
    adminProdiId?: SortOrder
    adminUniversitasId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isActive?: SortOrder
  }

  export type AlumniProgramMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    image?: SortOrder
    category?: SortOrder
    AlumniProgramStatus?: SortOrder
    rejectionReason?: SortOrder
    authorId?: SortOrder
    adminProdiId?: SortOrder
    adminUniversitasId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isActive?: SortOrder
  }

  export type EnumProgramTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProgramType | EnumProgramTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ProgramType[]
    notIn?: $Enums.ProgramType[]
    not?: NestedEnumProgramTypeWithAggregatesFilter<$PrismaModel> | $Enums.ProgramType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumProgramTypeFilter<$PrismaModel>
    _max?: NestedEnumProgramTypeFilter<$PrismaModel>
  }

  export type EnumAlumniProgramStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AlumniProgramStatus | EnumAlumniProgramStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AlumniProgramStatus[]
    notIn?: $Enums.AlumniProgramStatus[]
    not?: NestedEnumAlumniProgramStatusWithAggregatesFilter<$PrismaModel> | $Enums.AlumniProgramStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAlumniProgramStatusFilter<$PrismaModel>
    _max?: NestedEnumAlumniProgramStatusFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type TracerStudyCountOrderByAggregateInput = {
    id?: SortOrder
    profile_id?: SortOrder
    nimhsmsmh?: SortOrder
    tahun_lulus?: SortOrder
    nmmhsmsmh?: SortOrder
    emailmsmh?: SortOrder
    kdptimsmh?: SortOrder
    kdpstmsmh?: SortOrder
    telpomsmh?: SortOrder
    nik?: SortOrder
    npwp?: SortOrder
    f8?: SortOrder
    f502?: SortOrder
    f505?: SortOrder
    f5a1?: SortOrder
    f5a2?: SortOrder
    f1101?: SortOrder
    f1102?: SortOrder
    f5b?: SortOrder
    f5c?: SortOrder
    f5d?: SortOrder
    f18a?: SortOrder
    f18b?: SortOrder
    f18c?: SortOrder
    f18d?: SortOrder
    f1201?: SortOrder
    f1202?: SortOrder
    f14?: SortOrder
    f15?: SortOrder
    f1761?: SortOrder
    f1762?: SortOrder
    f1763?: SortOrder
    f1764?: SortOrder
    f1765?: SortOrder
    f1766?: SortOrder
    f1767?: SortOrder
    f1768?: SortOrder
    f1769?: SortOrder
    f1770?: SortOrder
    f1771?: SortOrder
    f1772?: SortOrder
    f1773?: SortOrder
    f1774?: SortOrder
    f21?: SortOrder
    f22?: SortOrder
    f23?: SortOrder
    f24?: SortOrder
    f25?: SortOrder
    f26?: SortOrder
    f27?: SortOrder
    f301?: SortOrder
    f302?: SortOrder
    f303?: SortOrder
    f401?: SortOrder
    f402?: SortOrder
    f403?: SortOrder
    f404?: SortOrder
    f405?: SortOrder
    f406?: SortOrder
    f407?: SortOrder
    f408?: SortOrder
    f409?: SortOrder
    f410?: SortOrder
    f411?: SortOrder
    f412?: SortOrder
    f413?: SortOrder
    f414?: SortOrder
    f415?: SortOrder
    f416?: SortOrder
    f6?: SortOrder
    f7?: SortOrder
    f7a?: SortOrder
    f1001?: SortOrder
    f1002?: SortOrder
    f1601?: SortOrder
    f1602?: SortOrder
    f1603?: SortOrder
    f1604?: SortOrder
    f1605?: SortOrder
    f1606?: SortOrder
    f1607?: SortOrder
    f1608?: SortOrder
    f1609?: SortOrder
    f1610?: SortOrder
    f1611?: SortOrder
    f1612?: SortOrder
    f1613?: SortOrder
    f1614?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TracerStudyAvgOrderByAggregateInput = {
    f8?: SortOrder
    f502?: SortOrder
    f505?: SortOrder
    f1101?: SortOrder
    f5d?: SortOrder
    f1201?: SortOrder
    f14?: SortOrder
    f15?: SortOrder
    f1761?: SortOrder
    f1762?: SortOrder
    f1763?: SortOrder
    f1764?: SortOrder
    f1765?: SortOrder
    f1766?: SortOrder
    f1767?: SortOrder
    f1768?: SortOrder
    f1769?: SortOrder
    f1770?: SortOrder
    f1771?: SortOrder
    f1772?: SortOrder
    f1773?: SortOrder
    f1774?: SortOrder
    f21?: SortOrder
    f22?: SortOrder
    f23?: SortOrder
    f24?: SortOrder
    f25?: SortOrder
    f26?: SortOrder
    f27?: SortOrder
    f301?: SortOrder
    f302?: SortOrder
    f303?: SortOrder
    f401?: SortOrder
    f402?: SortOrder
    f403?: SortOrder
    f404?: SortOrder
    f405?: SortOrder
    f406?: SortOrder
    f407?: SortOrder
    f408?: SortOrder
    f409?: SortOrder
    f410?: SortOrder
    f411?: SortOrder
    f412?: SortOrder
    f413?: SortOrder
    f414?: SortOrder
    f415?: SortOrder
    f6?: SortOrder
    f7?: SortOrder
    f7a?: SortOrder
    f1001?: SortOrder
    f1601?: SortOrder
    f1602?: SortOrder
    f1603?: SortOrder
    f1604?: SortOrder
    f1605?: SortOrder
    f1606?: SortOrder
    f1607?: SortOrder
    f1608?: SortOrder
    f1609?: SortOrder
    f1610?: SortOrder
    f1611?: SortOrder
    f1612?: SortOrder
    f1613?: SortOrder
  }

  export type TracerStudyMaxOrderByAggregateInput = {
    id?: SortOrder
    profile_id?: SortOrder
    nimhsmsmh?: SortOrder
    tahun_lulus?: SortOrder
    nmmhsmsmh?: SortOrder
    emailmsmh?: SortOrder
    kdptimsmh?: SortOrder
    kdpstmsmh?: SortOrder
    telpomsmh?: SortOrder
    nik?: SortOrder
    npwp?: SortOrder
    f8?: SortOrder
    f502?: SortOrder
    f505?: SortOrder
    f5a1?: SortOrder
    f5a2?: SortOrder
    f1101?: SortOrder
    f1102?: SortOrder
    f5b?: SortOrder
    f5c?: SortOrder
    f5d?: SortOrder
    f18a?: SortOrder
    f18b?: SortOrder
    f18c?: SortOrder
    f18d?: SortOrder
    f1201?: SortOrder
    f1202?: SortOrder
    f14?: SortOrder
    f15?: SortOrder
    f1761?: SortOrder
    f1762?: SortOrder
    f1763?: SortOrder
    f1764?: SortOrder
    f1765?: SortOrder
    f1766?: SortOrder
    f1767?: SortOrder
    f1768?: SortOrder
    f1769?: SortOrder
    f1770?: SortOrder
    f1771?: SortOrder
    f1772?: SortOrder
    f1773?: SortOrder
    f1774?: SortOrder
    f21?: SortOrder
    f22?: SortOrder
    f23?: SortOrder
    f24?: SortOrder
    f25?: SortOrder
    f26?: SortOrder
    f27?: SortOrder
    f301?: SortOrder
    f302?: SortOrder
    f303?: SortOrder
    f401?: SortOrder
    f402?: SortOrder
    f403?: SortOrder
    f404?: SortOrder
    f405?: SortOrder
    f406?: SortOrder
    f407?: SortOrder
    f408?: SortOrder
    f409?: SortOrder
    f410?: SortOrder
    f411?: SortOrder
    f412?: SortOrder
    f413?: SortOrder
    f414?: SortOrder
    f415?: SortOrder
    f416?: SortOrder
    f6?: SortOrder
    f7?: SortOrder
    f7a?: SortOrder
    f1001?: SortOrder
    f1002?: SortOrder
    f1601?: SortOrder
    f1602?: SortOrder
    f1603?: SortOrder
    f1604?: SortOrder
    f1605?: SortOrder
    f1606?: SortOrder
    f1607?: SortOrder
    f1608?: SortOrder
    f1609?: SortOrder
    f1610?: SortOrder
    f1611?: SortOrder
    f1612?: SortOrder
    f1613?: SortOrder
    f1614?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TracerStudyMinOrderByAggregateInput = {
    id?: SortOrder
    profile_id?: SortOrder
    nimhsmsmh?: SortOrder
    tahun_lulus?: SortOrder
    nmmhsmsmh?: SortOrder
    emailmsmh?: SortOrder
    kdptimsmh?: SortOrder
    kdpstmsmh?: SortOrder
    telpomsmh?: SortOrder
    nik?: SortOrder
    npwp?: SortOrder
    f8?: SortOrder
    f502?: SortOrder
    f505?: SortOrder
    f5a1?: SortOrder
    f5a2?: SortOrder
    f1101?: SortOrder
    f1102?: SortOrder
    f5b?: SortOrder
    f5c?: SortOrder
    f5d?: SortOrder
    f18a?: SortOrder
    f18b?: SortOrder
    f18c?: SortOrder
    f18d?: SortOrder
    f1201?: SortOrder
    f1202?: SortOrder
    f14?: SortOrder
    f15?: SortOrder
    f1761?: SortOrder
    f1762?: SortOrder
    f1763?: SortOrder
    f1764?: SortOrder
    f1765?: SortOrder
    f1766?: SortOrder
    f1767?: SortOrder
    f1768?: SortOrder
    f1769?: SortOrder
    f1770?: SortOrder
    f1771?: SortOrder
    f1772?: SortOrder
    f1773?: SortOrder
    f1774?: SortOrder
    f21?: SortOrder
    f22?: SortOrder
    f23?: SortOrder
    f24?: SortOrder
    f25?: SortOrder
    f26?: SortOrder
    f27?: SortOrder
    f301?: SortOrder
    f302?: SortOrder
    f303?: SortOrder
    f401?: SortOrder
    f402?: SortOrder
    f403?: SortOrder
    f404?: SortOrder
    f405?: SortOrder
    f406?: SortOrder
    f407?: SortOrder
    f408?: SortOrder
    f409?: SortOrder
    f410?: SortOrder
    f411?: SortOrder
    f412?: SortOrder
    f413?: SortOrder
    f414?: SortOrder
    f415?: SortOrder
    f416?: SortOrder
    f6?: SortOrder
    f7?: SortOrder
    f7a?: SortOrder
    f1001?: SortOrder
    f1002?: SortOrder
    f1601?: SortOrder
    f1602?: SortOrder
    f1603?: SortOrder
    f1604?: SortOrder
    f1605?: SortOrder
    f1606?: SortOrder
    f1607?: SortOrder
    f1608?: SortOrder
    f1609?: SortOrder
    f1610?: SortOrder
    f1611?: SortOrder
    f1612?: SortOrder
    f1613?: SortOrder
    f1614?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TracerStudySumOrderByAggregateInput = {
    f8?: SortOrder
    f502?: SortOrder
    f505?: SortOrder
    f1101?: SortOrder
    f5d?: SortOrder
    f1201?: SortOrder
    f14?: SortOrder
    f15?: SortOrder
    f1761?: SortOrder
    f1762?: SortOrder
    f1763?: SortOrder
    f1764?: SortOrder
    f1765?: SortOrder
    f1766?: SortOrder
    f1767?: SortOrder
    f1768?: SortOrder
    f1769?: SortOrder
    f1770?: SortOrder
    f1771?: SortOrder
    f1772?: SortOrder
    f1773?: SortOrder
    f1774?: SortOrder
    f21?: SortOrder
    f22?: SortOrder
    f23?: SortOrder
    f24?: SortOrder
    f25?: SortOrder
    f26?: SortOrder
    f27?: SortOrder
    f301?: SortOrder
    f302?: SortOrder
    f303?: SortOrder
    f401?: SortOrder
    f402?: SortOrder
    f403?: SortOrder
    f404?: SortOrder
    f405?: SortOrder
    f406?: SortOrder
    f407?: SortOrder
    f408?: SortOrder
    f409?: SortOrder
    f410?: SortOrder
    f411?: SortOrder
    f412?: SortOrder
    f413?: SortOrder
    f414?: SortOrder
    f415?: SortOrder
    f6?: SortOrder
    f7?: SortOrder
    f7a?: SortOrder
    f1001?: SortOrder
    f1601?: SortOrder
    f1602?: SortOrder
    f1603?: SortOrder
    f1604?: SortOrder
    f1605?: SortOrder
    f1606?: SortOrder
    f1607?: SortOrder
    f1608?: SortOrder
    f1609?: SortOrder
    f1610?: SortOrder
    f1611?: SortOrder
    f1612?: SortOrder
    f1613?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type ProductListRelationFilter = {
    every?: ProductWhereInput
    some?: ProductWhereInput
    none?: ProductWhereInput
  }

  export type ProductOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CategoryCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CategoryAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type CategoryMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CategoryMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CategorySumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type CategoryRelationFilter = {
    is?: CategoryWhereInput
    isNot?: CategoryWhereInput
  }

  export type ProductCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    price?: SortOrder
    categoryId?: SortOrder
    image?: SortOrder
    stock?: SortOrder
    countReview?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductAvgOrderByAggregateInput = {
    price?: SortOrder
    categoryId?: SortOrder
    stock?: SortOrder
    countReview?: SortOrder
  }

  export type ProductMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    price?: SortOrder
    categoryId?: SortOrder
    image?: SortOrder
    stock?: SortOrder
    countReview?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    price?: SortOrder
    categoryId?: SortOrder
    image?: SortOrder
    stock?: SortOrder
    countReview?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductSumOrderByAggregateInput = {
    price?: SortOrder
    categoryId?: SortOrder
    stock?: SortOrder
    countReview?: SortOrder
  }

  export type RoleCreateNestedOneWithoutUsersInput = {
    create?: XOR<RoleCreateWithoutUsersInput, RoleUncheckedCreateWithoutUsersInput>
    connectOrCreate?: RoleCreateOrConnectWithoutUsersInput
    connect?: RoleWhereUniqueInput
  }

  export type EventCreateNestedManyWithoutAdminUniversitasInput = {
    create?: XOR<EventCreateWithoutAdminUniversitasInput, EventUncheckedCreateWithoutAdminUniversitasInput> | EventCreateWithoutAdminUniversitasInput[] | EventUncheckedCreateWithoutAdminUniversitasInput[]
    connectOrCreate?: EventCreateOrConnectWithoutAdminUniversitasInput | EventCreateOrConnectWithoutAdminUniversitasInput[]
    createMany?: EventCreateManyAdminUniversitasInputEnvelope
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
  }

  export type NewsCreateNestedManyWithoutAdminUniversitasInput = {
    create?: XOR<NewsCreateWithoutAdminUniversitasInput, NewsUncheckedCreateWithoutAdminUniversitasInput> | NewsCreateWithoutAdminUniversitasInput[] | NewsUncheckedCreateWithoutAdminUniversitasInput[]
    connectOrCreate?: NewsCreateOrConnectWithoutAdminUniversitasInput | NewsCreateOrConnectWithoutAdminUniversitasInput[]
    createMany?: NewsCreateManyAdminUniversitasInputEnvelope
    connect?: NewsWhereUniqueInput | NewsWhereUniqueInput[]
  }

  export type EventCreateNestedManyWithoutAuthorInput = {
    create?: XOR<EventCreateWithoutAuthorInput, EventUncheckedCreateWithoutAuthorInput> | EventCreateWithoutAuthorInput[] | EventUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: EventCreateOrConnectWithoutAuthorInput | EventCreateOrConnectWithoutAuthorInput[]
    createMany?: EventCreateManyAuthorInputEnvelope
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
  }

  export type NewsCreateNestedManyWithoutAuthorInput = {
    create?: XOR<NewsCreateWithoutAuthorInput, NewsUncheckedCreateWithoutAuthorInput> | NewsCreateWithoutAuthorInput[] | NewsUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: NewsCreateOrConnectWithoutAuthorInput | NewsCreateOrConnectWithoutAuthorInput[]
    createMany?: NewsCreateManyAuthorInputEnvelope
    connect?: NewsWhereUniqueInput | NewsWhereUniqueInput[]
  }

  export type AlumniProgramCreateNestedManyWithoutAuthorInput = {
    create?: XOR<AlumniProgramCreateWithoutAuthorInput, AlumniProgramUncheckedCreateWithoutAuthorInput> | AlumniProgramCreateWithoutAuthorInput[] | AlumniProgramUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: AlumniProgramCreateOrConnectWithoutAuthorInput | AlumniProgramCreateOrConnectWithoutAuthorInput[]
    createMany?: AlumniProgramCreateManyAuthorInputEnvelope
    connect?: AlumniProgramWhereUniqueInput | AlumniProgramWhereUniqueInput[]
  }

  export type AlumniProgramCreateNestedManyWithoutAdminProdiInput = {
    create?: XOR<AlumniProgramCreateWithoutAdminProdiInput, AlumniProgramUncheckedCreateWithoutAdminProdiInput> | AlumniProgramCreateWithoutAdminProdiInput[] | AlumniProgramUncheckedCreateWithoutAdminProdiInput[]
    connectOrCreate?: AlumniProgramCreateOrConnectWithoutAdminProdiInput | AlumniProgramCreateOrConnectWithoutAdminProdiInput[]
    createMany?: AlumniProgramCreateManyAdminProdiInputEnvelope
    connect?: AlumniProgramWhereUniqueInput | AlumniProgramWhereUniqueInput[]
  }

  export type AlumniProgramCreateNestedManyWithoutAdminUniversitasInput = {
    create?: XOR<AlumniProgramCreateWithoutAdminUniversitasInput, AlumniProgramUncheckedCreateWithoutAdminUniversitasInput> | AlumniProgramCreateWithoutAdminUniversitasInput[] | AlumniProgramUncheckedCreateWithoutAdminUniversitasInput[]
    connectOrCreate?: AlumniProgramCreateOrConnectWithoutAdminUniversitasInput | AlumniProgramCreateOrConnectWithoutAdminUniversitasInput[]
    createMany?: AlumniProgramCreateManyAdminUniversitasInputEnvelope
    connect?: AlumniProgramWhereUniqueInput | AlumniProgramWhereUniqueInput[]
  }

  export type ProfileCreateNestedOneWithoutUserInput = {
    create?: XOR<ProfileCreateWithoutUserInput, ProfileUncheckedCreateWithoutUserInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutUserInput
    connect?: ProfileWhereUniqueInput
  }

  export type EventUncheckedCreateNestedManyWithoutAdminUniversitasInput = {
    create?: XOR<EventCreateWithoutAdminUniversitasInput, EventUncheckedCreateWithoutAdminUniversitasInput> | EventCreateWithoutAdminUniversitasInput[] | EventUncheckedCreateWithoutAdminUniversitasInput[]
    connectOrCreate?: EventCreateOrConnectWithoutAdminUniversitasInput | EventCreateOrConnectWithoutAdminUniversitasInput[]
    createMany?: EventCreateManyAdminUniversitasInputEnvelope
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
  }

  export type NewsUncheckedCreateNestedManyWithoutAdminUniversitasInput = {
    create?: XOR<NewsCreateWithoutAdminUniversitasInput, NewsUncheckedCreateWithoutAdminUniversitasInput> | NewsCreateWithoutAdminUniversitasInput[] | NewsUncheckedCreateWithoutAdminUniversitasInput[]
    connectOrCreate?: NewsCreateOrConnectWithoutAdminUniversitasInput | NewsCreateOrConnectWithoutAdminUniversitasInput[]
    createMany?: NewsCreateManyAdminUniversitasInputEnvelope
    connect?: NewsWhereUniqueInput | NewsWhereUniqueInput[]
  }

  export type EventUncheckedCreateNestedManyWithoutAuthorInput = {
    create?: XOR<EventCreateWithoutAuthorInput, EventUncheckedCreateWithoutAuthorInput> | EventCreateWithoutAuthorInput[] | EventUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: EventCreateOrConnectWithoutAuthorInput | EventCreateOrConnectWithoutAuthorInput[]
    createMany?: EventCreateManyAuthorInputEnvelope
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
  }

  export type NewsUncheckedCreateNestedManyWithoutAuthorInput = {
    create?: XOR<NewsCreateWithoutAuthorInput, NewsUncheckedCreateWithoutAuthorInput> | NewsCreateWithoutAuthorInput[] | NewsUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: NewsCreateOrConnectWithoutAuthorInput | NewsCreateOrConnectWithoutAuthorInput[]
    createMany?: NewsCreateManyAuthorInputEnvelope
    connect?: NewsWhereUniqueInput | NewsWhereUniqueInput[]
  }

  export type AlumniProgramUncheckedCreateNestedManyWithoutAuthorInput = {
    create?: XOR<AlumniProgramCreateWithoutAuthorInput, AlumniProgramUncheckedCreateWithoutAuthorInput> | AlumniProgramCreateWithoutAuthorInput[] | AlumniProgramUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: AlumniProgramCreateOrConnectWithoutAuthorInput | AlumniProgramCreateOrConnectWithoutAuthorInput[]
    createMany?: AlumniProgramCreateManyAuthorInputEnvelope
    connect?: AlumniProgramWhereUniqueInput | AlumniProgramWhereUniqueInput[]
  }

  export type AlumniProgramUncheckedCreateNestedManyWithoutAdminProdiInput = {
    create?: XOR<AlumniProgramCreateWithoutAdminProdiInput, AlumniProgramUncheckedCreateWithoutAdminProdiInput> | AlumniProgramCreateWithoutAdminProdiInput[] | AlumniProgramUncheckedCreateWithoutAdminProdiInput[]
    connectOrCreate?: AlumniProgramCreateOrConnectWithoutAdminProdiInput | AlumniProgramCreateOrConnectWithoutAdminProdiInput[]
    createMany?: AlumniProgramCreateManyAdminProdiInputEnvelope
    connect?: AlumniProgramWhereUniqueInput | AlumniProgramWhereUniqueInput[]
  }

  export type AlumniProgramUncheckedCreateNestedManyWithoutAdminUniversitasInput = {
    create?: XOR<AlumniProgramCreateWithoutAdminUniversitasInput, AlumniProgramUncheckedCreateWithoutAdminUniversitasInput> | AlumniProgramCreateWithoutAdminUniversitasInput[] | AlumniProgramUncheckedCreateWithoutAdminUniversitasInput[]
    connectOrCreate?: AlumniProgramCreateOrConnectWithoutAdminUniversitasInput | AlumniProgramCreateOrConnectWithoutAdminUniversitasInput[]
    createMany?: AlumniProgramCreateManyAdminUniversitasInputEnvelope
    connect?: AlumniProgramWhereUniqueInput | AlumniProgramWhereUniqueInput[]
  }

  export type ProfileUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<ProfileCreateWithoutUserInput, ProfileUncheckedCreateWithoutUserInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutUserInput
    connect?: ProfileWhereUniqueInput
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type RoleUpdateOneRequiredWithoutUsersNestedInput = {
    create?: XOR<RoleCreateWithoutUsersInput, RoleUncheckedCreateWithoutUsersInput>
    connectOrCreate?: RoleCreateOrConnectWithoutUsersInput
    upsert?: RoleUpsertWithoutUsersInput
    connect?: RoleWhereUniqueInput
    update?: XOR<XOR<RoleUpdateToOneWithWhereWithoutUsersInput, RoleUpdateWithoutUsersInput>, RoleUncheckedUpdateWithoutUsersInput>
  }

  export type EventUpdateManyWithoutAdminUniversitasNestedInput = {
    create?: XOR<EventCreateWithoutAdminUniversitasInput, EventUncheckedCreateWithoutAdminUniversitasInput> | EventCreateWithoutAdminUniversitasInput[] | EventUncheckedCreateWithoutAdminUniversitasInput[]
    connectOrCreate?: EventCreateOrConnectWithoutAdminUniversitasInput | EventCreateOrConnectWithoutAdminUniversitasInput[]
    upsert?: EventUpsertWithWhereUniqueWithoutAdminUniversitasInput | EventUpsertWithWhereUniqueWithoutAdminUniversitasInput[]
    createMany?: EventCreateManyAdminUniversitasInputEnvelope
    set?: EventWhereUniqueInput | EventWhereUniqueInput[]
    disconnect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    delete?: EventWhereUniqueInput | EventWhereUniqueInput[]
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    update?: EventUpdateWithWhereUniqueWithoutAdminUniversitasInput | EventUpdateWithWhereUniqueWithoutAdminUniversitasInput[]
    updateMany?: EventUpdateManyWithWhereWithoutAdminUniversitasInput | EventUpdateManyWithWhereWithoutAdminUniversitasInput[]
    deleteMany?: EventScalarWhereInput | EventScalarWhereInput[]
  }

  export type NewsUpdateManyWithoutAdminUniversitasNestedInput = {
    create?: XOR<NewsCreateWithoutAdminUniversitasInput, NewsUncheckedCreateWithoutAdminUniversitasInput> | NewsCreateWithoutAdminUniversitasInput[] | NewsUncheckedCreateWithoutAdminUniversitasInput[]
    connectOrCreate?: NewsCreateOrConnectWithoutAdminUniversitasInput | NewsCreateOrConnectWithoutAdminUniversitasInput[]
    upsert?: NewsUpsertWithWhereUniqueWithoutAdminUniversitasInput | NewsUpsertWithWhereUniqueWithoutAdminUniversitasInput[]
    createMany?: NewsCreateManyAdminUniversitasInputEnvelope
    set?: NewsWhereUniqueInput | NewsWhereUniqueInput[]
    disconnect?: NewsWhereUniqueInput | NewsWhereUniqueInput[]
    delete?: NewsWhereUniqueInput | NewsWhereUniqueInput[]
    connect?: NewsWhereUniqueInput | NewsWhereUniqueInput[]
    update?: NewsUpdateWithWhereUniqueWithoutAdminUniversitasInput | NewsUpdateWithWhereUniqueWithoutAdminUniversitasInput[]
    updateMany?: NewsUpdateManyWithWhereWithoutAdminUniversitasInput | NewsUpdateManyWithWhereWithoutAdminUniversitasInput[]
    deleteMany?: NewsScalarWhereInput | NewsScalarWhereInput[]
  }

  export type EventUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<EventCreateWithoutAuthorInput, EventUncheckedCreateWithoutAuthorInput> | EventCreateWithoutAuthorInput[] | EventUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: EventCreateOrConnectWithoutAuthorInput | EventCreateOrConnectWithoutAuthorInput[]
    upsert?: EventUpsertWithWhereUniqueWithoutAuthorInput | EventUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: EventCreateManyAuthorInputEnvelope
    set?: EventWhereUniqueInput | EventWhereUniqueInput[]
    disconnect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    delete?: EventWhereUniqueInput | EventWhereUniqueInput[]
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    update?: EventUpdateWithWhereUniqueWithoutAuthorInput | EventUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: EventUpdateManyWithWhereWithoutAuthorInput | EventUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: EventScalarWhereInput | EventScalarWhereInput[]
  }

  export type NewsUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<NewsCreateWithoutAuthorInput, NewsUncheckedCreateWithoutAuthorInput> | NewsCreateWithoutAuthorInput[] | NewsUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: NewsCreateOrConnectWithoutAuthorInput | NewsCreateOrConnectWithoutAuthorInput[]
    upsert?: NewsUpsertWithWhereUniqueWithoutAuthorInput | NewsUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: NewsCreateManyAuthorInputEnvelope
    set?: NewsWhereUniqueInput | NewsWhereUniqueInput[]
    disconnect?: NewsWhereUniqueInput | NewsWhereUniqueInput[]
    delete?: NewsWhereUniqueInput | NewsWhereUniqueInput[]
    connect?: NewsWhereUniqueInput | NewsWhereUniqueInput[]
    update?: NewsUpdateWithWhereUniqueWithoutAuthorInput | NewsUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: NewsUpdateManyWithWhereWithoutAuthorInput | NewsUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: NewsScalarWhereInput | NewsScalarWhereInput[]
  }

  export type AlumniProgramUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<AlumniProgramCreateWithoutAuthorInput, AlumniProgramUncheckedCreateWithoutAuthorInput> | AlumniProgramCreateWithoutAuthorInput[] | AlumniProgramUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: AlumniProgramCreateOrConnectWithoutAuthorInput | AlumniProgramCreateOrConnectWithoutAuthorInput[]
    upsert?: AlumniProgramUpsertWithWhereUniqueWithoutAuthorInput | AlumniProgramUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: AlumniProgramCreateManyAuthorInputEnvelope
    set?: AlumniProgramWhereUniqueInput | AlumniProgramWhereUniqueInput[]
    disconnect?: AlumniProgramWhereUniqueInput | AlumniProgramWhereUniqueInput[]
    delete?: AlumniProgramWhereUniqueInput | AlumniProgramWhereUniqueInput[]
    connect?: AlumniProgramWhereUniqueInput | AlumniProgramWhereUniqueInput[]
    update?: AlumniProgramUpdateWithWhereUniqueWithoutAuthorInput | AlumniProgramUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: AlumniProgramUpdateManyWithWhereWithoutAuthorInput | AlumniProgramUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: AlumniProgramScalarWhereInput | AlumniProgramScalarWhereInput[]
  }

  export type AlumniProgramUpdateManyWithoutAdminProdiNestedInput = {
    create?: XOR<AlumniProgramCreateWithoutAdminProdiInput, AlumniProgramUncheckedCreateWithoutAdminProdiInput> | AlumniProgramCreateWithoutAdminProdiInput[] | AlumniProgramUncheckedCreateWithoutAdminProdiInput[]
    connectOrCreate?: AlumniProgramCreateOrConnectWithoutAdminProdiInput | AlumniProgramCreateOrConnectWithoutAdminProdiInput[]
    upsert?: AlumniProgramUpsertWithWhereUniqueWithoutAdminProdiInput | AlumniProgramUpsertWithWhereUniqueWithoutAdminProdiInput[]
    createMany?: AlumniProgramCreateManyAdminProdiInputEnvelope
    set?: AlumniProgramWhereUniqueInput | AlumniProgramWhereUniqueInput[]
    disconnect?: AlumniProgramWhereUniqueInput | AlumniProgramWhereUniqueInput[]
    delete?: AlumniProgramWhereUniqueInput | AlumniProgramWhereUniqueInput[]
    connect?: AlumniProgramWhereUniqueInput | AlumniProgramWhereUniqueInput[]
    update?: AlumniProgramUpdateWithWhereUniqueWithoutAdminProdiInput | AlumniProgramUpdateWithWhereUniqueWithoutAdminProdiInput[]
    updateMany?: AlumniProgramUpdateManyWithWhereWithoutAdminProdiInput | AlumniProgramUpdateManyWithWhereWithoutAdminProdiInput[]
    deleteMany?: AlumniProgramScalarWhereInput | AlumniProgramScalarWhereInput[]
  }

  export type AlumniProgramUpdateManyWithoutAdminUniversitasNestedInput = {
    create?: XOR<AlumniProgramCreateWithoutAdminUniversitasInput, AlumniProgramUncheckedCreateWithoutAdminUniversitasInput> | AlumniProgramCreateWithoutAdminUniversitasInput[] | AlumniProgramUncheckedCreateWithoutAdminUniversitasInput[]
    connectOrCreate?: AlumniProgramCreateOrConnectWithoutAdminUniversitasInput | AlumniProgramCreateOrConnectWithoutAdminUniversitasInput[]
    upsert?: AlumniProgramUpsertWithWhereUniqueWithoutAdminUniversitasInput | AlumniProgramUpsertWithWhereUniqueWithoutAdminUniversitasInput[]
    createMany?: AlumniProgramCreateManyAdminUniversitasInputEnvelope
    set?: AlumniProgramWhereUniqueInput | AlumniProgramWhereUniqueInput[]
    disconnect?: AlumniProgramWhereUniqueInput | AlumniProgramWhereUniqueInput[]
    delete?: AlumniProgramWhereUniqueInput | AlumniProgramWhereUniqueInput[]
    connect?: AlumniProgramWhereUniqueInput | AlumniProgramWhereUniqueInput[]
    update?: AlumniProgramUpdateWithWhereUniqueWithoutAdminUniversitasInput | AlumniProgramUpdateWithWhereUniqueWithoutAdminUniversitasInput[]
    updateMany?: AlumniProgramUpdateManyWithWhereWithoutAdminUniversitasInput | AlumniProgramUpdateManyWithWhereWithoutAdminUniversitasInput[]
    deleteMany?: AlumniProgramScalarWhereInput | AlumniProgramScalarWhereInput[]
  }

  export type ProfileUpdateOneWithoutUserNestedInput = {
    create?: XOR<ProfileCreateWithoutUserInput, ProfileUncheckedCreateWithoutUserInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutUserInput
    upsert?: ProfileUpsertWithoutUserInput
    disconnect?: ProfileWhereInput | boolean
    delete?: ProfileWhereInput | boolean
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutUserInput, ProfileUpdateWithoutUserInput>, ProfileUncheckedUpdateWithoutUserInput>
  }

  export type EventUncheckedUpdateManyWithoutAdminUniversitasNestedInput = {
    create?: XOR<EventCreateWithoutAdminUniversitasInput, EventUncheckedCreateWithoutAdminUniversitasInput> | EventCreateWithoutAdminUniversitasInput[] | EventUncheckedCreateWithoutAdminUniversitasInput[]
    connectOrCreate?: EventCreateOrConnectWithoutAdminUniversitasInput | EventCreateOrConnectWithoutAdminUniversitasInput[]
    upsert?: EventUpsertWithWhereUniqueWithoutAdminUniversitasInput | EventUpsertWithWhereUniqueWithoutAdminUniversitasInput[]
    createMany?: EventCreateManyAdminUniversitasInputEnvelope
    set?: EventWhereUniqueInput | EventWhereUniqueInput[]
    disconnect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    delete?: EventWhereUniqueInput | EventWhereUniqueInput[]
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    update?: EventUpdateWithWhereUniqueWithoutAdminUniversitasInput | EventUpdateWithWhereUniqueWithoutAdminUniversitasInput[]
    updateMany?: EventUpdateManyWithWhereWithoutAdminUniversitasInput | EventUpdateManyWithWhereWithoutAdminUniversitasInput[]
    deleteMany?: EventScalarWhereInput | EventScalarWhereInput[]
  }

  export type NewsUncheckedUpdateManyWithoutAdminUniversitasNestedInput = {
    create?: XOR<NewsCreateWithoutAdminUniversitasInput, NewsUncheckedCreateWithoutAdminUniversitasInput> | NewsCreateWithoutAdminUniversitasInput[] | NewsUncheckedCreateWithoutAdminUniversitasInput[]
    connectOrCreate?: NewsCreateOrConnectWithoutAdminUniversitasInput | NewsCreateOrConnectWithoutAdminUniversitasInput[]
    upsert?: NewsUpsertWithWhereUniqueWithoutAdminUniversitasInput | NewsUpsertWithWhereUniqueWithoutAdminUniversitasInput[]
    createMany?: NewsCreateManyAdminUniversitasInputEnvelope
    set?: NewsWhereUniqueInput | NewsWhereUniqueInput[]
    disconnect?: NewsWhereUniqueInput | NewsWhereUniqueInput[]
    delete?: NewsWhereUniqueInput | NewsWhereUniqueInput[]
    connect?: NewsWhereUniqueInput | NewsWhereUniqueInput[]
    update?: NewsUpdateWithWhereUniqueWithoutAdminUniversitasInput | NewsUpdateWithWhereUniqueWithoutAdminUniversitasInput[]
    updateMany?: NewsUpdateManyWithWhereWithoutAdminUniversitasInput | NewsUpdateManyWithWhereWithoutAdminUniversitasInput[]
    deleteMany?: NewsScalarWhereInput | NewsScalarWhereInput[]
  }

  export type EventUncheckedUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<EventCreateWithoutAuthorInput, EventUncheckedCreateWithoutAuthorInput> | EventCreateWithoutAuthorInput[] | EventUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: EventCreateOrConnectWithoutAuthorInput | EventCreateOrConnectWithoutAuthorInput[]
    upsert?: EventUpsertWithWhereUniqueWithoutAuthorInput | EventUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: EventCreateManyAuthorInputEnvelope
    set?: EventWhereUniqueInput | EventWhereUniqueInput[]
    disconnect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    delete?: EventWhereUniqueInput | EventWhereUniqueInput[]
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    update?: EventUpdateWithWhereUniqueWithoutAuthorInput | EventUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: EventUpdateManyWithWhereWithoutAuthorInput | EventUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: EventScalarWhereInput | EventScalarWhereInput[]
  }

  export type NewsUncheckedUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<NewsCreateWithoutAuthorInput, NewsUncheckedCreateWithoutAuthorInput> | NewsCreateWithoutAuthorInput[] | NewsUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: NewsCreateOrConnectWithoutAuthorInput | NewsCreateOrConnectWithoutAuthorInput[]
    upsert?: NewsUpsertWithWhereUniqueWithoutAuthorInput | NewsUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: NewsCreateManyAuthorInputEnvelope
    set?: NewsWhereUniqueInput | NewsWhereUniqueInput[]
    disconnect?: NewsWhereUniqueInput | NewsWhereUniqueInput[]
    delete?: NewsWhereUniqueInput | NewsWhereUniqueInput[]
    connect?: NewsWhereUniqueInput | NewsWhereUniqueInput[]
    update?: NewsUpdateWithWhereUniqueWithoutAuthorInput | NewsUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: NewsUpdateManyWithWhereWithoutAuthorInput | NewsUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: NewsScalarWhereInput | NewsScalarWhereInput[]
  }

  export type AlumniProgramUncheckedUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<AlumniProgramCreateWithoutAuthorInput, AlumniProgramUncheckedCreateWithoutAuthorInput> | AlumniProgramCreateWithoutAuthorInput[] | AlumniProgramUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: AlumniProgramCreateOrConnectWithoutAuthorInput | AlumniProgramCreateOrConnectWithoutAuthorInput[]
    upsert?: AlumniProgramUpsertWithWhereUniqueWithoutAuthorInput | AlumniProgramUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: AlumniProgramCreateManyAuthorInputEnvelope
    set?: AlumniProgramWhereUniqueInput | AlumniProgramWhereUniqueInput[]
    disconnect?: AlumniProgramWhereUniqueInput | AlumniProgramWhereUniqueInput[]
    delete?: AlumniProgramWhereUniqueInput | AlumniProgramWhereUniqueInput[]
    connect?: AlumniProgramWhereUniqueInput | AlumniProgramWhereUniqueInput[]
    update?: AlumniProgramUpdateWithWhereUniqueWithoutAuthorInput | AlumniProgramUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: AlumniProgramUpdateManyWithWhereWithoutAuthorInput | AlumniProgramUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: AlumniProgramScalarWhereInput | AlumniProgramScalarWhereInput[]
  }

  export type AlumniProgramUncheckedUpdateManyWithoutAdminProdiNestedInput = {
    create?: XOR<AlumniProgramCreateWithoutAdminProdiInput, AlumniProgramUncheckedCreateWithoutAdminProdiInput> | AlumniProgramCreateWithoutAdminProdiInput[] | AlumniProgramUncheckedCreateWithoutAdminProdiInput[]
    connectOrCreate?: AlumniProgramCreateOrConnectWithoutAdminProdiInput | AlumniProgramCreateOrConnectWithoutAdminProdiInput[]
    upsert?: AlumniProgramUpsertWithWhereUniqueWithoutAdminProdiInput | AlumniProgramUpsertWithWhereUniqueWithoutAdminProdiInput[]
    createMany?: AlumniProgramCreateManyAdminProdiInputEnvelope
    set?: AlumniProgramWhereUniqueInput | AlumniProgramWhereUniqueInput[]
    disconnect?: AlumniProgramWhereUniqueInput | AlumniProgramWhereUniqueInput[]
    delete?: AlumniProgramWhereUniqueInput | AlumniProgramWhereUniqueInput[]
    connect?: AlumniProgramWhereUniqueInput | AlumniProgramWhereUniqueInput[]
    update?: AlumniProgramUpdateWithWhereUniqueWithoutAdminProdiInput | AlumniProgramUpdateWithWhereUniqueWithoutAdminProdiInput[]
    updateMany?: AlumniProgramUpdateManyWithWhereWithoutAdminProdiInput | AlumniProgramUpdateManyWithWhereWithoutAdminProdiInput[]
    deleteMany?: AlumniProgramScalarWhereInput | AlumniProgramScalarWhereInput[]
  }

  export type AlumniProgramUncheckedUpdateManyWithoutAdminUniversitasNestedInput = {
    create?: XOR<AlumniProgramCreateWithoutAdminUniversitasInput, AlumniProgramUncheckedCreateWithoutAdminUniversitasInput> | AlumniProgramCreateWithoutAdminUniversitasInput[] | AlumniProgramUncheckedCreateWithoutAdminUniversitasInput[]
    connectOrCreate?: AlumniProgramCreateOrConnectWithoutAdminUniversitasInput | AlumniProgramCreateOrConnectWithoutAdminUniversitasInput[]
    upsert?: AlumniProgramUpsertWithWhereUniqueWithoutAdminUniversitasInput | AlumniProgramUpsertWithWhereUniqueWithoutAdminUniversitasInput[]
    createMany?: AlumniProgramCreateManyAdminUniversitasInputEnvelope
    set?: AlumniProgramWhereUniqueInput | AlumniProgramWhereUniqueInput[]
    disconnect?: AlumniProgramWhereUniqueInput | AlumniProgramWhereUniqueInput[]
    delete?: AlumniProgramWhereUniqueInput | AlumniProgramWhereUniqueInput[]
    connect?: AlumniProgramWhereUniqueInput | AlumniProgramWhereUniqueInput[]
    update?: AlumniProgramUpdateWithWhereUniqueWithoutAdminUniversitasInput | AlumniProgramUpdateWithWhereUniqueWithoutAdminUniversitasInput[]
    updateMany?: AlumniProgramUpdateManyWithWhereWithoutAdminUniversitasInput | AlumniProgramUpdateManyWithWhereWithoutAdminUniversitasInput[]
    deleteMany?: AlumniProgramScalarWhereInput | AlumniProgramScalarWhereInput[]
  }

  export type ProfileUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<ProfileCreateWithoutUserInput, ProfileUncheckedCreateWithoutUserInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutUserInput
    upsert?: ProfileUpsertWithoutUserInput
    disconnect?: ProfileWhereInput | boolean
    delete?: ProfileWhereInput | boolean
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutUserInput, ProfileUpdateWithoutUserInput>, ProfileUncheckedUpdateWithoutUserInput>
  }

  export type UserCreateNestedManyWithoutRoleInput = {
    create?: XOR<UserCreateWithoutRoleInput, UserUncheckedCreateWithoutRoleInput> | UserCreateWithoutRoleInput[] | UserUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: UserCreateOrConnectWithoutRoleInput | UserCreateOrConnectWithoutRoleInput[]
    createMany?: UserCreateManyRoleInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutRoleInput = {
    create?: XOR<UserCreateWithoutRoleInput, UserUncheckedCreateWithoutRoleInput> | UserCreateWithoutRoleInput[] | UserUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: UserCreateOrConnectWithoutRoleInput | UserCreateOrConnectWithoutRoleInput[]
    createMany?: UserCreateManyRoleInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type UserUpdateManyWithoutRoleNestedInput = {
    create?: XOR<UserCreateWithoutRoleInput, UserUncheckedCreateWithoutRoleInput> | UserCreateWithoutRoleInput[] | UserUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: UserCreateOrConnectWithoutRoleInput | UserCreateOrConnectWithoutRoleInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutRoleInput | UserUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: UserCreateManyRoleInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutRoleInput | UserUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: UserUpdateManyWithWhereWithoutRoleInput | UserUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutRoleNestedInput = {
    create?: XOR<UserCreateWithoutRoleInput, UserUncheckedCreateWithoutRoleInput> | UserCreateWithoutRoleInput[] | UserUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: UserCreateOrConnectWithoutRoleInput | UserCreateOrConnectWithoutRoleInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutRoleInput | UserUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: UserCreateManyRoleInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutRoleInput | UserUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: UserUpdateManyWithWhereWithoutRoleInput | UserUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutProfileInput = {
    create?: XOR<UserCreateWithoutProfileInput, UserUncheckedCreateWithoutProfileInput>
    connectOrCreate?: UserCreateOrConnectWithoutProfileInput
    connect?: UserWhereUniqueInput
  }

  export type StudyProgramCreateNestedOneWithoutProfilesInput = {
    create?: XOR<StudyProgramCreateWithoutProfilesInput, StudyProgramUncheckedCreateWithoutProfilesInput>
    connectOrCreate?: StudyProgramCreateOrConnectWithoutProfilesInput
    connect?: StudyProgramWhereUniqueInput
  }

  export type SensitiveStudentDataCreateNestedOneWithoutProfileInput = {
    create?: XOR<SensitiveStudentDataCreateWithoutProfileInput, SensitiveStudentDataUncheckedCreateWithoutProfileInput>
    connectOrCreate?: SensitiveStudentDataCreateOrConnectWithoutProfileInput
    connect?: SensitiveStudentDataWhereUniqueInput
  }

  export type TracerStudyCreateNestedOneWithoutProfileInput = {
    create?: XOR<TracerStudyCreateWithoutProfileInput, TracerStudyUncheckedCreateWithoutProfileInput>
    connectOrCreate?: TracerStudyCreateOrConnectWithoutProfileInput
    connect?: TracerStudyWhereUniqueInput
  }

  export type SensitiveStudentDataUncheckedCreateNestedOneWithoutProfileInput = {
    create?: XOR<SensitiveStudentDataCreateWithoutProfileInput, SensitiveStudentDataUncheckedCreateWithoutProfileInput>
    connectOrCreate?: SensitiveStudentDataCreateOrConnectWithoutProfileInput
    connect?: SensitiveStudentDataWhereUniqueInput
  }

  export type TracerStudyUncheckedCreateNestedOneWithoutProfileInput = {
    create?: XOR<TracerStudyCreateWithoutProfileInput, TracerStudyUncheckedCreateWithoutProfileInput>
    connectOrCreate?: TracerStudyCreateOrConnectWithoutProfileInput
    connect?: TracerStudyWhereUniqueInput
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type UserUpdateOneRequiredWithoutProfileNestedInput = {
    create?: XOR<UserCreateWithoutProfileInput, UserUncheckedCreateWithoutProfileInput>
    connectOrCreate?: UserCreateOrConnectWithoutProfileInput
    upsert?: UserUpsertWithoutProfileInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutProfileInput, UserUpdateWithoutProfileInput>, UserUncheckedUpdateWithoutProfileInput>
  }

  export type StudyProgramUpdateOneRequiredWithoutProfilesNestedInput = {
    create?: XOR<StudyProgramCreateWithoutProfilesInput, StudyProgramUncheckedCreateWithoutProfilesInput>
    connectOrCreate?: StudyProgramCreateOrConnectWithoutProfilesInput
    upsert?: StudyProgramUpsertWithoutProfilesInput
    connect?: StudyProgramWhereUniqueInput
    update?: XOR<XOR<StudyProgramUpdateToOneWithWhereWithoutProfilesInput, StudyProgramUpdateWithoutProfilesInput>, StudyProgramUncheckedUpdateWithoutProfilesInput>
  }

  export type SensitiveStudentDataUpdateOneWithoutProfileNestedInput = {
    create?: XOR<SensitiveStudentDataCreateWithoutProfileInput, SensitiveStudentDataUncheckedCreateWithoutProfileInput>
    connectOrCreate?: SensitiveStudentDataCreateOrConnectWithoutProfileInput
    upsert?: SensitiveStudentDataUpsertWithoutProfileInput
    disconnect?: SensitiveStudentDataWhereInput | boolean
    delete?: SensitiveStudentDataWhereInput | boolean
    connect?: SensitiveStudentDataWhereUniqueInput
    update?: XOR<XOR<SensitiveStudentDataUpdateToOneWithWhereWithoutProfileInput, SensitiveStudentDataUpdateWithoutProfileInput>, SensitiveStudentDataUncheckedUpdateWithoutProfileInput>
  }

  export type TracerStudyUpdateOneWithoutProfileNestedInput = {
    create?: XOR<TracerStudyCreateWithoutProfileInput, TracerStudyUncheckedCreateWithoutProfileInput>
    connectOrCreate?: TracerStudyCreateOrConnectWithoutProfileInput
    upsert?: TracerStudyUpsertWithoutProfileInput
    disconnect?: TracerStudyWhereInput | boolean
    delete?: TracerStudyWhereInput | boolean
    connect?: TracerStudyWhereUniqueInput
    update?: XOR<XOR<TracerStudyUpdateToOneWithWhereWithoutProfileInput, TracerStudyUpdateWithoutProfileInput>, TracerStudyUncheckedUpdateWithoutProfileInput>
  }

  export type SensitiveStudentDataUncheckedUpdateOneWithoutProfileNestedInput = {
    create?: XOR<SensitiveStudentDataCreateWithoutProfileInput, SensitiveStudentDataUncheckedCreateWithoutProfileInput>
    connectOrCreate?: SensitiveStudentDataCreateOrConnectWithoutProfileInput
    upsert?: SensitiveStudentDataUpsertWithoutProfileInput
    disconnect?: SensitiveStudentDataWhereInput | boolean
    delete?: SensitiveStudentDataWhereInput | boolean
    connect?: SensitiveStudentDataWhereUniqueInput
    update?: XOR<XOR<SensitiveStudentDataUpdateToOneWithWhereWithoutProfileInput, SensitiveStudentDataUpdateWithoutProfileInput>, SensitiveStudentDataUncheckedUpdateWithoutProfileInput>
  }

  export type TracerStudyUncheckedUpdateOneWithoutProfileNestedInput = {
    create?: XOR<TracerStudyCreateWithoutProfileInput, TracerStudyUncheckedCreateWithoutProfileInput>
    connectOrCreate?: TracerStudyCreateOrConnectWithoutProfileInput
    upsert?: TracerStudyUpsertWithoutProfileInput
    disconnect?: TracerStudyWhereInput | boolean
    delete?: TracerStudyWhereInput | boolean
    connect?: TracerStudyWhereUniqueInput
    update?: XOR<XOR<TracerStudyUpdateToOneWithWhereWithoutProfileInput, TracerStudyUpdateWithoutProfileInput>, TracerStudyUncheckedUpdateWithoutProfileInput>
  }

  export type ProfileCreateNestedManyWithoutStudyProgramInput = {
    create?: XOR<ProfileCreateWithoutStudyProgramInput, ProfileUncheckedCreateWithoutStudyProgramInput> | ProfileCreateWithoutStudyProgramInput[] | ProfileUncheckedCreateWithoutStudyProgramInput[]
    connectOrCreate?: ProfileCreateOrConnectWithoutStudyProgramInput | ProfileCreateOrConnectWithoutStudyProgramInput[]
    createMany?: ProfileCreateManyStudyProgramInputEnvelope
    connect?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
  }

  export type ProfileUncheckedCreateNestedManyWithoutStudyProgramInput = {
    create?: XOR<ProfileCreateWithoutStudyProgramInput, ProfileUncheckedCreateWithoutStudyProgramInput> | ProfileCreateWithoutStudyProgramInput[] | ProfileUncheckedCreateWithoutStudyProgramInput[]
    connectOrCreate?: ProfileCreateOrConnectWithoutStudyProgramInput | ProfileCreateOrConnectWithoutStudyProgramInput[]
    createMany?: ProfileCreateManyStudyProgramInputEnvelope
    connect?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
  }

  export type ProfileUpdateManyWithoutStudyProgramNestedInput = {
    create?: XOR<ProfileCreateWithoutStudyProgramInput, ProfileUncheckedCreateWithoutStudyProgramInput> | ProfileCreateWithoutStudyProgramInput[] | ProfileUncheckedCreateWithoutStudyProgramInput[]
    connectOrCreate?: ProfileCreateOrConnectWithoutStudyProgramInput | ProfileCreateOrConnectWithoutStudyProgramInput[]
    upsert?: ProfileUpsertWithWhereUniqueWithoutStudyProgramInput | ProfileUpsertWithWhereUniqueWithoutStudyProgramInput[]
    createMany?: ProfileCreateManyStudyProgramInputEnvelope
    set?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    disconnect?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    delete?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    connect?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    update?: ProfileUpdateWithWhereUniqueWithoutStudyProgramInput | ProfileUpdateWithWhereUniqueWithoutStudyProgramInput[]
    updateMany?: ProfileUpdateManyWithWhereWithoutStudyProgramInput | ProfileUpdateManyWithWhereWithoutStudyProgramInput[]
    deleteMany?: ProfileScalarWhereInput | ProfileScalarWhereInput[]
  }

  export type ProfileUncheckedUpdateManyWithoutStudyProgramNestedInput = {
    create?: XOR<ProfileCreateWithoutStudyProgramInput, ProfileUncheckedCreateWithoutStudyProgramInput> | ProfileCreateWithoutStudyProgramInput[] | ProfileUncheckedCreateWithoutStudyProgramInput[]
    connectOrCreate?: ProfileCreateOrConnectWithoutStudyProgramInput | ProfileCreateOrConnectWithoutStudyProgramInput[]
    upsert?: ProfileUpsertWithWhereUniqueWithoutStudyProgramInput | ProfileUpsertWithWhereUniqueWithoutStudyProgramInput[]
    createMany?: ProfileCreateManyStudyProgramInputEnvelope
    set?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    disconnect?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    delete?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    connect?: ProfileWhereUniqueInput | ProfileWhereUniqueInput[]
    update?: ProfileUpdateWithWhereUniqueWithoutStudyProgramInput | ProfileUpdateWithWhereUniqueWithoutStudyProgramInput[]
    updateMany?: ProfileUpdateManyWithWhereWithoutStudyProgramInput | ProfileUpdateManyWithWhereWithoutStudyProgramInput[]
    deleteMany?: ProfileScalarWhereInput | ProfileScalarWhereInput[]
  }

  export type ProfileCreateNestedOneWithoutSensitive_student_dataInput = {
    create?: XOR<ProfileCreateWithoutSensitive_student_dataInput, ProfileUncheckedCreateWithoutSensitive_student_dataInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutSensitive_student_dataInput
    connect?: ProfileWhereUniqueInput
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type ProfileUpdateOneRequiredWithoutSensitive_student_dataNestedInput = {
    create?: XOR<ProfileCreateWithoutSensitive_student_dataInput, ProfileUncheckedCreateWithoutSensitive_student_dataInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutSensitive_student_dataInput
    upsert?: ProfileUpsertWithoutSensitive_student_dataInput
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutSensitive_student_dataInput, ProfileUpdateWithoutSensitive_student_dataInput>, ProfileUncheckedUpdateWithoutSensitive_student_dataInput>
  }

  export type UserCreateNestedOneWithoutAuthoredNewsInput = {
    create?: XOR<UserCreateWithoutAuthoredNewsInput, UserUncheckedCreateWithoutAuthoredNewsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAuthoredNewsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutNewsAsUniversitasInput = {
    create?: XOR<UserCreateWithoutNewsAsUniversitasInput, UserUncheckedCreateWithoutNewsAsUniversitasInput>
    connectOrCreate?: UserCreateOrConnectWithoutNewsAsUniversitasInput
    connect?: UserWhereUniqueInput
  }

  export type EnumNewsStatusFieldUpdateOperationsInput = {
    set?: $Enums.NewsStatus
  }

  export type UserUpdateOneRequiredWithoutAuthoredNewsNestedInput = {
    create?: XOR<UserCreateWithoutAuthoredNewsInput, UserUncheckedCreateWithoutAuthoredNewsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAuthoredNewsInput
    upsert?: UserUpsertWithoutAuthoredNewsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAuthoredNewsInput, UserUpdateWithoutAuthoredNewsInput>, UserUncheckedUpdateWithoutAuthoredNewsInput>
  }

  export type UserUpdateOneWithoutNewsAsUniversitasNestedInput = {
    create?: XOR<UserCreateWithoutNewsAsUniversitasInput, UserUncheckedCreateWithoutNewsAsUniversitasInput>
    connectOrCreate?: UserCreateOrConnectWithoutNewsAsUniversitasInput
    upsert?: UserUpsertWithoutNewsAsUniversitasInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutNewsAsUniversitasInput, UserUpdateWithoutNewsAsUniversitasInput>, UserUncheckedUpdateWithoutNewsAsUniversitasInput>
  }

  export type UserCreateNestedOneWithoutAuthoredEventsInput = {
    create?: XOR<UserCreateWithoutAuthoredEventsInput, UserUncheckedCreateWithoutAuthoredEventsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAuthoredEventsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutEventsAsUniversitasInput = {
    create?: XOR<UserCreateWithoutEventsAsUniversitasInput, UserUncheckedCreateWithoutEventsAsUniversitasInput>
    connectOrCreate?: UserCreateOrConnectWithoutEventsAsUniversitasInput
    connect?: UserWhereUniqueInput
  }

  export type EnumEventStatusFieldUpdateOperationsInput = {
    set?: $Enums.EventStatus
  }

  export type UserUpdateOneRequiredWithoutAuthoredEventsNestedInput = {
    create?: XOR<UserCreateWithoutAuthoredEventsInput, UserUncheckedCreateWithoutAuthoredEventsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAuthoredEventsInput
    upsert?: UserUpsertWithoutAuthoredEventsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAuthoredEventsInput, UserUpdateWithoutAuthoredEventsInput>, UserUncheckedUpdateWithoutAuthoredEventsInput>
  }

  export type UserUpdateOneWithoutEventsAsUniversitasNestedInput = {
    create?: XOR<UserCreateWithoutEventsAsUniversitasInput, UserUncheckedCreateWithoutEventsAsUniversitasInput>
    connectOrCreate?: UserCreateOrConnectWithoutEventsAsUniversitasInput
    upsert?: UserUpsertWithoutEventsAsUniversitasInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutEventsAsUniversitasInput, UserUpdateWithoutEventsAsUniversitasInput>, UserUncheckedUpdateWithoutEventsAsUniversitasInput>
  }

  export type UserCreateNestedOneWithoutAlumniProgramsInput = {
    create?: XOR<UserCreateWithoutAlumniProgramsInput, UserUncheckedCreateWithoutAlumniProgramsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAlumniProgramsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutProdiVerificationsInput = {
    create?: XOR<UserCreateWithoutProdiVerificationsInput, UserUncheckedCreateWithoutProdiVerificationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutProdiVerificationsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUniversityVerificationsInput = {
    create?: XOR<UserCreateWithoutUniversityVerificationsInput, UserUncheckedCreateWithoutUniversityVerificationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUniversityVerificationsInput
    connect?: UserWhereUniqueInput
  }

  export type EnumProgramTypeFieldUpdateOperationsInput = {
    set?: $Enums.ProgramType
  }

  export type EnumAlumniProgramStatusFieldUpdateOperationsInput = {
    set?: $Enums.AlumniProgramStatus
  }

  export type UserUpdateOneRequiredWithoutAlumniProgramsNestedInput = {
    create?: XOR<UserCreateWithoutAlumniProgramsInput, UserUncheckedCreateWithoutAlumniProgramsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAlumniProgramsInput
    upsert?: UserUpsertWithoutAlumniProgramsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAlumniProgramsInput, UserUpdateWithoutAlumniProgramsInput>, UserUncheckedUpdateWithoutAlumniProgramsInput>
  }

  export type UserUpdateOneWithoutProdiVerificationsNestedInput = {
    create?: XOR<UserCreateWithoutProdiVerificationsInput, UserUncheckedCreateWithoutProdiVerificationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutProdiVerificationsInput
    upsert?: UserUpsertWithoutProdiVerificationsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutProdiVerificationsInput, UserUpdateWithoutProdiVerificationsInput>, UserUncheckedUpdateWithoutProdiVerificationsInput>
  }

  export type UserUpdateOneWithoutUniversityVerificationsNestedInput = {
    create?: XOR<UserCreateWithoutUniversityVerificationsInput, UserUncheckedCreateWithoutUniversityVerificationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUniversityVerificationsInput
    upsert?: UserUpsertWithoutUniversityVerificationsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUniversityVerificationsInput, UserUpdateWithoutUniversityVerificationsInput>, UserUncheckedUpdateWithoutUniversityVerificationsInput>
  }

  export type ProfileCreateNestedOneWithoutTracer_studyInput = {
    create?: XOR<ProfileCreateWithoutTracer_studyInput, ProfileUncheckedCreateWithoutTracer_studyInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutTracer_studyInput
    connect?: ProfileWhereUniqueInput
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type ProfileUpdateOneRequiredWithoutTracer_studyNestedInput = {
    create?: XOR<ProfileCreateWithoutTracer_studyInput, ProfileUncheckedCreateWithoutTracer_studyInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutTracer_studyInput
    upsert?: ProfileUpsertWithoutTracer_studyInput
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutTracer_studyInput, ProfileUpdateWithoutTracer_studyInput>, ProfileUncheckedUpdateWithoutTracer_studyInput>
  }

  export type ProductCreateNestedManyWithoutCategoryInput = {
    create?: XOR<ProductCreateWithoutCategoryInput, ProductUncheckedCreateWithoutCategoryInput> | ProductCreateWithoutCategoryInput[] | ProductUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCategoryInput | ProductCreateOrConnectWithoutCategoryInput[]
    createMany?: ProductCreateManyCategoryInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutCategoryInput = {
    create?: XOR<ProductCreateWithoutCategoryInput, ProductUncheckedCreateWithoutCategoryInput> | ProductCreateWithoutCategoryInput[] | ProductUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCategoryInput | ProductCreateOrConnectWithoutCategoryInput[]
    createMany?: ProductCreateManyCategoryInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ProductUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<ProductCreateWithoutCategoryInput, ProductUncheckedCreateWithoutCategoryInput> | ProductCreateWithoutCategoryInput[] | ProductUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCategoryInput | ProductCreateOrConnectWithoutCategoryInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutCategoryInput | ProductUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: ProductCreateManyCategoryInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutCategoryInput | ProductUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutCategoryInput | ProductUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<ProductCreateWithoutCategoryInput, ProductUncheckedCreateWithoutCategoryInput> | ProductCreateWithoutCategoryInput[] | ProductUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCategoryInput | ProductCreateOrConnectWithoutCategoryInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutCategoryInput | ProductUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: ProductCreateManyCategoryInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutCategoryInput | ProductUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutCategoryInput | ProductUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type CategoryCreateNestedOneWithoutProductInput = {
    create?: XOR<CategoryCreateWithoutProductInput, CategoryUncheckedCreateWithoutProductInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutProductInput
    connect?: CategoryWhereUniqueInput
  }

  export type CategoryUpdateOneRequiredWithoutProductNestedInput = {
    create?: XOR<CategoryCreateWithoutProductInput, CategoryUncheckedCreateWithoutProductInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutProductInput
    upsert?: CategoryUpsertWithoutProductInput
    connect?: CategoryWhereUniqueInput
    update?: XOR<XOR<CategoryUpdateToOneWithWhereWithoutProductInput, CategoryUpdateWithoutProductInput>, CategoryUncheckedUpdateWithoutProductInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedEnumNewsStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.NewsStatus | EnumNewsStatusFieldRefInput<$PrismaModel>
    in?: $Enums.NewsStatus[]
    notIn?: $Enums.NewsStatus[]
    not?: NestedEnumNewsStatusFilter<$PrismaModel> | $Enums.NewsStatus
  }

  export type NestedEnumNewsStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.NewsStatus | EnumNewsStatusFieldRefInput<$PrismaModel>
    in?: $Enums.NewsStatus[]
    notIn?: $Enums.NewsStatus[]
    not?: NestedEnumNewsStatusWithAggregatesFilter<$PrismaModel> | $Enums.NewsStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumNewsStatusFilter<$PrismaModel>
    _max?: NestedEnumNewsStatusFilter<$PrismaModel>
  }

  export type NestedEnumEventStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.EventStatus | EnumEventStatusFieldRefInput<$PrismaModel>
    in?: $Enums.EventStatus[]
    notIn?: $Enums.EventStatus[]
    not?: NestedEnumEventStatusFilter<$PrismaModel> | $Enums.EventStatus
  }

  export type NestedEnumEventStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EventStatus | EnumEventStatusFieldRefInput<$PrismaModel>
    in?: $Enums.EventStatus[]
    notIn?: $Enums.EventStatus[]
    not?: NestedEnumEventStatusWithAggregatesFilter<$PrismaModel> | $Enums.EventStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEventStatusFilter<$PrismaModel>
    _max?: NestedEnumEventStatusFilter<$PrismaModel>
  }

  export type NestedEnumProgramTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ProgramType | EnumProgramTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ProgramType[]
    notIn?: $Enums.ProgramType[]
    not?: NestedEnumProgramTypeFilter<$PrismaModel> | $Enums.ProgramType
  }

  export type NestedEnumAlumniProgramStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.AlumniProgramStatus | EnumAlumniProgramStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AlumniProgramStatus[]
    notIn?: $Enums.AlumniProgramStatus[]
    not?: NestedEnumAlumniProgramStatusFilter<$PrismaModel> | $Enums.AlumniProgramStatus
  }

  export type NestedEnumProgramTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProgramType | EnumProgramTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ProgramType[]
    notIn?: $Enums.ProgramType[]
    not?: NestedEnumProgramTypeWithAggregatesFilter<$PrismaModel> | $Enums.ProgramType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumProgramTypeFilter<$PrismaModel>
    _max?: NestedEnumProgramTypeFilter<$PrismaModel>
  }

  export type NestedEnumAlumniProgramStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AlumniProgramStatus | EnumAlumniProgramStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AlumniProgramStatus[]
    notIn?: $Enums.AlumniProgramStatus[]
    not?: NestedEnumAlumniProgramStatusWithAggregatesFilter<$PrismaModel> | $Enums.AlumniProgramStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAlumniProgramStatusFilter<$PrismaModel>
    _max?: NestedEnumAlumniProgramStatusFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type RoleCreateWithoutUsersInput = {
    id?: string
    name: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RoleUncheckedCreateWithoutUsersInput = {
    id?: string
    name: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RoleCreateOrConnectWithoutUsersInput = {
    where: RoleWhereUniqueInput
    create: XOR<RoleCreateWithoutUsersInput, RoleUncheckedCreateWithoutUsersInput>
  }

  export type EventCreateWithoutAdminUniversitasInput = {
    id?: string
    title: string
    date: Date | string
    description?: string | null
    image: string
    createdAt?: Date | string
    updatedAt?: Date | string
    EventStatus?: $Enums.EventStatus
    rejectionReason?: string | null
    isActive?: boolean
    author: UserCreateNestedOneWithoutAuthoredEventsInput
  }

  export type EventUncheckedCreateWithoutAdminUniversitasInput = {
    id?: string
    title: string
    date: Date | string
    description?: string | null
    image: string
    createdAt?: Date | string
    updatedAt?: Date | string
    EventStatus?: $Enums.EventStatus
    rejectionReason?: string | null
    authorId: string
    isActive?: boolean
  }

  export type EventCreateOrConnectWithoutAdminUniversitasInput = {
    where: EventWhereUniqueInput
    create: XOR<EventCreateWithoutAdminUniversitasInput, EventUncheckedCreateWithoutAdminUniversitasInput>
  }

  export type EventCreateManyAdminUniversitasInputEnvelope = {
    data: EventCreateManyAdminUniversitasInput | EventCreateManyAdminUniversitasInput[]
    skipDuplicates?: boolean
  }

  export type NewsCreateWithoutAdminUniversitasInput = {
    id?: string
    title: string
    content: string
    image: string
    createdAt?: Date | string
    updatedAt?: Date | string
    NewsStatus?: $Enums.NewsStatus
    rejectionReason?: string | null
    isActive?: boolean
    author: UserCreateNestedOneWithoutAuthoredNewsInput
  }

  export type NewsUncheckedCreateWithoutAdminUniversitasInput = {
    id?: string
    title: string
    content: string
    image: string
    createdAt?: Date | string
    updatedAt?: Date | string
    NewsStatus?: $Enums.NewsStatus
    rejectionReason?: string | null
    authorId: string
    isActive?: boolean
  }

  export type NewsCreateOrConnectWithoutAdminUniversitasInput = {
    where: NewsWhereUniqueInput
    create: XOR<NewsCreateWithoutAdminUniversitasInput, NewsUncheckedCreateWithoutAdminUniversitasInput>
  }

  export type NewsCreateManyAdminUniversitasInputEnvelope = {
    data: NewsCreateManyAdminUniversitasInput | NewsCreateManyAdminUniversitasInput[]
    skipDuplicates?: boolean
  }

  export type EventCreateWithoutAuthorInput = {
    id?: string
    title: string
    date: Date | string
    description?: string | null
    image: string
    createdAt?: Date | string
    updatedAt?: Date | string
    EventStatus?: $Enums.EventStatus
    rejectionReason?: string | null
    isActive?: boolean
    adminUniversitas?: UserCreateNestedOneWithoutEventsAsUniversitasInput
  }

  export type EventUncheckedCreateWithoutAuthorInput = {
    id?: string
    title: string
    date: Date | string
    description?: string | null
    image: string
    createdAt?: Date | string
    updatedAt?: Date | string
    EventStatus?: $Enums.EventStatus
    rejectionReason?: string | null
    adminUniversitasId?: string | null
    isActive?: boolean
  }

  export type EventCreateOrConnectWithoutAuthorInput = {
    where: EventWhereUniqueInput
    create: XOR<EventCreateWithoutAuthorInput, EventUncheckedCreateWithoutAuthorInput>
  }

  export type EventCreateManyAuthorInputEnvelope = {
    data: EventCreateManyAuthorInput | EventCreateManyAuthorInput[]
    skipDuplicates?: boolean
  }

  export type NewsCreateWithoutAuthorInput = {
    id?: string
    title: string
    content: string
    image: string
    createdAt?: Date | string
    updatedAt?: Date | string
    NewsStatus?: $Enums.NewsStatus
    rejectionReason?: string | null
    isActive?: boolean
    adminUniversitas?: UserCreateNestedOneWithoutNewsAsUniversitasInput
  }

  export type NewsUncheckedCreateWithoutAuthorInput = {
    id?: string
    title: string
    content: string
    image: string
    createdAt?: Date | string
    updatedAt?: Date | string
    NewsStatus?: $Enums.NewsStatus
    rejectionReason?: string | null
    adminUniversitasId?: string | null
    isActive?: boolean
  }

  export type NewsCreateOrConnectWithoutAuthorInput = {
    where: NewsWhereUniqueInput
    create: XOR<NewsCreateWithoutAuthorInput, NewsUncheckedCreateWithoutAuthorInput>
  }

  export type NewsCreateManyAuthorInputEnvelope = {
    data: NewsCreateManyAuthorInput | NewsCreateManyAuthorInput[]
    skipDuplicates?: boolean
  }

  export type AlumniProgramCreateWithoutAuthorInput = {
    id?: string
    title: string
    description: string
    image?: string | null
    category: $Enums.ProgramType
    AlumniProgramStatus?: $Enums.AlumniProgramStatus
    rejectionReason?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isActive?: boolean
    adminProdi?: UserCreateNestedOneWithoutProdiVerificationsInput
    adminUniversitas?: UserCreateNestedOneWithoutUniversityVerificationsInput
  }

  export type AlumniProgramUncheckedCreateWithoutAuthorInput = {
    id?: string
    title: string
    description: string
    image?: string | null
    category: $Enums.ProgramType
    AlumniProgramStatus?: $Enums.AlumniProgramStatus
    rejectionReason?: string | null
    adminProdiId?: string | null
    adminUniversitasId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isActive?: boolean
  }

  export type AlumniProgramCreateOrConnectWithoutAuthorInput = {
    where: AlumniProgramWhereUniqueInput
    create: XOR<AlumniProgramCreateWithoutAuthorInput, AlumniProgramUncheckedCreateWithoutAuthorInput>
  }

  export type AlumniProgramCreateManyAuthorInputEnvelope = {
    data: AlumniProgramCreateManyAuthorInput | AlumniProgramCreateManyAuthorInput[]
    skipDuplicates?: boolean
  }

  export type AlumniProgramCreateWithoutAdminProdiInput = {
    id?: string
    title: string
    description: string
    image?: string | null
    category: $Enums.ProgramType
    AlumniProgramStatus?: $Enums.AlumniProgramStatus
    rejectionReason?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isActive?: boolean
    author: UserCreateNestedOneWithoutAlumniProgramsInput
    adminUniversitas?: UserCreateNestedOneWithoutUniversityVerificationsInput
  }

  export type AlumniProgramUncheckedCreateWithoutAdminProdiInput = {
    id?: string
    title: string
    description: string
    image?: string | null
    category: $Enums.ProgramType
    AlumniProgramStatus?: $Enums.AlumniProgramStatus
    rejectionReason?: string | null
    authorId: string
    adminUniversitasId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isActive?: boolean
  }

  export type AlumniProgramCreateOrConnectWithoutAdminProdiInput = {
    where: AlumniProgramWhereUniqueInput
    create: XOR<AlumniProgramCreateWithoutAdminProdiInput, AlumniProgramUncheckedCreateWithoutAdminProdiInput>
  }

  export type AlumniProgramCreateManyAdminProdiInputEnvelope = {
    data: AlumniProgramCreateManyAdminProdiInput | AlumniProgramCreateManyAdminProdiInput[]
    skipDuplicates?: boolean
  }

  export type AlumniProgramCreateWithoutAdminUniversitasInput = {
    id?: string
    title: string
    description: string
    image?: string | null
    category: $Enums.ProgramType
    AlumniProgramStatus?: $Enums.AlumniProgramStatus
    rejectionReason?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isActive?: boolean
    author: UserCreateNestedOneWithoutAlumniProgramsInput
    adminProdi?: UserCreateNestedOneWithoutProdiVerificationsInput
  }

  export type AlumniProgramUncheckedCreateWithoutAdminUniversitasInput = {
    id?: string
    title: string
    description: string
    image?: string | null
    category: $Enums.ProgramType
    AlumniProgramStatus?: $Enums.AlumniProgramStatus
    rejectionReason?: string | null
    authorId: string
    adminProdiId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isActive?: boolean
  }

  export type AlumniProgramCreateOrConnectWithoutAdminUniversitasInput = {
    where: AlumniProgramWhereUniqueInput
    create: XOR<AlumniProgramCreateWithoutAdminUniversitasInput, AlumniProgramUncheckedCreateWithoutAdminUniversitasInput>
  }

  export type AlumniProgramCreateManyAdminUniversitasInputEnvelope = {
    data: AlumniProgramCreateManyAdminUniversitasInput | AlumniProgramCreateManyAdminUniversitasInput[]
    skipDuplicates?: boolean
  }

  export type ProfileCreateWithoutUserInput = {
    id?: string
    image: string
    full_name: string
    student_identification_number: string
    year_graduated?: Date | string | null
    work?: string | null
    skills?: string | null
    entrepreneur?: string | null
    competencies?: string | null
    career?: string | null
    company?: string | null
    linkedin?: string | null
    is_alumni_leader?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    studyProgram: StudyProgramCreateNestedOneWithoutProfilesInput
    sensitive_student_data?: SensitiveStudentDataCreateNestedOneWithoutProfileInput
    tracer_study?: TracerStudyCreateNestedOneWithoutProfileInput
  }

  export type ProfileUncheckedCreateWithoutUserInput = {
    id?: string
    image: string
    full_name: string
    student_identification_number: string
    study_program_id: string
    year_graduated?: Date | string | null
    work?: string | null
    skills?: string | null
    entrepreneur?: string | null
    competencies?: string | null
    career?: string | null
    company?: string | null
    linkedin?: string | null
    is_alumni_leader?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    sensitive_student_data?: SensitiveStudentDataUncheckedCreateNestedOneWithoutProfileInput
    tracer_study?: TracerStudyUncheckedCreateNestedOneWithoutProfileInput
  }

  export type ProfileCreateOrConnectWithoutUserInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutUserInput, ProfileUncheckedCreateWithoutUserInput>
  }

  export type RoleUpsertWithoutUsersInput = {
    update: XOR<RoleUpdateWithoutUsersInput, RoleUncheckedUpdateWithoutUsersInput>
    create: XOR<RoleCreateWithoutUsersInput, RoleUncheckedCreateWithoutUsersInput>
    where?: RoleWhereInput
  }

  export type RoleUpdateToOneWithWhereWithoutUsersInput = {
    where?: RoleWhereInput
    data: XOR<RoleUpdateWithoutUsersInput, RoleUncheckedUpdateWithoutUsersInput>
  }

  export type RoleUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RoleUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EventUpsertWithWhereUniqueWithoutAdminUniversitasInput = {
    where: EventWhereUniqueInput
    update: XOR<EventUpdateWithoutAdminUniversitasInput, EventUncheckedUpdateWithoutAdminUniversitasInput>
    create: XOR<EventCreateWithoutAdminUniversitasInput, EventUncheckedCreateWithoutAdminUniversitasInput>
  }

  export type EventUpdateWithWhereUniqueWithoutAdminUniversitasInput = {
    where: EventWhereUniqueInput
    data: XOR<EventUpdateWithoutAdminUniversitasInput, EventUncheckedUpdateWithoutAdminUniversitasInput>
  }

  export type EventUpdateManyWithWhereWithoutAdminUniversitasInput = {
    where: EventScalarWhereInput
    data: XOR<EventUpdateManyMutationInput, EventUncheckedUpdateManyWithoutAdminUniversitasInput>
  }

  export type EventScalarWhereInput = {
    AND?: EventScalarWhereInput | EventScalarWhereInput[]
    OR?: EventScalarWhereInput[]
    NOT?: EventScalarWhereInput | EventScalarWhereInput[]
    id?: StringFilter<"Event"> | string
    title?: StringFilter<"Event"> | string
    date?: DateTimeFilter<"Event"> | Date | string
    description?: StringNullableFilter<"Event"> | string | null
    image?: StringFilter<"Event"> | string
    createdAt?: DateTimeFilter<"Event"> | Date | string
    updatedAt?: DateTimeFilter<"Event"> | Date | string
    EventStatus?: EnumEventStatusFilter<"Event"> | $Enums.EventStatus
    rejectionReason?: StringNullableFilter<"Event"> | string | null
    authorId?: StringFilter<"Event"> | string
    adminUniversitasId?: StringNullableFilter<"Event"> | string | null
    isActive?: BoolFilter<"Event"> | boolean
  }

  export type NewsUpsertWithWhereUniqueWithoutAdminUniversitasInput = {
    where: NewsWhereUniqueInput
    update: XOR<NewsUpdateWithoutAdminUniversitasInput, NewsUncheckedUpdateWithoutAdminUniversitasInput>
    create: XOR<NewsCreateWithoutAdminUniversitasInput, NewsUncheckedCreateWithoutAdminUniversitasInput>
  }

  export type NewsUpdateWithWhereUniqueWithoutAdminUniversitasInput = {
    where: NewsWhereUniqueInput
    data: XOR<NewsUpdateWithoutAdminUniversitasInput, NewsUncheckedUpdateWithoutAdminUniversitasInput>
  }

  export type NewsUpdateManyWithWhereWithoutAdminUniversitasInput = {
    where: NewsScalarWhereInput
    data: XOR<NewsUpdateManyMutationInput, NewsUncheckedUpdateManyWithoutAdminUniversitasInput>
  }

  export type NewsScalarWhereInput = {
    AND?: NewsScalarWhereInput | NewsScalarWhereInput[]
    OR?: NewsScalarWhereInput[]
    NOT?: NewsScalarWhereInput | NewsScalarWhereInput[]
    id?: StringFilter<"News"> | string
    title?: StringFilter<"News"> | string
    content?: StringFilter<"News"> | string
    image?: StringFilter<"News"> | string
    createdAt?: DateTimeFilter<"News"> | Date | string
    updatedAt?: DateTimeFilter<"News"> | Date | string
    NewsStatus?: EnumNewsStatusFilter<"News"> | $Enums.NewsStatus
    rejectionReason?: StringNullableFilter<"News"> | string | null
    authorId?: StringFilter<"News"> | string
    adminUniversitasId?: StringNullableFilter<"News"> | string | null
    isActive?: BoolFilter<"News"> | boolean
  }

  export type EventUpsertWithWhereUniqueWithoutAuthorInput = {
    where: EventWhereUniqueInput
    update: XOR<EventUpdateWithoutAuthorInput, EventUncheckedUpdateWithoutAuthorInput>
    create: XOR<EventCreateWithoutAuthorInput, EventUncheckedCreateWithoutAuthorInput>
  }

  export type EventUpdateWithWhereUniqueWithoutAuthorInput = {
    where: EventWhereUniqueInput
    data: XOR<EventUpdateWithoutAuthorInput, EventUncheckedUpdateWithoutAuthorInput>
  }

  export type EventUpdateManyWithWhereWithoutAuthorInput = {
    where: EventScalarWhereInput
    data: XOR<EventUpdateManyMutationInput, EventUncheckedUpdateManyWithoutAuthorInput>
  }

  export type NewsUpsertWithWhereUniqueWithoutAuthorInput = {
    where: NewsWhereUniqueInput
    update: XOR<NewsUpdateWithoutAuthorInput, NewsUncheckedUpdateWithoutAuthorInput>
    create: XOR<NewsCreateWithoutAuthorInput, NewsUncheckedCreateWithoutAuthorInput>
  }

  export type NewsUpdateWithWhereUniqueWithoutAuthorInput = {
    where: NewsWhereUniqueInput
    data: XOR<NewsUpdateWithoutAuthorInput, NewsUncheckedUpdateWithoutAuthorInput>
  }

  export type NewsUpdateManyWithWhereWithoutAuthorInput = {
    where: NewsScalarWhereInput
    data: XOR<NewsUpdateManyMutationInput, NewsUncheckedUpdateManyWithoutAuthorInput>
  }

  export type AlumniProgramUpsertWithWhereUniqueWithoutAuthorInput = {
    where: AlumniProgramWhereUniqueInput
    update: XOR<AlumniProgramUpdateWithoutAuthorInput, AlumniProgramUncheckedUpdateWithoutAuthorInput>
    create: XOR<AlumniProgramCreateWithoutAuthorInput, AlumniProgramUncheckedCreateWithoutAuthorInput>
  }

  export type AlumniProgramUpdateWithWhereUniqueWithoutAuthorInput = {
    where: AlumniProgramWhereUniqueInput
    data: XOR<AlumniProgramUpdateWithoutAuthorInput, AlumniProgramUncheckedUpdateWithoutAuthorInput>
  }

  export type AlumniProgramUpdateManyWithWhereWithoutAuthorInput = {
    where: AlumniProgramScalarWhereInput
    data: XOR<AlumniProgramUpdateManyMutationInput, AlumniProgramUncheckedUpdateManyWithoutAuthorInput>
  }

  export type AlumniProgramScalarWhereInput = {
    AND?: AlumniProgramScalarWhereInput | AlumniProgramScalarWhereInput[]
    OR?: AlumniProgramScalarWhereInput[]
    NOT?: AlumniProgramScalarWhereInput | AlumniProgramScalarWhereInput[]
    id?: StringFilter<"AlumniProgram"> | string
    title?: StringFilter<"AlumniProgram"> | string
    description?: StringFilter<"AlumniProgram"> | string
    image?: StringNullableFilter<"AlumniProgram"> | string | null
    category?: EnumProgramTypeFilter<"AlumniProgram"> | $Enums.ProgramType
    AlumniProgramStatus?: EnumAlumniProgramStatusFilter<"AlumniProgram"> | $Enums.AlumniProgramStatus
    rejectionReason?: StringNullableFilter<"AlumniProgram"> | string | null
    authorId?: StringFilter<"AlumniProgram"> | string
    adminProdiId?: StringNullableFilter<"AlumniProgram"> | string | null
    adminUniversitasId?: StringNullableFilter<"AlumniProgram"> | string | null
    createdAt?: DateTimeFilter<"AlumniProgram"> | Date | string
    updatedAt?: DateTimeFilter<"AlumniProgram"> | Date | string
    isActive?: BoolFilter<"AlumniProgram"> | boolean
  }

  export type AlumniProgramUpsertWithWhereUniqueWithoutAdminProdiInput = {
    where: AlumniProgramWhereUniqueInput
    update: XOR<AlumniProgramUpdateWithoutAdminProdiInput, AlumniProgramUncheckedUpdateWithoutAdminProdiInput>
    create: XOR<AlumniProgramCreateWithoutAdminProdiInput, AlumniProgramUncheckedCreateWithoutAdminProdiInput>
  }

  export type AlumniProgramUpdateWithWhereUniqueWithoutAdminProdiInput = {
    where: AlumniProgramWhereUniqueInput
    data: XOR<AlumniProgramUpdateWithoutAdminProdiInput, AlumniProgramUncheckedUpdateWithoutAdminProdiInput>
  }

  export type AlumniProgramUpdateManyWithWhereWithoutAdminProdiInput = {
    where: AlumniProgramScalarWhereInput
    data: XOR<AlumniProgramUpdateManyMutationInput, AlumniProgramUncheckedUpdateManyWithoutAdminProdiInput>
  }

  export type AlumniProgramUpsertWithWhereUniqueWithoutAdminUniversitasInput = {
    where: AlumniProgramWhereUniqueInput
    update: XOR<AlumniProgramUpdateWithoutAdminUniversitasInput, AlumniProgramUncheckedUpdateWithoutAdminUniversitasInput>
    create: XOR<AlumniProgramCreateWithoutAdminUniversitasInput, AlumniProgramUncheckedCreateWithoutAdminUniversitasInput>
  }

  export type AlumniProgramUpdateWithWhereUniqueWithoutAdminUniversitasInput = {
    where: AlumniProgramWhereUniqueInput
    data: XOR<AlumniProgramUpdateWithoutAdminUniversitasInput, AlumniProgramUncheckedUpdateWithoutAdminUniversitasInput>
  }

  export type AlumniProgramUpdateManyWithWhereWithoutAdminUniversitasInput = {
    where: AlumniProgramScalarWhereInput
    data: XOR<AlumniProgramUpdateManyMutationInput, AlumniProgramUncheckedUpdateManyWithoutAdminUniversitasInput>
  }

  export type ProfileUpsertWithoutUserInput = {
    update: XOR<ProfileUpdateWithoutUserInput, ProfileUncheckedUpdateWithoutUserInput>
    create: XOR<ProfileCreateWithoutUserInput, ProfileUncheckedCreateWithoutUserInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutUserInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutUserInput, ProfileUncheckedUpdateWithoutUserInput>
  }

  export type ProfileUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    full_name?: StringFieldUpdateOperationsInput | string
    student_identification_number?: StringFieldUpdateOperationsInput | string
    year_graduated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    work?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    entrepreneur?: NullableStringFieldUpdateOperationsInput | string | null
    competencies?: NullableStringFieldUpdateOperationsInput | string | null
    career?: NullableStringFieldUpdateOperationsInput | string | null
    company?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    is_alumni_leader?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    studyProgram?: StudyProgramUpdateOneRequiredWithoutProfilesNestedInput
    sensitive_student_data?: SensitiveStudentDataUpdateOneWithoutProfileNestedInput
    tracer_study?: TracerStudyUpdateOneWithoutProfileNestedInput
  }

  export type ProfileUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    full_name?: StringFieldUpdateOperationsInput | string
    student_identification_number?: StringFieldUpdateOperationsInput | string
    study_program_id?: StringFieldUpdateOperationsInput | string
    year_graduated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    work?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    entrepreneur?: NullableStringFieldUpdateOperationsInput | string | null
    competencies?: NullableStringFieldUpdateOperationsInput | string | null
    career?: NullableStringFieldUpdateOperationsInput | string | null
    company?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    is_alumni_leader?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sensitive_student_data?: SensitiveStudentDataUncheckedUpdateOneWithoutProfileNestedInput
    tracer_study?: TracerStudyUncheckedUpdateOneWithoutProfileNestedInput
  }

  export type UserCreateWithoutRoleInput = {
    id?: string
    username: string
    password: string
    profileId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    eventsAsUniversitas?: EventCreateNestedManyWithoutAdminUniversitasInput
    newsAsUniversitas?: NewsCreateNestedManyWithoutAdminUniversitasInput
    authoredEvents?: EventCreateNestedManyWithoutAuthorInput
    authoredNews?: NewsCreateNestedManyWithoutAuthorInput
    AlumniPrograms?: AlumniProgramCreateNestedManyWithoutAuthorInput
    prodiVerifications?: AlumniProgramCreateNestedManyWithoutAdminProdiInput
    universityVerifications?: AlumniProgramCreateNestedManyWithoutAdminUniversitasInput
    Profile?: ProfileCreateNestedOneWithoutUserInput
  }

  export type UserUncheckedCreateWithoutRoleInput = {
    id?: string
    username: string
    password: string
    profileId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    eventsAsUniversitas?: EventUncheckedCreateNestedManyWithoutAdminUniversitasInput
    newsAsUniversitas?: NewsUncheckedCreateNestedManyWithoutAdminUniversitasInput
    authoredEvents?: EventUncheckedCreateNestedManyWithoutAuthorInput
    authoredNews?: NewsUncheckedCreateNestedManyWithoutAuthorInput
    AlumniPrograms?: AlumniProgramUncheckedCreateNestedManyWithoutAuthorInput
    prodiVerifications?: AlumniProgramUncheckedCreateNestedManyWithoutAdminProdiInput
    universityVerifications?: AlumniProgramUncheckedCreateNestedManyWithoutAdminUniversitasInput
    Profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutRoleInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutRoleInput, UserUncheckedCreateWithoutRoleInput>
  }

  export type UserCreateManyRoleInputEnvelope = {
    data: UserCreateManyRoleInput | UserCreateManyRoleInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithWhereUniqueWithoutRoleInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutRoleInput, UserUncheckedUpdateWithoutRoleInput>
    create: XOR<UserCreateWithoutRoleInput, UserUncheckedCreateWithoutRoleInput>
  }

  export type UserUpdateWithWhereUniqueWithoutRoleInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutRoleInput, UserUncheckedUpdateWithoutRoleInput>
  }

  export type UserUpdateManyWithWhereWithoutRoleInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutRoleInput>
  }

  export type UserScalarWhereInput = {
    AND?: UserScalarWhereInput | UserScalarWhereInput[]
    OR?: UserScalarWhereInput[]
    NOT?: UserScalarWhereInput | UserScalarWhereInput[]
    id?: StringFilter<"User"> | string
    username?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    roleId?: StringFilter<"User"> | string
    profileId?: StringNullableFilter<"User"> | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
  }

  export type UserCreateWithoutProfileInput = {
    id?: string
    username: string
    password: string
    profileId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    eventsAsUniversitas?: EventCreateNestedManyWithoutAdminUniversitasInput
    newsAsUniversitas?: NewsCreateNestedManyWithoutAdminUniversitasInput
    authoredEvents?: EventCreateNestedManyWithoutAuthorInput
    authoredNews?: NewsCreateNestedManyWithoutAuthorInput
    AlumniPrograms?: AlumniProgramCreateNestedManyWithoutAuthorInput
    prodiVerifications?: AlumniProgramCreateNestedManyWithoutAdminProdiInput
    universityVerifications?: AlumniProgramCreateNestedManyWithoutAdminUniversitasInput
  }

  export type UserUncheckedCreateWithoutProfileInput = {
    id?: string
    username: string
    password: string
    roleId: string
    profileId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    eventsAsUniversitas?: EventUncheckedCreateNestedManyWithoutAdminUniversitasInput
    newsAsUniversitas?: NewsUncheckedCreateNestedManyWithoutAdminUniversitasInput
    authoredEvents?: EventUncheckedCreateNestedManyWithoutAuthorInput
    authoredNews?: NewsUncheckedCreateNestedManyWithoutAuthorInput
    AlumniPrograms?: AlumniProgramUncheckedCreateNestedManyWithoutAuthorInput
    prodiVerifications?: AlumniProgramUncheckedCreateNestedManyWithoutAdminProdiInput
    universityVerifications?: AlumniProgramUncheckedCreateNestedManyWithoutAdminUniversitasInput
  }

  export type UserCreateOrConnectWithoutProfileInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutProfileInput, UserUncheckedCreateWithoutProfileInput>
  }

  export type StudyProgramCreateWithoutProfilesInput = {
    id?: string
    name: string
    code: string
    level: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type StudyProgramUncheckedCreateWithoutProfilesInput = {
    id?: string
    name: string
    code: string
    level: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type StudyProgramCreateOrConnectWithoutProfilesInput = {
    where: StudyProgramWhereUniqueInput
    create: XOR<StudyProgramCreateWithoutProfilesInput, StudyProgramUncheckedCreateWithoutProfilesInput>
  }

  export type SensitiveStudentDataCreateWithoutProfileInput = {
    id?: string
    pt_code?: string
    place_of_birth: string
    date_of_birth: Date | string
    national_identity_number: string
    full_address: string
    email: string
    phone_number: string
    mobile_number: string
    total_credits: number
    graduation_date: Date | string
    yudisium_date: Date | string
    gpa: number
    gender: string
  }

  export type SensitiveStudentDataUncheckedCreateWithoutProfileInput = {
    id?: string
    pt_code?: string
    place_of_birth: string
    date_of_birth: Date | string
    national_identity_number: string
    full_address: string
    email: string
    phone_number: string
    mobile_number: string
    total_credits: number
    graduation_date: Date | string
    yudisium_date: Date | string
    gpa: number
    gender: string
  }

  export type SensitiveStudentDataCreateOrConnectWithoutProfileInput = {
    where: SensitiveStudentDataWhereUniqueInput
    create: XOR<SensitiveStudentDataCreateWithoutProfileInput, SensitiveStudentDataUncheckedCreateWithoutProfileInput>
  }

  export type TracerStudyCreateWithoutProfileInput = {
    id?: string
    nimhsmsmh?: string | null
    tahun_lulus?: string | null
    nmmhsmsmh?: string | null
    emailmsmh?: string | null
    kdptimsmh?: string | null
    kdpstmsmh?: string | null
    telpomsmh?: string | null
    nik?: string | null
    npwp?: string | null
    f8: number
    f502?: number | null
    f505?: number | null
    f5a1?: string | null
    f5a2?: string | null
    f1101?: number | null
    f1102?: string | null
    f5b?: string | null
    f5c?: string | null
    f5d?: number | null
    f18a?: string | null
    f18b?: string | null
    f18c?: string | null
    f18d?: Date | string | null
    f1201: number
    f1202?: string | null
    f14?: number | null
    f15?: number | null
    f1761: number
    f1762: number
    f1763: number
    f1764: number
    f1765: number
    f1766: number
    f1767: number
    f1768: number
    f1769: number
    f1770: number
    f1771: number
    f1772: number
    f1773: number
    f1774: number
    f21?: number | null
    f22?: number | null
    f23?: number | null
    f24?: number | null
    f25?: number | null
    f26?: number | null
    f27?: number | null
    f301?: number | null
    f302?: number | null
    f303?: number | null
    f401?: number | null
    f402?: number | null
    f403?: number | null
    f404?: number | null
    f405?: number | null
    f406?: number | null
    f407?: number | null
    f408?: number | null
    f409?: number | null
    f410?: number | null
    f411?: number | null
    f412?: number | null
    f413?: number | null
    f414?: number | null
    f415?: number | null
    f416?: string | null
    f6?: number | null
    f7?: number | null
    f7a?: number | null
    f1001?: number | null
    f1002?: string | null
    f1601?: number | null
    f1602?: number | null
    f1603?: number | null
    f1604?: number | null
    f1605?: number | null
    f1606?: number | null
    f1607?: number | null
    f1608?: number | null
    f1609?: number | null
    f1610?: number | null
    f1611?: number | null
    f1612?: number | null
    f1613?: number | null
    f1614?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TracerStudyUncheckedCreateWithoutProfileInput = {
    id?: string
    nimhsmsmh?: string | null
    tahun_lulus?: string | null
    nmmhsmsmh?: string | null
    emailmsmh?: string | null
    kdptimsmh?: string | null
    kdpstmsmh?: string | null
    telpomsmh?: string | null
    nik?: string | null
    npwp?: string | null
    f8: number
    f502?: number | null
    f505?: number | null
    f5a1?: string | null
    f5a2?: string | null
    f1101?: number | null
    f1102?: string | null
    f5b?: string | null
    f5c?: string | null
    f5d?: number | null
    f18a?: string | null
    f18b?: string | null
    f18c?: string | null
    f18d?: Date | string | null
    f1201: number
    f1202?: string | null
    f14?: number | null
    f15?: number | null
    f1761: number
    f1762: number
    f1763: number
    f1764: number
    f1765: number
    f1766: number
    f1767: number
    f1768: number
    f1769: number
    f1770: number
    f1771: number
    f1772: number
    f1773: number
    f1774: number
    f21?: number | null
    f22?: number | null
    f23?: number | null
    f24?: number | null
    f25?: number | null
    f26?: number | null
    f27?: number | null
    f301?: number | null
    f302?: number | null
    f303?: number | null
    f401?: number | null
    f402?: number | null
    f403?: number | null
    f404?: number | null
    f405?: number | null
    f406?: number | null
    f407?: number | null
    f408?: number | null
    f409?: number | null
    f410?: number | null
    f411?: number | null
    f412?: number | null
    f413?: number | null
    f414?: number | null
    f415?: number | null
    f416?: string | null
    f6?: number | null
    f7?: number | null
    f7a?: number | null
    f1001?: number | null
    f1002?: string | null
    f1601?: number | null
    f1602?: number | null
    f1603?: number | null
    f1604?: number | null
    f1605?: number | null
    f1606?: number | null
    f1607?: number | null
    f1608?: number | null
    f1609?: number | null
    f1610?: number | null
    f1611?: number | null
    f1612?: number | null
    f1613?: number | null
    f1614?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TracerStudyCreateOrConnectWithoutProfileInput = {
    where: TracerStudyWhereUniqueInput
    create: XOR<TracerStudyCreateWithoutProfileInput, TracerStudyUncheckedCreateWithoutProfileInput>
  }

  export type UserUpsertWithoutProfileInput = {
    update: XOR<UserUpdateWithoutProfileInput, UserUncheckedUpdateWithoutProfileInput>
    create: XOR<UserCreateWithoutProfileInput, UserUncheckedCreateWithoutProfileInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutProfileInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutProfileInput, UserUncheckedUpdateWithoutProfileInput>
  }

  export type UserUpdateWithoutProfileInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    profileId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    eventsAsUniversitas?: EventUpdateManyWithoutAdminUniversitasNestedInput
    newsAsUniversitas?: NewsUpdateManyWithoutAdminUniversitasNestedInput
    authoredEvents?: EventUpdateManyWithoutAuthorNestedInput
    authoredNews?: NewsUpdateManyWithoutAuthorNestedInput
    AlumniPrograms?: AlumniProgramUpdateManyWithoutAuthorNestedInput
    prodiVerifications?: AlumniProgramUpdateManyWithoutAdminProdiNestedInput
    universityVerifications?: AlumniProgramUpdateManyWithoutAdminUniversitasNestedInput
  }

  export type UserUncheckedUpdateWithoutProfileInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    roleId?: StringFieldUpdateOperationsInput | string
    profileId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    eventsAsUniversitas?: EventUncheckedUpdateManyWithoutAdminUniversitasNestedInput
    newsAsUniversitas?: NewsUncheckedUpdateManyWithoutAdminUniversitasNestedInput
    authoredEvents?: EventUncheckedUpdateManyWithoutAuthorNestedInput
    authoredNews?: NewsUncheckedUpdateManyWithoutAuthorNestedInput
    AlumniPrograms?: AlumniProgramUncheckedUpdateManyWithoutAuthorNestedInput
    prodiVerifications?: AlumniProgramUncheckedUpdateManyWithoutAdminProdiNestedInput
    universityVerifications?: AlumniProgramUncheckedUpdateManyWithoutAdminUniversitasNestedInput
  }

  export type StudyProgramUpsertWithoutProfilesInput = {
    update: XOR<StudyProgramUpdateWithoutProfilesInput, StudyProgramUncheckedUpdateWithoutProfilesInput>
    create: XOR<StudyProgramCreateWithoutProfilesInput, StudyProgramUncheckedCreateWithoutProfilesInput>
    where?: StudyProgramWhereInput
  }

  export type StudyProgramUpdateToOneWithWhereWithoutProfilesInput = {
    where?: StudyProgramWhereInput
    data: XOR<StudyProgramUpdateWithoutProfilesInput, StudyProgramUncheckedUpdateWithoutProfilesInput>
  }

  export type StudyProgramUpdateWithoutProfilesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    level?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StudyProgramUncheckedUpdateWithoutProfilesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    level?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SensitiveStudentDataUpsertWithoutProfileInput = {
    update: XOR<SensitiveStudentDataUpdateWithoutProfileInput, SensitiveStudentDataUncheckedUpdateWithoutProfileInput>
    create: XOR<SensitiveStudentDataCreateWithoutProfileInput, SensitiveStudentDataUncheckedCreateWithoutProfileInput>
    where?: SensitiveStudentDataWhereInput
  }

  export type SensitiveStudentDataUpdateToOneWithWhereWithoutProfileInput = {
    where?: SensitiveStudentDataWhereInput
    data: XOR<SensitiveStudentDataUpdateWithoutProfileInput, SensitiveStudentDataUncheckedUpdateWithoutProfileInput>
  }

  export type SensitiveStudentDataUpdateWithoutProfileInput = {
    id?: StringFieldUpdateOperationsInput | string
    pt_code?: StringFieldUpdateOperationsInput | string
    place_of_birth?: StringFieldUpdateOperationsInput | string
    date_of_birth?: DateTimeFieldUpdateOperationsInput | Date | string
    national_identity_number?: StringFieldUpdateOperationsInput | string
    full_address?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone_number?: StringFieldUpdateOperationsInput | string
    mobile_number?: StringFieldUpdateOperationsInput | string
    total_credits?: IntFieldUpdateOperationsInput | number
    graduation_date?: DateTimeFieldUpdateOperationsInput | Date | string
    yudisium_date?: DateTimeFieldUpdateOperationsInput | Date | string
    gpa?: FloatFieldUpdateOperationsInput | number
    gender?: StringFieldUpdateOperationsInput | string
  }

  export type SensitiveStudentDataUncheckedUpdateWithoutProfileInput = {
    id?: StringFieldUpdateOperationsInput | string
    pt_code?: StringFieldUpdateOperationsInput | string
    place_of_birth?: StringFieldUpdateOperationsInput | string
    date_of_birth?: DateTimeFieldUpdateOperationsInput | Date | string
    national_identity_number?: StringFieldUpdateOperationsInput | string
    full_address?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone_number?: StringFieldUpdateOperationsInput | string
    mobile_number?: StringFieldUpdateOperationsInput | string
    total_credits?: IntFieldUpdateOperationsInput | number
    graduation_date?: DateTimeFieldUpdateOperationsInput | Date | string
    yudisium_date?: DateTimeFieldUpdateOperationsInput | Date | string
    gpa?: FloatFieldUpdateOperationsInput | number
    gender?: StringFieldUpdateOperationsInput | string
  }

  export type TracerStudyUpsertWithoutProfileInput = {
    update: XOR<TracerStudyUpdateWithoutProfileInput, TracerStudyUncheckedUpdateWithoutProfileInput>
    create: XOR<TracerStudyCreateWithoutProfileInput, TracerStudyUncheckedCreateWithoutProfileInput>
    where?: TracerStudyWhereInput
  }

  export type TracerStudyUpdateToOneWithWhereWithoutProfileInput = {
    where?: TracerStudyWhereInput
    data: XOR<TracerStudyUpdateWithoutProfileInput, TracerStudyUncheckedUpdateWithoutProfileInput>
  }

  export type TracerStudyUpdateWithoutProfileInput = {
    id?: StringFieldUpdateOperationsInput | string
    nimhsmsmh?: NullableStringFieldUpdateOperationsInput | string | null
    tahun_lulus?: NullableStringFieldUpdateOperationsInput | string | null
    nmmhsmsmh?: NullableStringFieldUpdateOperationsInput | string | null
    emailmsmh?: NullableStringFieldUpdateOperationsInput | string | null
    kdptimsmh?: NullableStringFieldUpdateOperationsInput | string | null
    kdpstmsmh?: NullableStringFieldUpdateOperationsInput | string | null
    telpomsmh?: NullableStringFieldUpdateOperationsInput | string | null
    nik?: NullableStringFieldUpdateOperationsInput | string | null
    npwp?: NullableStringFieldUpdateOperationsInput | string | null
    f8?: IntFieldUpdateOperationsInput | number
    f502?: NullableIntFieldUpdateOperationsInput | number | null
    f505?: NullableIntFieldUpdateOperationsInput | number | null
    f5a1?: NullableStringFieldUpdateOperationsInput | string | null
    f5a2?: NullableStringFieldUpdateOperationsInput | string | null
    f1101?: NullableIntFieldUpdateOperationsInput | number | null
    f1102?: NullableStringFieldUpdateOperationsInput | string | null
    f5b?: NullableStringFieldUpdateOperationsInput | string | null
    f5c?: NullableStringFieldUpdateOperationsInput | string | null
    f5d?: NullableIntFieldUpdateOperationsInput | number | null
    f18a?: NullableStringFieldUpdateOperationsInput | string | null
    f18b?: NullableStringFieldUpdateOperationsInput | string | null
    f18c?: NullableStringFieldUpdateOperationsInput | string | null
    f18d?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    f1201?: IntFieldUpdateOperationsInput | number
    f1202?: NullableStringFieldUpdateOperationsInput | string | null
    f14?: NullableIntFieldUpdateOperationsInput | number | null
    f15?: NullableIntFieldUpdateOperationsInput | number | null
    f1761?: IntFieldUpdateOperationsInput | number
    f1762?: IntFieldUpdateOperationsInput | number
    f1763?: IntFieldUpdateOperationsInput | number
    f1764?: IntFieldUpdateOperationsInput | number
    f1765?: IntFieldUpdateOperationsInput | number
    f1766?: IntFieldUpdateOperationsInput | number
    f1767?: IntFieldUpdateOperationsInput | number
    f1768?: IntFieldUpdateOperationsInput | number
    f1769?: IntFieldUpdateOperationsInput | number
    f1770?: IntFieldUpdateOperationsInput | number
    f1771?: IntFieldUpdateOperationsInput | number
    f1772?: IntFieldUpdateOperationsInput | number
    f1773?: IntFieldUpdateOperationsInput | number
    f1774?: IntFieldUpdateOperationsInput | number
    f21?: NullableIntFieldUpdateOperationsInput | number | null
    f22?: NullableIntFieldUpdateOperationsInput | number | null
    f23?: NullableIntFieldUpdateOperationsInput | number | null
    f24?: NullableIntFieldUpdateOperationsInput | number | null
    f25?: NullableIntFieldUpdateOperationsInput | number | null
    f26?: NullableIntFieldUpdateOperationsInput | number | null
    f27?: NullableIntFieldUpdateOperationsInput | number | null
    f301?: NullableIntFieldUpdateOperationsInput | number | null
    f302?: NullableIntFieldUpdateOperationsInput | number | null
    f303?: NullableIntFieldUpdateOperationsInput | number | null
    f401?: NullableIntFieldUpdateOperationsInput | number | null
    f402?: NullableIntFieldUpdateOperationsInput | number | null
    f403?: NullableIntFieldUpdateOperationsInput | number | null
    f404?: NullableIntFieldUpdateOperationsInput | number | null
    f405?: NullableIntFieldUpdateOperationsInput | number | null
    f406?: NullableIntFieldUpdateOperationsInput | number | null
    f407?: NullableIntFieldUpdateOperationsInput | number | null
    f408?: NullableIntFieldUpdateOperationsInput | number | null
    f409?: NullableIntFieldUpdateOperationsInput | number | null
    f410?: NullableIntFieldUpdateOperationsInput | number | null
    f411?: NullableIntFieldUpdateOperationsInput | number | null
    f412?: NullableIntFieldUpdateOperationsInput | number | null
    f413?: NullableIntFieldUpdateOperationsInput | number | null
    f414?: NullableIntFieldUpdateOperationsInput | number | null
    f415?: NullableIntFieldUpdateOperationsInput | number | null
    f416?: NullableStringFieldUpdateOperationsInput | string | null
    f6?: NullableIntFieldUpdateOperationsInput | number | null
    f7?: NullableIntFieldUpdateOperationsInput | number | null
    f7a?: NullableIntFieldUpdateOperationsInput | number | null
    f1001?: NullableIntFieldUpdateOperationsInput | number | null
    f1002?: NullableStringFieldUpdateOperationsInput | string | null
    f1601?: NullableIntFieldUpdateOperationsInput | number | null
    f1602?: NullableIntFieldUpdateOperationsInput | number | null
    f1603?: NullableIntFieldUpdateOperationsInput | number | null
    f1604?: NullableIntFieldUpdateOperationsInput | number | null
    f1605?: NullableIntFieldUpdateOperationsInput | number | null
    f1606?: NullableIntFieldUpdateOperationsInput | number | null
    f1607?: NullableIntFieldUpdateOperationsInput | number | null
    f1608?: NullableIntFieldUpdateOperationsInput | number | null
    f1609?: NullableIntFieldUpdateOperationsInput | number | null
    f1610?: NullableIntFieldUpdateOperationsInput | number | null
    f1611?: NullableIntFieldUpdateOperationsInput | number | null
    f1612?: NullableIntFieldUpdateOperationsInput | number | null
    f1613?: NullableIntFieldUpdateOperationsInput | number | null
    f1614?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TracerStudyUncheckedUpdateWithoutProfileInput = {
    id?: StringFieldUpdateOperationsInput | string
    nimhsmsmh?: NullableStringFieldUpdateOperationsInput | string | null
    tahun_lulus?: NullableStringFieldUpdateOperationsInput | string | null
    nmmhsmsmh?: NullableStringFieldUpdateOperationsInput | string | null
    emailmsmh?: NullableStringFieldUpdateOperationsInput | string | null
    kdptimsmh?: NullableStringFieldUpdateOperationsInput | string | null
    kdpstmsmh?: NullableStringFieldUpdateOperationsInput | string | null
    telpomsmh?: NullableStringFieldUpdateOperationsInput | string | null
    nik?: NullableStringFieldUpdateOperationsInput | string | null
    npwp?: NullableStringFieldUpdateOperationsInput | string | null
    f8?: IntFieldUpdateOperationsInput | number
    f502?: NullableIntFieldUpdateOperationsInput | number | null
    f505?: NullableIntFieldUpdateOperationsInput | number | null
    f5a1?: NullableStringFieldUpdateOperationsInput | string | null
    f5a2?: NullableStringFieldUpdateOperationsInput | string | null
    f1101?: NullableIntFieldUpdateOperationsInput | number | null
    f1102?: NullableStringFieldUpdateOperationsInput | string | null
    f5b?: NullableStringFieldUpdateOperationsInput | string | null
    f5c?: NullableStringFieldUpdateOperationsInput | string | null
    f5d?: NullableIntFieldUpdateOperationsInput | number | null
    f18a?: NullableStringFieldUpdateOperationsInput | string | null
    f18b?: NullableStringFieldUpdateOperationsInput | string | null
    f18c?: NullableStringFieldUpdateOperationsInput | string | null
    f18d?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    f1201?: IntFieldUpdateOperationsInput | number
    f1202?: NullableStringFieldUpdateOperationsInput | string | null
    f14?: NullableIntFieldUpdateOperationsInput | number | null
    f15?: NullableIntFieldUpdateOperationsInput | number | null
    f1761?: IntFieldUpdateOperationsInput | number
    f1762?: IntFieldUpdateOperationsInput | number
    f1763?: IntFieldUpdateOperationsInput | number
    f1764?: IntFieldUpdateOperationsInput | number
    f1765?: IntFieldUpdateOperationsInput | number
    f1766?: IntFieldUpdateOperationsInput | number
    f1767?: IntFieldUpdateOperationsInput | number
    f1768?: IntFieldUpdateOperationsInput | number
    f1769?: IntFieldUpdateOperationsInput | number
    f1770?: IntFieldUpdateOperationsInput | number
    f1771?: IntFieldUpdateOperationsInput | number
    f1772?: IntFieldUpdateOperationsInput | number
    f1773?: IntFieldUpdateOperationsInput | number
    f1774?: IntFieldUpdateOperationsInput | number
    f21?: NullableIntFieldUpdateOperationsInput | number | null
    f22?: NullableIntFieldUpdateOperationsInput | number | null
    f23?: NullableIntFieldUpdateOperationsInput | number | null
    f24?: NullableIntFieldUpdateOperationsInput | number | null
    f25?: NullableIntFieldUpdateOperationsInput | number | null
    f26?: NullableIntFieldUpdateOperationsInput | number | null
    f27?: NullableIntFieldUpdateOperationsInput | number | null
    f301?: NullableIntFieldUpdateOperationsInput | number | null
    f302?: NullableIntFieldUpdateOperationsInput | number | null
    f303?: NullableIntFieldUpdateOperationsInput | number | null
    f401?: NullableIntFieldUpdateOperationsInput | number | null
    f402?: NullableIntFieldUpdateOperationsInput | number | null
    f403?: NullableIntFieldUpdateOperationsInput | number | null
    f404?: NullableIntFieldUpdateOperationsInput | number | null
    f405?: NullableIntFieldUpdateOperationsInput | number | null
    f406?: NullableIntFieldUpdateOperationsInput | number | null
    f407?: NullableIntFieldUpdateOperationsInput | number | null
    f408?: NullableIntFieldUpdateOperationsInput | number | null
    f409?: NullableIntFieldUpdateOperationsInput | number | null
    f410?: NullableIntFieldUpdateOperationsInput | number | null
    f411?: NullableIntFieldUpdateOperationsInput | number | null
    f412?: NullableIntFieldUpdateOperationsInput | number | null
    f413?: NullableIntFieldUpdateOperationsInput | number | null
    f414?: NullableIntFieldUpdateOperationsInput | number | null
    f415?: NullableIntFieldUpdateOperationsInput | number | null
    f416?: NullableStringFieldUpdateOperationsInput | string | null
    f6?: NullableIntFieldUpdateOperationsInput | number | null
    f7?: NullableIntFieldUpdateOperationsInput | number | null
    f7a?: NullableIntFieldUpdateOperationsInput | number | null
    f1001?: NullableIntFieldUpdateOperationsInput | number | null
    f1002?: NullableStringFieldUpdateOperationsInput | string | null
    f1601?: NullableIntFieldUpdateOperationsInput | number | null
    f1602?: NullableIntFieldUpdateOperationsInput | number | null
    f1603?: NullableIntFieldUpdateOperationsInput | number | null
    f1604?: NullableIntFieldUpdateOperationsInput | number | null
    f1605?: NullableIntFieldUpdateOperationsInput | number | null
    f1606?: NullableIntFieldUpdateOperationsInput | number | null
    f1607?: NullableIntFieldUpdateOperationsInput | number | null
    f1608?: NullableIntFieldUpdateOperationsInput | number | null
    f1609?: NullableIntFieldUpdateOperationsInput | number | null
    f1610?: NullableIntFieldUpdateOperationsInput | number | null
    f1611?: NullableIntFieldUpdateOperationsInput | number | null
    f1612?: NullableIntFieldUpdateOperationsInput | number | null
    f1613?: NullableIntFieldUpdateOperationsInput | number | null
    f1614?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProfileCreateWithoutStudyProgramInput = {
    id?: string
    image: string
    full_name: string
    student_identification_number: string
    year_graduated?: Date | string | null
    work?: string | null
    skills?: string | null
    entrepreneur?: string | null
    competencies?: string | null
    career?: string | null
    company?: string | null
    linkedin?: string | null
    is_alumni_leader?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutProfileInput
    sensitive_student_data?: SensitiveStudentDataCreateNestedOneWithoutProfileInput
    tracer_study?: TracerStudyCreateNestedOneWithoutProfileInput
  }

  export type ProfileUncheckedCreateWithoutStudyProgramInput = {
    id?: string
    user_id: string
    image: string
    full_name: string
    student_identification_number: string
    year_graduated?: Date | string | null
    work?: string | null
    skills?: string | null
    entrepreneur?: string | null
    competencies?: string | null
    career?: string | null
    company?: string | null
    linkedin?: string | null
    is_alumni_leader?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    sensitive_student_data?: SensitiveStudentDataUncheckedCreateNestedOneWithoutProfileInput
    tracer_study?: TracerStudyUncheckedCreateNestedOneWithoutProfileInput
  }

  export type ProfileCreateOrConnectWithoutStudyProgramInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutStudyProgramInput, ProfileUncheckedCreateWithoutStudyProgramInput>
  }

  export type ProfileCreateManyStudyProgramInputEnvelope = {
    data: ProfileCreateManyStudyProgramInput | ProfileCreateManyStudyProgramInput[]
    skipDuplicates?: boolean
  }

  export type ProfileUpsertWithWhereUniqueWithoutStudyProgramInput = {
    where: ProfileWhereUniqueInput
    update: XOR<ProfileUpdateWithoutStudyProgramInput, ProfileUncheckedUpdateWithoutStudyProgramInput>
    create: XOR<ProfileCreateWithoutStudyProgramInput, ProfileUncheckedCreateWithoutStudyProgramInput>
  }

  export type ProfileUpdateWithWhereUniqueWithoutStudyProgramInput = {
    where: ProfileWhereUniqueInput
    data: XOR<ProfileUpdateWithoutStudyProgramInput, ProfileUncheckedUpdateWithoutStudyProgramInput>
  }

  export type ProfileUpdateManyWithWhereWithoutStudyProgramInput = {
    where: ProfileScalarWhereInput
    data: XOR<ProfileUpdateManyMutationInput, ProfileUncheckedUpdateManyWithoutStudyProgramInput>
  }

  export type ProfileScalarWhereInput = {
    AND?: ProfileScalarWhereInput | ProfileScalarWhereInput[]
    OR?: ProfileScalarWhereInput[]
    NOT?: ProfileScalarWhereInput | ProfileScalarWhereInput[]
    id?: StringFilter<"Profile"> | string
    user_id?: StringFilter<"Profile"> | string
    image?: StringFilter<"Profile"> | string
    full_name?: StringFilter<"Profile"> | string
    student_identification_number?: StringFilter<"Profile"> | string
    study_program_id?: StringFilter<"Profile"> | string
    year_graduated?: DateTimeNullableFilter<"Profile"> | Date | string | null
    work?: StringNullableFilter<"Profile"> | string | null
    skills?: StringNullableFilter<"Profile"> | string | null
    entrepreneur?: StringNullableFilter<"Profile"> | string | null
    competencies?: StringNullableFilter<"Profile"> | string | null
    career?: StringNullableFilter<"Profile"> | string | null
    company?: StringNullableFilter<"Profile"> | string | null
    linkedin?: StringNullableFilter<"Profile"> | string | null
    is_alumni_leader?: BoolFilter<"Profile"> | boolean
    createdAt?: DateTimeFilter<"Profile"> | Date | string
    updatedAt?: DateTimeFilter<"Profile"> | Date | string
  }

  export type ProfileCreateWithoutSensitive_student_dataInput = {
    id?: string
    image: string
    full_name: string
    student_identification_number: string
    year_graduated?: Date | string | null
    work?: string | null
    skills?: string | null
    entrepreneur?: string | null
    competencies?: string | null
    career?: string | null
    company?: string | null
    linkedin?: string | null
    is_alumni_leader?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutProfileInput
    studyProgram: StudyProgramCreateNestedOneWithoutProfilesInput
    tracer_study?: TracerStudyCreateNestedOneWithoutProfileInput
  }

  export type ProfileUncheckedCreateWithoutSensitive_student_dataInput = {
    id?: string
    user_id: string
    image: string
    full_name: string
    student_identification_number: string
    study_program_id: string
    year_graduated?: Date | string | null
    work?: string | null
    skills?: string | null
    entrepreneur?: string | null
    competencies?: string | null
    career?: string | null
    company?: string | null
    linkedin?: string | null
    is_alumni_leader?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    tracer_study?: TracerStudyUncheckedCreateNestedOneWithoutProfileInput
  }

  export type ProfileCreateOrConnectWithoutSensitive_student_dataInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutSensitive_student_dataInput, ProfileUncheckedCreateWithoutSensitive_student_dataInput>
  }

  export type ProfileUpsertWithoutSensitive_student_dataInput = {
    update: XOR<ProfileUpdateWithoutSensitive_student_dataInput, ProfileUncheckedUpdateWithoutSensitive_student_dataInput>
    create: XOR<ProfileCreateWithoutSensitive_student_dataInput, ProfileUncheckedCreateWithoutSensitive_student_dataInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutSensitive_student_dataInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutSensitive_student_dataInput, ProfileUncheckedUpdateWithoutSensitive_student_dataInput>
  }

  export type ProfileUpdateWithoutSensitive_student_dataInput = {
    id?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    full_name?: StringFieldUpdateOperationsInput | string
    student_identification_number?: StringFieldUpdateOperationsInput | string
    year_graduated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    work?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    entrepreneur?: NullableStringFieldUpdateOperationsInput | string | null
    competencies?: NullableStringFieldUpdateOperationsInput | string | null
    career?: NullableStringFieldUpdateOperationsInput | string | null
    company?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    is_alumni_leader?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutProfileNestedInput
    studyProgram?: StudyProgramUpdateOneRequiredWithoutProfilesNestedInput
    tracer_study?: TracerStudyUpdateOneWithoutProfileNestedInput
  }

  export type ProfileUncheckedUpdateWithoutSensitive_student_dataInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    full_name?: StringFieldUpdateOperationsInput | string
    student_identification_number?: StringFieldUpdateOperationsInput | string
    study_program_id?: StringFieldUpdateOperationsInput | string
    year_graduated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    work?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    entrepreneur?: NullableStringFieldUpdateOperationsInput | string | null
    competencies?: NullableStringFieldUpdateOperationsInput | string | null
    career?: NullableStringFieldUpdateOperationsInput | string | null
    company?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    is_alumni_leader?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tracer_study?: TracerStudyUncheckedUpdateOneWithoutProfileNestedInput
  }

  export type UserCreateWithoutAuthoredNewsInput = {
    id?: string
    username: string
    password: string
    profileId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    eventsAsUniversitas?: EventCreateNestedManyWithoutAdminUniversitasInput
    newsAsUniversitas?: NewsCreateNestedManyWithoutAdminUniversitasInput
    authoredEvents?: EventCreateNestedManyWithoutAuthorInput
    AlumniPrograms?: AlumniProgramCreateNestedManyWithoutAuthorInput
    prodiVerifications?: AlumniProgramCreateNestedManyWithoutAdminProdiInput
    universityVerifications?: AlumniProgramCreateNestedManyWithoutAdminUniversitasInput
    Profile?: ProfileCreateNestedOneWithoutUserInput
  }

  export type UserUncheckedCreateWithoutAuthoredNewsInput = {
    id?: string
    username: string
    password: string
    roleId: string
    profileId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    eventsAsUniversitas?: EventUncheckedCreateNestedManyWithoutAdminUniversitasInput
    newsAsUniversitas?: NewsUncheckedCreateNestedManyWithoutAdminUniversitasInput
    authoredEvents?: EventUncheckedCreateNestedManyWithoutAuthorInput
    AlumniPrograms?: AlumniProgramUncheckedCreateNestedManyWithoutAuthorInput
    prodiVerifications?: AlumniProgramUncheckedCreateNestedManyWithoutAdminProdiInput
    universityVerifications?: AlumniProgramUncheckedCreateNestedManyWithoutAdminUniversitasInput
    Profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutAuthoredNewsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAuthoredNewsInput, UserUncheckedCreateWithoutAuthoredNewsInput>
  }

  export type UserCreateWithoutNewsAsUniversitasInput = {
    id?: string
    username: string
    password: string
    profileId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    eventsAsUniversitas?: EventCreateNestedManyWithoutAdminUniversitasInput
    authoredEvents?: EventCreateNestedManyWithoutAuthorInput
    authoredNews?: NewsCreateNestedManyWithoutAuthorInput
    AlumniPrograms?: AlumniProgramCreateNestedManyWithoutAuthorInput
    prodiVerifications?: AlumniProgramCreateNestedManyWithoutAdminProdiInput
    universityVerifications?: AlumniProgramCreateNestedManyWithoutAdminUniversitasInput
    Profile?: ProfileCreateNestedOneWithoutUserInput
  }

  export type UserUncheckedCreateWithoutNewsAsUniversitasInput = {
    id?: string
    username: string
    password: string
    roleId: string
    profileId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    eventsAsUniversitas?: EventUncheckedCreateNestedManyWithoutAdminUniversitasInput
    authoredEvents?: EventUncheckedCreateNestedManyWithoutAuthorInput
    authoredNews?: NewsUncheckedCreateNestedManyWithoutAuthorInput
    AlumniPrograms?: AlumniProgramUncheckedCreateNestedManyWithoutAuthorInput
    prodiVerifications?: AlumniProgramUncheckedCreateNestedManyWithoutAdminProdiInput
    universityVerifications?: AlumniProgramUncheckedCreateNestedManyWithoutAdminUniversitasInput
    Profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutNewsAsUniversitasInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutNewsAsUniversitasInput, UserUncheckedCreateWithoutNewsAsUniversitasInput>
  }

  export type UserUpsertWithoutAuthoredNewsInput = {
    update: XOR<UserUpdateWithoutAuthoredNewsInput, UserUncheckedUpdateWithoutAuthoredNewsInput>
    create: XOR<UserCreateWithoutAuthoredNewsInput, UserUncheckedCreateWithoutAuthoredNewsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAuthoredNewsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAuthoredNewsInput, UserUncheckedUpdateWithoutAuthoredNewsInput>
  }

  export type UserUpdateWithoutAuthoredNewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    profileId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    eventsAsUniversitas?: EventUpdateManyWithoutAdminUniversitasNestedInput
    newsAsUniversitas?: NewsUpdateManyWithoutAdminUniversitasNestedInput
    authoredEvents?: EventUpdateManyWithoutAuthorNestedInput
    AlumniPrograms?: AlumniProgramUpdateManyWithoutAuthorNestedInput
    prodiVerifications?: AlumniProgramUpdateManyWithoutAdminProdiNestedInput
    universityVerifications?: AlumniProgramUpdateManyWithoutAdminUniversitasNestedInput
    Profile?: ProfileUpdateOneWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutAuthoredNewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    roleId?: StringFieldUpdateOperationsInput | string
    profileId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    eventsAsUniversitas?: EventUncheckedUpdateManyWithoutAdminUniversitasNestedInput
    newsAsUniversitas?: NewsUncheckedUpdateManyWithoutAdminUniversitasNestedInput
    authoredEvents?: EventUncheckedUpdateManyWithoutAuthorNestedInput
    AlumniPrograms?: AlumniProgramUncheckedUpdateManyWithoutAuthorNestedInput
    prodiVerifications?: AlumniProgramUncheckedUpdateManyWithoutAdminProdiNestedInput
    universityVerifications?: AlumniProgramUncheckedUpdateManyWithoutAdminUniversitasNestedInput
    Profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
  }

  export type UserUpsertWithoutNewsAsUniversitasInput = {
    update: XOR<UserUpdateWithoutNewsAsUniversitasInput, UserUncheckedUpdateWithoutNewsAsUniversitasInput>
    create: XOR<UserCreateWithoutNewsAsUniversitasInput, UserUncheckedCreateWithoutNewsAsUniversitasInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutNewsAsUniversitasInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutNewsAsUniversitasInput, UserUncheckedUpdateWithoutNewsAsUniversitasInput>
  }

  export type UserUpdateWithoutNewsAsUniversitasInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    profileId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    eventsAsUniversitas?: EventUpdateManyWithoutAdminUniversitasNestedInput
    authoredEvents?: EventUpdateManyWithoutAuthorNestedInput
    authoredNews?: NewsUpdateManyWithoutAuthorNestedInput
    AlumniPrograms?: AlumniProgramUpdateManyWithoutAuthorNestedInput
    prodiVerifications?: AlumniProgramUpdateManyWithoutAdminProdiNestedInput
    universityVerifications?: AlumniProgramUpdateManyWithoutAdminUniversitasNestedInput
    Profile?: ProfileUpdateOneWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutNewsAsUniversitasInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    roleId?: StringFieldUpdateOperationsInput | string
    profileId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    eventsAsUniversitas?: EventUncheckedUpdateManyWithoutAdminUniversitasNestedInput
    authoredEvents?: EventUncheckedUpdateManyWithoutAuthorNestedInput
    authoredNews?: NewsUncheckedUpdateManyWithoutAuthorNestedInput
    AlumniPrograms?: AlumniProgramUncheckedUpdateManyWithoutAuthorNestedInput
    prodiVerifications?: AlumniProgramUncheckedUpdateManyWithoutAdminProdiNestedInput
    universityVerifications?: AlumniProgramUncheckedUpdateManyWithoutAdminUniversitasNestedInput
    Profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
  }

  export type UserCreateWithoutAuthoredEventsInput = {
    id?: string
    username: string
    password: string
    profileId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    eventsAsUniversitas?: EventCreateNestedManyWithoutAdminUniversitasInput
    newsAsUniversitas?: NewsCreateNestedManyWithoutAdminUniversitasInput
    authoredNews?: NewsCreateNestedManyWithoutAuthorInput
    AlumniPrograms?: AlumniProgramCreateNestedManyWithoutAuthorInput
    prodiVerifications?: AlumniProgramCreateNestedManyWithoutAdminProdiInput
    universityVerifications?: AlumniProgramCreateNestedManyWithoutAdminUniversitasInput
    Profile?: ProfileCreateNestedOneWithoutUserInput
  }

  export type UserUncheckedCreateWithoutAuthoredEventsInput = {
    id?: string
    username: string
    password: string
    roleId: string
    profileId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    eventsAsUniversitas?: EventUncheckedCreateNestedManyWithoutAdminUniversitasInput
    newsAsUniversitas?: NewsUncheckedCreateNestedManyWithoutAdminUniversitasInput
    authoredNews?: NewsUncheckedCreateNestedManyWithoutAuthorInput
    AlumniPrograms?: AlumniProgramUncheckedCreateNestedManyWithoutAuthorInput
    prodiVerifications?: AlumniProgramUncheckedCreateNestedManyWithoutAdminProdiInput
    universityVerifications?: AlumniProgramUncheckedCreateNestedManyWithoutAdminUniversitasInput
    Profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutAuthoredEventsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAuthoredEventsInput, UserUncheckedCreateWithoutAuthoredEventsInput>
  }

  export type UserCreateWithoutEventsAsUniversitasInput = {
    id?: string
    username: string
    password: string
    profileId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    newsAsUniversitas?: NewsCreateNestedManyWithoutAdminUniversitasInput
    authoredEvents?: EventCreateNestedManyWithoutAuthorInput
    authoredNews?: NewsCreateNestedManyWithoutAuthorInput
    AlumniPrograms?: AlumniProgramCreateNestedManyWithoutAuthorInput
    prodiVerifications?: AlumniProgramCreateNestedManyWithoutAdminProdiInput
    universityVerifications?: AlumniProgramCreateNestedManyWithoutAdminUniversitasInput
    Profile?: ProfileCreateNestedOneWithoutUserInput
  }

  export type UserUncheckedCreateWithoutEventsAsUniversitasInput = {
    id?: string
    username: string
    password: string
    roleId: string
    profileId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    newsAsUniversitas?: NewsUncheckedCreateNestedManyWithoutAdminUniversitasInput
    authoredEvents?: EventUncheckedCreateNestedManyWithoutAuthorInput
    authoredNews?: NewsUncheckedCreateNestedManyWithoutAuthorInput
    AlumniPrograms?: AlumniProgramUncheckedCreateNestedManyWithoutAuthorInput
    prodiVerifications?: AlumniProgramUncheckedCreateNestedManyWithoutAdminProdiInput
    universityVerifications?: AlumniProgramUncheckedCreateNestedManyWithoutAdminUniversitasInput
    Profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutEventsAsUniversitasInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutEventsAsUniversitasInput, UserUncheckedCreateWithoutEventsAsUniversitasInput>
  }

  export type UserUpsertWithoutAuthoredEventsInput = {
    update: XOR<UserUpdateWithoutAuthoredEventsInput, UserUncheckedUpdateWithoutAuthoredEventsInput>
    create: XOR<UserCreateWithoutAuthoredEventsInput, UserUncheckedCreateWithoutAuthoredEventsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAuthoredEventsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAuthoredEventsInput, UserUncheckedUpdateWithoutAuthoredEventsInput>
  }

  export type UserUpdateWithoutAuthoredEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    profileId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    eventsAsUniversitas?: EventUpdateManyWithoutAdminUniversitasNestedInput
    newsAsUniversitas?: NewsUpdateManyWithoutAdminUniversitasNestedInput
    authoredNews?: NewsUpdateManyWithoutAuthorNestedInput
    AlumniPrograms?: AlumniProgramUpdateManyWithoutAuthorNestedInput
    prodiVerifications?: AlumniProgramUpdateManyWithoutAdminProdiNestedInput
    universityVerifications?: AlumniProgramUpdateManyWithoutAdminUniversitasNestedInput
    Profile?: ProfileUpdateOneWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutAuthoredEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    roleId?: StringFieldUpdateOperationsInput | string
    profileId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    eventsAsUniversitas?: EventUncheckedUpdateManyWithoutAdminUniversitasNestedInput
    newsAsUniversitas?: NewsUncheckedUpdateManyWithoutAdminUniversitasNestedInput
    authoredNews?: NewsUncheckedUpdateManyWithoutAuthorNestedInput
    AlumniPrograms?: AlumniProgramUncheckedUpdateManyWithoutAuthorNestedInput
    prodiVerifications?: AlumniProgramUncheckedUpdateManyWithoutAdminProdiNestedInput
    universityVerifications?: AlumniProgramUncheckedUpdateManyWithoutAdminUniversitasNestedInput
    Profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
  }

  export type UserUpsertWithoutEventsAsUniversitasInput = {
    update: XOR<UserUpdateWithoutEventsAsUniversitasInput, UserUncheckedUpdateWithoutEventsAsUniversitasInput>
    create: XOR<UserCreateWithoutEventsAsUniversitasInput, UserUncheckedCreateWithoutEventsAsUniversitasInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutEventsAsUniversitasInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutEventsAsUniversitasInput, UserUncheckedUpdateWithoutEventsAsUniversitasInput>
  }

  export type UserUpdateWithoutEventsAsUniversitasInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    profileId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    newsAsUniversitas?: NewsUpdateManyWithoutAdminUniversitasNestedInput
    authoredEvents?: EventUpdateManyWithoutAuthorNestedInput
    authoredNews?: NewsUpdateManyWithoutAuthorNestedInput
    AlumniPrograms?: AlumniProgramUpdateManyWithoutAuthorNestedInput
    prodiVerifications?: AlumniProgramUpdateManyWithoutAdminProdiNestedInput
    universityVerifications?: AlumniProgramUpdateManyWithoutAdminUniversitasNestedInput
    Profile?: ProfileUpdateOneWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutEventsAsUniversitasInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    roleId?: StringFieldUpdateOperationsInput | string
    profileId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    newsAsUniversitas?: NewsUncheckedUpdateManyWithoutAdminUniversitasNestedInput
    authoredEvents?: EventUncheckedUpdateManyWithoutAuthorNestedInput
    authoredNews?: NewsUncheckedUpdateManyWithoutAuthorNestedInput
    AlumniPrograms?: AlumniProgramUncheckedUpdateManyWithoutAuthorNestedInput
    prodiVerifications?: AlumniProgramUncheckedUpdateManyWithoutAdminProdiNestedInput
    universityVerifications?: AlumniProgramUncheckedUpdateManyWithoutAdminUniversitasNestedInput
    Profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
  }

  export type UserCreateWithoutAlumniProgramsInput = {
    id?: string
    username: string
    password: string
    profileId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    eventsAsUniversitas?: EventCreateNestedManyWithoutAdminUniversitasInput
    newsAsUniversitas?: NewsCreateNestedManyWithoutAdminUniversitasInput
    authoredEvents?: EventCreateNestedManyWithoutAuthorInput
    authoredNews?: NewsCreateNestedManyWithoutAuthorInput
    prodiVerifications?: AlumniProgramCreateNestedManyWithoutAdminProdiInput
    universityVerifications?: AlumniProgramCreateNestedManyWithoutAdminUniversitasInput
    Profile?: ProfileCreateNestedOneWithoutUserInput
  }

  export type UserUncheckedCreateWithoutAlumniProgramsInput = {
    id?: string
    username: string
    password: string
    roleId: string
    profileId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    eventsAsUniversitas?: EventUncheckedCreateNestedManyWithoutAdminUniversitasInput
    newsAsUniversitas?: NewsUncheckedCreateNestedManyWithoutAdminUniversitasInput
    authoredEvents?: EventUncheckedCreateNestedManyWithoutAuthorInput
    authoredNews?: NewsUncheckedCreateNestedManyWithoutAuthorInput
    prodiVerifications?: AlumniProgramUncheckedCreateNestedManyWithoutAdminProdiInput
    universityVerifications?: AlumniProgramUncheckedCreateNestedManyWithoutAdminUniversitasInput
    Profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutAlumniProgramsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAlumniProgramsInput, UserUncheckedCreateWithoutAlumniProgramsInput>
  }

  export type UserCreateWithoutProdiVerificationsInput = {
    id?: string
    username: string
    password: string
    profileId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    eventsAsUniversitas?: EventCreateNestedManyWithoutAdminUniversitasInput
    newsAsUniversitas?: NewsCreateNestedManyWithoutAdminUniversitasInput
    authoredEvents?: EventCreateNestedManyWithoutAuthorInput
    authoredNews?: NewsCreateNestedManyWithoutAuthorInput
    AlumniPrograms?: AlumniProgramCreateNestedManyWithoutAuthorInput
    universityVerifications?: AlumniProgramCreateNestedManyWithoutAdminUniversitasInput
    Profile?: ProfileCreateNestedOneWithoutUserInput
  }

  export type UserUncheckedCreateWithoutProdiVerificationsInput = {
    id?: string
    username: string
    password: string
    roleId: string
    profileId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    eventsAsUniversitas?: EventUncheckedCreateNestedManyWithoutAdminUniversitasInput
    newsAsUniversitas?: NewsUncheckedCreateNestedManyWithoutAdminUniversitasInput
    authoredEvents?: EventUncheckedCreateNestedManyWithoutAuthorInput
    authoredNews?: NewsUncheckedCreateNestedManyWithoutAuthorInput
    AlumniPrograms?: AlumniProgramUncheckedCreateNestedManyWithoutAuthorInput
    universityVerifications?: AlumniProgramUncheckedCreateNestedManyWithoutAdminUniversitasInput
    Profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutProdiVerificationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutProdiVerificationsInput, UserUncheckedCreateWithoutProdiVerificationsInput>
  }

  export type UserCreateWithoutUniversityVerificationsInput = {
    id?: string
    username: string
    password: string
    profileId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    eventsAsUniversitas?: EventCreateNestedManyWithoutAdminUniversitasInput
    newsAsUniversitas?: NewsCreateNestedManyWithoutAdminUniversitasInput
    authoredEvents?: EventCreateNestedManyWithoutAuthorInput
    authoredNews?: NewsCreateNestedManyWithoutAuthorInput
    AlumniPrograms?: AlumniProgramCreateNestedManyWithoutAuthorInput
    prodiVerifications?: AlumniProgramCreateNestedManyWithoutAdminProdiInput
    Profile?: ProfileCreateNestedOneWithoutUserInput
  }

  export type UserUncheckedCreateWithoutUniversityVerificationsInput = {
    id?: string
    username: string
    password: string
    roleId: string
    profileId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    eventsAsUniversitas?: EventUncheckedCreateNestedManyWithoutAdminUniversitasInput
    newsAsUniversitas?: NewsUncheckedCreateNestedManyWithoutAdminUniversitasInput
    authoredEvents?: EventUncheckedCreateNestedManyWithoutAuthorInput
    authoredNews?: NewsUncheckedCreateNestedManyWithoutAuthorInput
    AlumniPrograms?: AlumniProgramUncheckedCreateNestedManyWithoutAuthorInput
    prodiVerifications?: AlumniProgramUncheckedCreateNestedManyWithoutAdminProdiInput
    Profile?: ProfileUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutUniversityVerificationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUniversityVerificationsInput, UserUncheckedCreateWithoutUniversityVerificationsInput>
  }

  export type UserUpsertWithoutAlumniProgramsInput = {
    update: XOR<UserUpdateWithoutAlumniProgramsInput, UserUncheckedUpdateWithoutAlumniProgramsInput>
    create: XOR<UserCreateWithoutAlumniProgramsInput, UserUncheckedCreateWithoutAlumniProgramsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAlumniProgramsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAlumniProgramsInput, UserUncheckedUpdateWithoutAlumniProgramsInput>
  }

  export type UserUpdateWithoutAlumniProgramsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    profileId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    eventsAsUniversitas?: EventUpdateManyWithoutAdminUniversitasNestedInput
    newsAsUniversitas?: NewsUpdateManyWithoutAdminUniversitasNestedInput
    authoredEvents?: EventUpdateManyWithoutAuthorNestedInput
    authoredNews?: NewsUpdateManyWithoutAuthorNestedInput
    prodiVerifications?: AlumniProgramUpdateManyWithoutAdminProdiNestedInput
    universityVerifications?: AlumniProgramUpdateManyWithoutAdminUniversitasNestedInput
    Profile?: ProfileUpdateOneWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutAlumniProgramsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    roleId?: StringFieldUpdateOperationsInput | string
    profileId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    eventsAsUniversitas?: EventUncheckedUpdateManyWithoutAdminUniversitasNestedInput
    newsAsUniversitas?: NewsUncheckedUpdateManyWithoutAdminUniversitasNestedInput
    authoredEvents?: EventUncheckedUpdateManyWithoutAuthorNestedInput
    authoredNews?: NewsUncheckedUpdateManyWithoutAuthorNestedInput
    prodiVerifications?: AlumniProgramUncheckedUpdateManyWithoutAdminProdiNestedInput
    universityVerifications?: AlumniProgramUncheckedUpdateManyWithoutAdminUniversitasNestedInput
    Profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
  }

  export type UserUpsertWithoutProdiVerificationsInput = {
    update: XOR<UserUpdateWithoutProdiVerificationsInput, UserUncheckedUpdateWithoutProdiVerificationsInput>
    create: XOR<UserCreateWithoutProdiVerificationsInput, UserUncheckedCreateWithoutProdiVerificationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutProdiVerificationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutProdiVerificationsInput, UserUncheckedUpdateWithoutProdiVerificationsInput>
  }

  export type UserUpdateWithoutProdiVerificationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    profileId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    eventsAsUniversitas?: EventUpdateManyWithoutAdminUniversitasNestedInput
    newsAsUniversitas?: NewsUpdateManyWithoutAdminUniversitasNestedInput
    authoredEvents?: EventUpdateManyWithoutAuthorNestedInput
    authoredNews?: NewsUpdateManyWithoutAuthorNestedInput
    AlumniPrograms?: AlumniProgramUpdateManyWithoutAuthorNestedInput
    universityVerifications?: AlumniProgramUpdateManyWithoutAdminUniversitasNestedInput
    Profile?: ProfileUpdateOneWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutProdiVerificationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    roleId?: StringFieldUpdateOperationsInput | string
    profileId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    eventsAsUniversitas?: EventUncheckedUpdateManyWithoutAdminUniversitasNestedInput
    newsAsUniversitas?: NewsUncheckedUpdateManyWithoutAdminUniversitasNestedInput
    authoredEvents?: EventUncheckedUpdateManyWithoutAuthorNestedInput
    authoredNews?: NewsUncheckedUpdateManyWithoutAuthorNestedInput
    AlumniPrograms?: AlumniProgramUncheckedUpdateManyWithoutAuthorNestedInput
    universityVerifications?: AlumniProgramUncheckedUpdateManyWithoutAdminUniversitasNestedInput
    Profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
  }

  export type UserUpsertWithoutUniversityVerificationsInput = {
    update: XOR<UserUpdateWithoutUniversityVerificationsInput, UserUncheckedUpdateWithoutUniversityVerificationsInput>
    create: XOR<UserCreateWithoutUniversityVerificationsInput, UserUncheckedCreateWithoutUniversityVerificationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUniversityVerificationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUniversityVerificationsInput, UserUncheckedUpdateWithoutUniversityVerificationsInput>
  }

  export type UserUpdateWithoutUniversityVerificationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    profileId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    eventsAsUniversitas?: EventUpdateManyWithoutAdminUniversitasNestedInput
    newsAsUniversitas?: NewsUpdateManyWithoutAdminUniversitasNestedInput
    authoredEvents?: EventUpdateManyWithoutAuthorNestedInput
    authoredNews?: NewsUpdateManyWithoutAuthorNestedInput
    AlumniPrograms?: AlumniProgramUpdateManyWithoutAuthorNestedInput
    prodiVerifications?: AlumniProgramUpdateManyWithoutAdminProdiNestedInput
    Profile?: ProfileUpdateOneWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutUniversityVerificationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    roleId?: StringFieldUpdateOperationsInput | string
    profileId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    eventsAsUniversitas?: EventUncheckedUpdateManyWithoutAdminUniversitasNestedInput
    newsAsUniversitas?: NewsUncheckedUpdateManyWithoutAdminUniversitasNestedInput
    authoredEvents?: EventUncheckedUpdateManyWithoutAuthorNestedInput
    authoredNews?: NewsUncheckedUpdateManyWithoutAuthorNestedInput
    AlumniPrograms?: AlumniProgramUncheckedUpdateManyWithoutAuthorNestedInput
    prodiVerifications?: AlumniProgramUncheckedUpdateManyWithoutAdminProdiNestedInput
    Profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
  }

  export type ProfileCreateWithoutTracer_studyInput = {
    id?: string
    image: string
    full_name: string
    student_identification_number: string
    year_graduated?: Date | string | null
    work?: string | null
    skills?: string | null
    entrepreneur?: string | null
    competencies?: string | null
    career?: string | null
    company?: string | null
    linkedin?: string | null
    is_alumni_leader?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutProfileInput
    studyProgram: StudyProgramCreateNestedOneWithoutProfilesInput
    sensitive_student_data?: SensitiveStudentDataCreateNestedOneWithoutProfileInput
  }

  export type ProfileUncheckedCreateWithoutTracer_studyInput = {
    id?: string
    user_id: string
    image: string
    full_name: string
    student_identification_number: string
    study_program_id: string
    year_graduated?: Date | string | null
    work?: string | null
    skills?: string | null
    entrepreneur?: string | null
    competencies?: string | null
    career?: string | null
    company?: string | null
    linkedin?: string | null
    is_alumni_leader?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    sensitive_student_data?: SensitiveStudentDataUncheckedCreateNestedOneWithoutProfileInput
  }

  export type ProfileCreateOrConnectWithoutTracer_studyInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutTracer_studyInput, ProfileUncheckedCreateWithoutTracer_studyInput>
  }

  export type ProfileUpsertWithoutTracer_studyInput = {
    update: XOR<ProfileUpdateWithoutTracer_studyInput, ProfileUncheckedUpdateWithoutTracer_studyInput>
    create: XOR<ProfileCreateWithoutTracer_studyInput, ProfileUncheckedCreateWithoutTracer_studyInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutTracer_studyInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutTracer_studyInput, ProfileUncheckedUpdateWithoutTracer_studyInput>
  }

  export type ProfileUpdateWithoutTracer_studyInput = {
    id?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    full_name?: StringFieldUpdateOperationsInput | string
    student_identification_number?: StringFieldUpdateOperationsInput | string
    year_graduated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    work?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    entrepreneur?: NullableStringFieldUpdateOperationsInput | string | null
    competencies?: NullableStringFieldUpdateOperationsInput | string | null
    career?: NullableStringFieldUpdateOperationsInput | string | null
    company?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    is_alumni_leader?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutProfileNestedInput
    studyProgram?: StudyProgramUpdateOneRequiredWithoutProfilesNestedInput
    sensitive_student_data?: SensitiveStudentDataUpdateOneWithoutProfileNestedInput
  }

  export type ProfileUncheckedUpdateWithoutTracer_studyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    full_name?: StringFieldUpdateOperationsInput | string
    student_identification_number?: StringFieldUpdateOperationsInput | string
    study_program_id?: StringFieldUpdateOperationsInput | string
    year_graduated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    work?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    entrepreneur?: NullableStringFieldUpdateOperationsInput | string | null
    competencies?: NullableStringFieldUpdateOperationsInput | string | null
    career?: NullableStringFieldUpdateOperationsInput | string | null
    company?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    is_alumni_leader?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sensitive_student_data?: SensitiveStudentDataUncheckedUpdateOneWithoutProfileNestedInput
  }

  export type ProductCreateWithoutCategoryInput = {
    id?: string
    name: string
    description?: string | null
    price: number
    image: string
    stock?: number
    countReview?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductUncheckedCreateWithoutCategoryInput = {
    id?: string
    name: string
    description?: string | null
    price: number
    image: string
    stock?: number
    countReview?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductCreateOrConnectWithoutCategoryInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutCategoryInput, ProductUncheckedCreateWithoutCategoryInput>
  }

  export type ProductCreateManyCategoryInputEnvelope = {
    data: ProductCreateManyCategoryInput | ProductCreateManyCategoryInput[]
    skipDuplicates?: boolean
  }

  export type ProductUpsertWithWhereUniqueWithoutCategoryInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutCategoryInput, ProductUncheckedUpdateWithoutCategoryInput>
    create: XOR<ProductCreateWithoutCategoryInput, ProductUncheckedCreateWithoutCategoryInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutCategoryInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutCategoryInput, ProductUncheckedUpdateWithoutCategoryInput>
  }

  export type ProductUpdateManyWithWhereWithoutCategoryInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutCategoryInput>
  }

  export type ProductScalarWhereInput = {
    AND?: ProductScalarWhereInput | ProductScalarWhereInput[]
    OR?: ProductScalarWhereInput[]
    NOT?: ProductScalarWhereInput | ProductScalarWhereInput[]
    id?: StringFilter<"Product"> | string
    name?: StringFilter<"Product"> | string
    description?: StringNullableFilter<"Product"> | string | null
    price?: IntFilter<"Product"> | number
    categoryId?: IntFilter<"Product"> | number
    image?: StringFilter<"Product"> | string
    stock?: IntFilter<"Product"> | number
    countReview?: IntFilter<"Product"> | number
    createdAt?: DateTimeFilter<"Product"> | Date | string
    updatedAt?: DateTimeFilter<"Product"> | Date | string
  }

  export type CategoryCreateWithoutProductInput = {
    name: string
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CategoryUncheckedCreateWithoutProductInput = {
    id?: number
    name: string
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CategoryCreateOrConnectWithoutProductInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutProductInput, CategoryUncheckedCreateWithoutProductInput>
  }

  export type CategoryUpsertWithoutProductInput = {
    update: XOR<CategoryUpdateWithoutProductInput, CategoryUncheckedUpdateWithoutProductInput>
    create: XOR<CategoryCreateWithoutProductInput, CategoryUncheckedCreateWithoutProductInput>
    where?: CategoryWhereInput
  }

  export type CategoryUpdateToOneWithWhereWithoutProductInput = {
    where?: CategoryWhereInput
    data: XOR<CategoryUpdateWithoutProductInput, CategoryUncheckedUpdateWithoutProductInput>
  }

  export type CategoryUpdateWithoutProductInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryUncheckedUpdateWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EventCreateManyAdminUniversitasInput = {
    id?: string
    title: string
    date: Date | string
    description?: string | null
    image: string
    createdAt?: Date | string
    updatedAt?: Date | string
    EventStatus?: $Enums.EventStatus
    rejectionReason?: string | null
    authorId: string
    isActive?: boolean
  }

  export type NewsCreateManyAdminUniversitasInput = {
    id?: string
    title: string
    content: string
    image: string
    createdAt?: Date | string
    updatedAt?: Date | string
    NewsStatus?: $Enums.NewsStatus
    rejectionReason?: string | null
    authorId: string
    isActive?: boolean
  }

  export type EventCreateManyAuthorInput = {
    id?: string
    title: string
    date: Date | string
    description?: string | null
    image: string
    createdAt?: Date | string
    updatedAt?: Date | string
    EventStatus?: $Enums.EventStatus
    rejectionReason?: string | null
    adminUniversitasId?: string | null
    isActive?: boolean
  }

  export type NewsCreateManyAuthorInput = {
    id?: string
    title: string
    content: string
    image: string
    createdAt?: Date | string
    updatedAt?: Date | string
    NewsStatus?: $Enums.NewsStatus
    rejectionReason?: string | null
    adminUniversitasId?: string | null
    isActive?: boolean
  }

  export type AlumniProgramCreateManyAuthorInput = {
    id?: string
    title: string
    description: string
    image?: string | null
    category: $Enums.ProgramType
    AlumniProgramStatus?: $Enums.AlumniProgramStatus
    rejectionReason?: string | null
    adminProdiId?: string | null
    adminUniversitasId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isActive?: boolean
  }

  export type AlumniProgramCreateManyAdminProdiInput = {
    id?: string
    title: string
    description: string
    image?: string | null
    category: $Enums.ProgramType
    AlumniProgramStatus?: $Enums.AlumniProgramStatus
    rejectionReason?: string | null
    authorId: string
    adminUniversitasId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isActive?: boolean
  }

  export type AlumniProgramCreateManyAdminUniversitasInput = {
    id?: string
    title: string
    description: string
    image?: string | null
    category: $Enums.ProgramType
    AlumniProgramStatus?: $Enums.AlumniProgramStatus
    rejectionReason?: string | null
    authorId: string
    adminProdiId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isActive?: boolean
  }

  export type EventUpdateWithoutAdminUniversitasInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    EventStatus?: EnumEventStatusFieldUpdateOperationsInput | $Enums.EventStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    author?: UserUpdateOneRequiredWithoutAuthoredEventsNestedInput
  }

  export type EventUncheckedUpdateWithoutAdminUniversitasInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    EventStatus?: EnumEventStatusFieldUpdateOperationsInput | $Enums.EventStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    authorId?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type EventUncheckedUpdateManyWithoutAdminUniversitasInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    EventStatus?: EnumEventStatusFieldUpdateOperationsInput | $Enums.EventStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    authorId?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type NewsUpdateWithoutAdminUniversitasInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    NewsStatus?: EnumNewsStatusFieldUpdateOperationsInput | $Enums.NewsStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    author?: UserUpdateOneRequiredWithoutAuthoredNewsNestedInput
  }

  export type NewsUncheckedUpdateWithoutAdminUniversitasInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    NewsStatus?: EnumNewsStatusFieldUpdateOperationsInput | $Enums.NewsStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    authorId?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type NewsUncheckedUpdateManyWithoutAdminUniversitasInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    NewsStatus?: EnumNewsStatusFieldUpdateOperationsInput | $Enums.NewsStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    authorId?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type EventUpdateWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    EventStatus?: EnumEventStatusFieldUpdateOperationsInput | $Enums.EventStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    adminUniversitas?: UserUpdateOneWithoutEventsAsUniversitasNestedInput
  }

  export type EventUncheckedUpdateWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    EventStatus?: EnumEventStatusFieldUpdateOperationsInput | $Enums.EventStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    adminUniversitasId?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type EventUncheckedUpdateManyWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    EventStatus?: EnumEventStatusFieldUpdateOperationsInput | $Enums.EventStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    adminUniversitasId?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type NewsUpdateWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    NewsStatus?: EnumNewsStatusFieldUpdateOperationsInput | $Enums.NewsStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    adminUniversitas?: UserUpdateOneWithoutNewsAsUniversitasNestedInput
  }

  export type NewsUncheckedUpdateWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    NewsStatus?: EnumNewsStatusFieldUpdateOperationsInput | $Enums.NewsStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    adminUniversitasId?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type NewsUncheckedUpdateManyWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    NewsStatus?: EnumNewsStatusFieldUpdateOperationsInput | $Enums.NewsStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    adminUniversitasId?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type AlumniProgramUpdateWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumProgramTypeFieldUpdateOperationsInput | $Enums.ProgramType
    AlumniProgramStatus?: EnumAlumniProgramStatusFieldUpdateOperationsInput | $Enums.AlumniProgramStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    adminProdi?: UserUpdateOneWithoutProdiVerificationsNestedInput
    adminUniversitas?: UserUpdateOneWithoutUniversityVerificationsNestedInput
  }

  export type AlumniProgramUncheckedUpdateWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumProgramTypeFieldUpdateOperationsInput | $Enums.ProgramType
    AlumniProgramStatus?: EnumAlumniProgramStatusFieldUpdateOperationsInput | $Enums.AlumniProgramStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    adminProdiId?: NullableStringFieldUpdateOperationsInput | string | null
    adminUniversitasId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type AlumniProgramUncheckedUpdateManyWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumProgramTypeFieldUpdateOperationsInput | $Enums.ProgramType
    AlumniProgramStatus?: EnumAlumniProgramStatusFieldUpdateOperationsInput | $Enums.AlumniProgramStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    adminProdiId?: NullableStringFieldUpdateOperationsInput | string | null
    adminUniversitasId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type AlumniProgramUpdateWithoutAdminProdiInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumProgramTypeFieldUpdateOperationsInput | $Enums.ProgramType
    AlumniProgramStatus?: EnumAlumniProgramStatusFieldUpdateOperationsInput | $Enums.AlumniProgramStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    author?: UserUpdateOneRequiredWithoutAlumniProgramsNestedInput
    adminUniversitas?: UserUpdateOneWithoutUniversityVerificationsNestedInput
  }

  export type AlumniProgramUncheckedUpdateWithoutAdminProdiInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumProgramTypeFieldUpdateOperationsInput | $Enums.ProgramType
    AlumniProgramStatus?: EnumAlumniProgramStatusFieldUpdateOperationsInput | $Enums.AlumniProgramStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    authorId?: StringFieldUpdateOperationsInput | string
    adminUniversitasId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type AlumniProgramUncheckedUpdateManyWithoutAdminProdiInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumProgramTypeFieldUpdateOperationsInput | $Enums.ProgramType
    AlumniProgramStatus?: EnumAlumniProgramStatusFieldUpdateOperationsInput | $Enums.AlumniProgramStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    authorId?: StringFieldUpdateOperationsInput | string
    adminUniversitasId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type AlumniProgramUpdateWithoutAdminUniversitasInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumProgramTypeFieldUpdateOperationsInput | $Enums.ProgramType
    AlumniProgramStatus?: EnumAlumniProgramStatusFieldUpdateOperationsInput | $Enums.AlumniProgramStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    author?: UserUpdateOneRequiredWithoutAlumniProgramsNestedInput
    adminProdi?: UserUpdateOneWithoutProdiVerificationsNestedInput
  }

  export type AlumniProgramUncheckedUpdateWithoutAdminUniversitasInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumProgramTypeFieldUpdateOperationsInput | $Enums.ProgramType
    AlumniProgramStatus?: EnumAlumniProgramStatusFieldUpdateOperationsInput | $Enums.AlumniProgramStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    authorId?: StringFieldUpdateOperationsInput | string
    adminProdiId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type AlumniProgramUncheckedUpdateManyWithoutAdminUniversitasInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumProgramTypeFieldUpdateOperationsInput | $Enums.ProgramType
    AlumniProgramStatus?: EnumAlumniProgramStatusFieldUpdateOperationsInput | $Enums.AlumniProgramStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    authorId?: StringFieldUpdateOperationsInput | string
    adminProdiId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type UserCreateManyRoleInput = {
    id?: string
    username: string
    password: string
    profileId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserUpdateWithoutRoleInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    profileId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    eventsAsUniversitas?: EventUpdateManyWithoutAdminUniversitasNestedInput
    newsAsUniversitas?: NewsUpdateManyWithoutAdminUniversitasNestedInput
    authoredEvents?: EventUpdateManyWithoutAuthorNestedInput
    authoredNews?: NewsUpdateManyWithoutAuthorNestedInput
    AlumniPrograms?: AlumniProgramUpdateManyWithoutAuthorNestedInput
    prodiVerifications?: AlumniProgramUpdateManyWithoutAdminProdiNestedInput
    universityVerifications?: AlumniProgramUpdateManyWithoutAdminUniversitasNestedInput
    Profile?: ProfileUpdateOneWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutRoleInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    profileId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    eventsAsUniversitas?: EventUncheckedUpdateManyWithoutAdminUniversitasNestedInput
    newsAsUniversitas?: NewsUncheckedUpdateManyWithoutAdminUniversitasNestedInput
    authoredEvents?: EventUncheckedUpdateManyWithoutAuthorNestedInput
    authoredNews?: NewsUncheckedUpdateManyWithoutAuthorNestedInput
    AlumniPrograms?: AlumniProgramUncheckedUpdateManyWithoutAuthorNestedInput
    prodiVerifications?: AlumniProgramUncheckedUpdateManyWithoutAdminProdiNestedInput
    universityVerifications?: AlumniProgramUncheckedUpdateManyWithoutAdminUniversitasNestedInput
    Profile?: ProfileUncheckedUpdateOneWithoutUserNestedInput
  }

  export type UserUncheckedUpdateManyWithoutRoleInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    profileId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProfileCreateManyStudyProgramInput = {
    id?: string
    user_id: string
    image: string
    full_name: string
    student_identification_number: string
    year_graduated?: Date | string | null
    work?: string | null
    skills?: string | null
    entrepreneur?: string | null
    competencies?: string | null
    career?: string | null
    company?: string | null
    linkedin?: string | null
    is_alumni_leader?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProfileUpdateWithoutStudyProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    full_name?: StringFieldUpdateOperationsInput | string
    student_identification_number?: StringFieldUpdateOperationsInput | string
    year_graduated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    work?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    entrepreneur?: NullableStringFieldUpdateOperationsInput | string | null
    competencies?: NullableStringFieldUpdateOperationsInput | string | null
    career?: NullableStringFieldUpdateOperationsInput | string | null
    company?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    is_alumni_leader?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutProfileNestedInput
    sensitive_student_data?: SensitiveStudentDataUpdateOneWithoutProfileNestedInput
    tracer_study?: TracerStudyUpdateOneWithoutProfileNestedInput
  }

  export type ProfileUncheckedUpdateWithoutStudyProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    full_name?: StringFieldUpdateOperationsInput | string
    student_identification_number?: StringFieldUpdateOperationsInput | string
    year_graduated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    work?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    entrepreneur?: NullableStringFieldUpdateOperationsInput | string | null
    competencies?: NullableStringFieldUpdateOperationsInput | string | null
    career?: NullableStringFieldUpdateOperationsInput | string | null
    company?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    is_alumni_leader?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sensitive_student_data?: SensitiveStudentDataUncheckedUpdateOneWithoutProfileNestedInput
    tracer_study?: TracerStudyUncheckedUpdateOneWithoutProfileNestedInput
  }

  export type ProfileUncheckedUpdateManyWithoutStudyProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    full_name?: StringFieldUpdateOperationsInput | string
    student_identification_number?: StringFieldUpdateOperationsInput | string
    year_graduated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    work?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    entrepreneur?: NullableStringFieldUpdateOperationsInput | string | null
    competencies?: NullableStringFieldUpdateOperationsInput | string | null
    career?: NullableStringFieldUpdateOperationsInput | string | null
    company?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin?: NullableStringFieldUpdateOperationsInput | string | null
    is_alumni_leader?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductCreateManyCategoryInput = {
    id?: string
    name: string
    description?: string | null
    price: number
    image: string
    stock?: number
    countReview?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: IntFieldUpdateOperationsInput | number
    image?: StringFieldUpdateOperationsInput | string
    stock?: IntFieldUpdateOperationsInput | number
    countReview?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductUncheckedUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: IntFieldUpdateOperationsInput | number
    image?: StringFieldUpdateOperationsInput | string
    stock?: IntFieldUpdateOperationsInput | number
    countReview?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductUncheckedUpdateManyWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: IntFieldUpdateOperationsInput | number
    image?: StringFieldUpdateOperationsInput | string
    stock?: IntFieldUpdateOperationsInput | number
    countReview?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use UserCountOutputTypeDefaultArgs instead
     */
    export type UserCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use RoleCountOutputTypeDefaultArgs instead
     */
    export type RoleCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = RoleCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use StudyProgramCountOutputTypeDefaultArgs instead
     */
    export type StudyProgramCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = StudyProgramCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CategoryCountOutputTypeDefaultArgs instead
     */
    export type CategoryCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CategoryCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserDefaultArgs instead
     */
    export type UserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserDefaultArgs<ExtArgs>
    /**
     * @deprecated Use RoleDefaultArgs instead
     */
    export type RoleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = RoleDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProfileDefaultArgs instead
     */
    export type ProfileArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProfileDefaultArgs<ExtArgs>
    /**
     * @deprecated Use StudyProgramDefaultArgs instead
     */
    export type StudyProgramArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = StudyProgramDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SensitiveStudentDataDefaultArgs instead
     */
    export type SensitiveStudentDataArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SensitiveStudentDataDefaultArgs<ExtArgs>
    /**
     * @deprecated Use NewsDefaultArgs instead
     */
    export type NewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = NewsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use EventDefaultArgs instead
     */
    export type EventArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = EventDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AlumniProgramDefaultArgs instead
     */
    export type AlumniProgramArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AlumniProgramDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TracerStudyDefaultArgs instead
     */
    export type TracerStudyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TracerStudyDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CategoryDefaultArgs instead
     */
    export type CategoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CategoryDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProductDefaultArgs instead
     */
    export type ProductArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProductDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}